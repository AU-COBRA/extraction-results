Module *
Contract CounterCertifiedExtraction
Contract CounterDepCertifiedExtraction
Contract CounterSubsetTypes
Contract CrowdfundingCertifiedExtraction
Contract StackInterpreter
Contract Escrow
Main contract Liquidity_eip20token
./tests/extracted-code/liquidity-extract/tests/CounterCertifiedExtraction.liq: Warning: 
unused variable "powInt"
./tests/extracted-code/liquidity-extract/tests/CounterCertifiedExtraction.liq: Warning: 
unused variable "modInt"
./tests/extracted-code/liquidity-extract/tests/CounterCertifiedExtraction.liq: Warning: 
unused variable "eqInt"
./tests/extracted-code/liquidity-extract/tests/CounterCertifiedExtraction.liq: Warning: 
unused variable "ltInt"
./tests/extracted-code/liquidity-extract/tests/CounterCertifiedExtraction.liq: Warning: 
unused variable "mulInt"
./tests/extracted-code/liquidity-extract/tests/CounterCertifiedExtraction.liq: Warning: 
unused variable "snd"
./tests/extracted-code/liquidity-extract/tests/CounterCertifiedExtraction.liq: Warning: 
unused variable "fst"
./tests/extracted-code/liquidity-extract/tests/CounterCertifiedExtraction.liq:41.65-41.69: Warning: 
unused variable "ctx'"
./tests/extracted-code/liquidity-extract/tests/CounterDepCertifiedExtraction.liq: Warning: 
unused variable "powInt"
./tests/extracted-code/liquidity-extract/tests/CounterDepCertifiedExtraction.liq: Warning: 
unused variable "modInt"
./tests/extracted-code/liquidity-extract/tests/CounterDepCertifiedExtraction.liq: Warning: 
unused variable "eqInt"
./tests/extracted-code/liquidity-extract/tests/CounterDepCertifiedExtraction.liq: Warning: 
unused variable "ltInt"
./tests/extracted-code/liquidity-extract/tests/CounterDepCertifiedExtraction.liq: Warning: 
unused variable "mulInt"
./tests/extracted-code/liquidity-extract/tests/CounterDepCertifiedExtraction.liq: Warning: 
unused variable "snd"
./tests/extracted-code/liquidity-extract/tests/CounterDepCertifiedExtraction.liq: Warning: 
unused variable "fst"
./tests/extracted-code/liquidity-extract/tests/CounterDepCertifiedExtraction.liq:52.69-52.73: Warning: 
unused variable "ctx'"
./tests/extracted-code/liquidity-extract/tests/CounterSubsetTypes.liq: Warning: 
unused variable "exist_"
./tests/extracted-code/liquidity-extract/tests/CounterSubsetTypes.liq: Warning: 
unused variable "powInt"
./tests/extracted-code/liquidity-extract/tests/CounterSubsetTypes.liq: Warning: 
unused variable "modInt"
./tests/extracted-code/liquidity-extract/tests/CounterSubsetTypes.liq: Warning: 
unused variable "eqInt"
./tests/extracted-code/liquidity-extract/tests/CounterSubsetTypes.liq: Warning: 
unused variable "leInt"
./tests/extracted-code/liquidity-extract/tests/CounterSubsetTypes.liq: Warning: 
unused variable "mulInt"
./tests/extracted-code/liquidity-extract/tests/CounterSubsetTypes.liq: Warning: 
unused variable "snd"
./tests/extracted-code/liquidity-extract/tests/CounterSubsetTypes.liq: Warning: 
unused variable "fst"
./tests/extracted-code/liquidity-extract/tests/CounterSubsetTypes.liq:54.56-54.60: Warning: 
unused variable "ctx_"
./tests/extracted-code/liquidity-extract/tests/CrowdfundingCertifiedExtraction.liq: Warning: 
unused variable "eqb_time"
./tests/extracted-code/liquidity-extract/tests/CrowdfundingCertifiedExtraction.liq: Warning: 
unused variable "orb"
./tests/extracted-code/liquidity-extract/tests/CrowdfundingCertifiedExtraction.liq: Warning: 
unused variable "eqNat"
./tests/extracted-code/liquidity-extract/tests/CrowdfundingCertifiedExtraction.liq: Warning: 
unused variable "lxorNat"
./tests/extracted-code/liquidity-extract/tests/CrowdfundingCertifiedExtraction.liq: Warning: 
unused variable "ltNat"
./tests/extracted-code/liquidity-extract/tests/CrowdfundingCertifiedExtraction.liq: Warning: 
unused variable "leNat"
./tests/extracted-code/liquidity-extract/tests/CrowdfundingCertifiedExtraction.liq: Warning: 
unused variable "subNat"
./tests/extracted-code/liquidity-extract/tests/CrowdfundingCertifiedExtraction.liq: Warning: 
unused variable "mulNat"
./tests/extracted-code/liquidity-extract/tests/CrowdfundingCertifiedExtraction.liq: Warning: 
unused variable "addNat"
./tests/extracted-code/liquidity-extract/tests/CrowdfundingCertifiedExtraction.liq: Warning: 
unused variable "multTez"
./tests/extracted-code/liquidity-extract/tests/CrowdfundingCertifiedExtraction.liq: Warning: 
unused variable "divTez"
./tests/extracted-code/liquidity-extract/tests/CrowdfundingCertifiedExtraction.liq: Warning: 
unused variable "evenTez"
./tests/extracted-code/liquidity-extract/tests/CrowdfundingCertifiedExtraction.liq: Warning: 
unused variable "gtTez"
./tests/extracted-code/liquidity-extract/tests/CrowdfundingCertifiedExtraction.liq: Warning: 
unused variable "subTez"
./tests/extracted-code/liquidity-extract/tests/CrowdfundingCertifiedExtraction.liq: Warning: 
unused variable "powInt"
./tests/extracted-code/liquidity-extract/tests/CrowdfundingCertifiedExtraction.liq: Warning: 
unused variable "modInt"
./tests/extracted-code/liquidity-extract/tests/CrowdfundingCertifiedExtraction.liq: Warning: 
unused variable "eqInt"
./tests/extracted-code/liquidity-extract/tests/CrowdfundingCertifiedExtraction.liq: Warning: 
unused variable "ltInt"
./tests/extracted-code/liquidity-extract/tests/CrowdfundingCertifiedExtraction.liq: Warning: 
unused variable "leInt"
./tests/extracted-code/liquidity-extract/tests/CrowdfundingCertifiedExtraction.liq: Warning: 
unused variable "subInt"
./tests/extracted-code/liquidity-extract/tests/CrowdfundingCertifiedExtraction.liq: Warning: 
unused variable "mulInt"
./tests/extracted-code/liquidity-extract/tests/CrowdfundingCertifiedExtraction.liq: Warning: 
unused variable "addInt"
./tests/extracted-code/liquidity-extract/tests/CrowdfundingCertifiedExtraction.liq: Warning: 
unused variable "snd"
./tests/extracted-code/liquidity-extract/tests/CrowdfundingCertifiedExtraction.liq: Warning: 
unused variable "fst"
./tests/extracted-code/liquidity-extract/tests/CrowdfundingCertifiedExtraction.liq:92.4-92.7: Warning: 
unused variable "snd"
./tests/extracted-code/liquidity-extract/tests/CrowdfundingCertifiedExtraction.liq:91.63-91.66: Warning: 
unused variable "fst"
./tests/extracted-code/liquidity-extract/tests/StackInterpreter.liq:74.16-76.38: Warning: 
unused variable "z0"
./tests/extracted-code/liquidity-extract/tests/StackInterpreter.liq:82.15-88.78: Warning: 
unused variable "b0"
./tests/extracted-code/liquidity-extract/tests/StackInterpreter.liq:86.17-88.76: Warning: 
unused variable "b0"
./tests/extracted-code/liquidity-extract/tests/StackInterpreter.liq:91.15-97.78: Warning: 
unused variable "b0"
./tests/extracted-code/liquidity-extract/tests/StackInterpreter.liq:95.17-97.76: Warning: 
unused variable "b0"
./tests/extracted-code/liquidity-extract/tests/StackInterpreter.liq:100.15-106.78: Warning: 
unused variable "b0"
./tests/extracted-code/liquidity-extract/tests/StackInterpreter.liq:104.17-106.76: Warning: 
unused variable "b0"
./tests/extracted-code/liquidity-extract/tests/StackInterpreter.liq:109.15-115.77: Warning: 
unused variable "b0"
./tests/extracted-code/liquidity-extract/tests/StackInterpreter.liq:113.17-115.75: Warning: 
unused variable "b0"
./tests/extracted-code/liquidity-extract/tests/StackInterpreter.liq:118.15-124.77: Warning: 
unused variable "b0"
./tests/extracted-code/liquidity-extract/tests/StackInterpreter.liq:122.17-124.75: Warning: 
unused variable "b0"
./tests/extracted-code/liquidity-extract/tests/StackInterpreter.liq:127.15-133.77: Warning: 
unused variable "b0"
./tests/extracted-code/liquidity-extract/tests/StackInterpreter.liq:131.17-133.75: Warning: 
unused variable "b0"
./tests/extracted-code/liquidity-extract/tests/StackInterpreter.liq:136.45-136.47: Warning: 
unused variable "s0"
./tests/extracted-code/liquidity-extract/tests/StackInterpreter.liq: Warning: 
unused variable "orb"
./tests/extracted-code/liquidity-extract/tests/StackInterpreter.liq: Warning: 
unused variable "andb"
./tests/extracted-code/liquidity-extract/tests/StackInterpreter.liq: Warning: 
unused variable "powInt"
./tests/extracted-code/liquidity-extract/tests/StackInterpreter.liq: Warning: 
unused variable "modInt"
./tests/extracted-code/liquidity-extract/tests/StackInterpreter.liq: Warning: 
unused variable "snd"
./tests/extracted-code/liquidity-extract/tests/StackInterpreter.liq: Warning: 
unused variable "fst"
./tests/extracted-code/liquidity-extract/tests/StackInterpreter.liq:143.4-143.10: Warning: 
unused variable "setup0"
./tests/extracted-code/liquidity-extract/tests/StackInterpreter.liq:142.53-142.57: Warning: 
unused variable "ctx0"
./tests/extracted-code/liquidity-extract/tests/escrow.liq:98.11-100.26: Warning: 
unused variable "t2"
./tests/extracted-code/liquidity-extract/tests/escrow.liq:97.0-101.25: Warning: 
unused variable "t1"
./tests/extracted-code/liquidity-extract/tests/escrow.liq:110.11-113.26: Warning: 
unused variable "t1"
./tests/extracted-code/liquidity-extract/tests/escrow.liq:109.0-114.25: Warning: 
unused variable "t0"
./tests/extracted-code/liquidity-extract/tests/escrow.liq:120.11-123.26: Warning: 
unused variable "t2"
./tests/extracted-code/liquidity-extract/tests/escrow.liq:119.11-124.26: Warning: 
unused variable "t1"
./tests/extracted-code/liquidity-extract/tests/escrow.liq:118.17-125.26: Warning: 
unused variable "t0"
./tests/extracted-code/liquidity-extract/tests/escrow.liq:130.45-133.26: Warning: 
unused variable "t2"
./tests/extracted-code/liquidity-extract/tests/escrow.liq:127.19-135.26: Warning: 
unused variable "t0"
./tests/extracted-code/liquidity-extract/tests/escrow.liq: Warning: unused variable "ltb_time"
./tests/extracted-code/liquidity-extract/tests/escrow.liq: Warning: unused variable "leb_time"
./tests/extracted-code/liquidity-extract/tests/escrow.liq: Warning: unused variable "eqb_time"
./tests/extracted-code/liquidity-extract/tests/escrow.liq: Warning: unused variable "orb"
./tests/extracted-code/liquidity-extract/tests/escrow.liq: Warning: unused variable "eqNat"
./tests/extracted-code/liquidity-extract/tests/escrow.liq: Warning: unused variable "lxorNat"
./tests/extracted-code/liquidity-extract/tests/escrow.liq: Warning: unused variable "leNat"
./tests/extracted-code/liquidity-extract/tests/escrow.liq: Warning: unused variable "subNat"
./tests/extracted-code/liquidity-extract/tests/escrow.liq: Warning: unused variable "mulNat"
./tests/extracted-code/liquidity-extract/tests/escrow.liq: Warning: unused variable "evenTez"
./tests/extracted-code/liquidity-extract/tests/escrow.liq: Warning: unused variable "leTez"
./tests/extracted-code/liquidity-extract/tests/escrow.liq: Warning: unused variable "addTez"
./tests/extracted-code/liquidity-extract/tests/escrow.liq: Warning: unused variable "powInt"
./tests/extracted-code/liquidity-extract/tests/escrow.liq: Warning: unused variable "modInt"
./tests/extracted-code/liquidity-extract/tests/escrow.liq: Warning: unused variable "eqInt"
./tests/extracted-code/liquidity-extract/tests/escrow.liq: Warning: unused variable "ltInt"
./tests/extracted-code/liquidity-extract/tests/escrow.liq: Warning: unused variable "leInt"
./tests/extracted-code/liquidity-extract/tests/escrow.liq: Warning: unused variable "subInt"
./tests/extracted-code/liquidity-extract/tests/escrow.liq: Warning: unused variable "mulInt"
./tests/extracted-code/liquidity-extract/tests/escrow.liq: Warning: unused variable "addInt"
./tests/extracted-code/liquidity-extract/tests/escrow.liq: Warning: unused variable "snd"
./tests/extracted-code/liquidity-extract/tests/escrow.liq: Warning: unused variable "fst"
./tests/extracted-code/liquidity-extract/tests/escrow.liq:154.11-156.26: Warning: 
unused variable "t2"
./tests/extracted-code/liquidity-extract/tests/escrow.liq:153.11-157.26: Warning: 
unused variable "t1"
./tests/extracted-code/liquidity-extract/tests/escrow.liq:152.0-158.25: Warning: 
unused variable "t0"
./tests/extracted-code/liquidity-extract/tests/escrow.liq:147.4-147.8: Warning: 
unused variable "andb"
./tests/extracted-code/liquidity-extract/tests/liquidity_eip20token.liq:78.11-78.12: Warning: 
unused variable "t"
./tests/extracted-code/liquidity-extract/tests/liquidity_eip20token.liq: Warning: 
unused variable "eq_addr"
./tests/extracted-code/liquidity-extract/tests/liquidity_eip20token.liq: Warning: 
unused variable "ltb_time"
./tests/extracted-code/liquidity-extract/tests/liquidity_eip20token.liq: Warning: 
unused variable "leb_time"
./tests/extracted-code/liquidity-extract/tests/liquidity_eip20token.liq: Warning: 
unused variable "eqb_time"
./tests/extracted-code/liquidity-extract/tests/liquidity_eip20token.liq: Warning: 
unused variable "andb"
./tests/extracted-code/liquidity-extract/tests/liquidity_eip20token.liq: Warning: 
unused variable "eqNat"
./tests/extracted-code/liquidity-extract/tests/liquidity_eip20token.liq: Warning: 
unused variable "lxorNat"
./tests/extracted-code/liquidity-extract/tests/liquidity_eip20token.liq: Warning: 
unused variable "ltNat"
./tests/extracted-code/liquidity-extract/tests/liquidity_eip20token.liq: Warning: 
unused variable "leNat"
./tests/extracted-code/liquidity-extract/tests/liquidity_eip20token.liq: Warning: 
unused variable "subNat"
./tests/extracted-code/liquidity-extract/tests/liquidity_eip20token.liq: Warning: 
unused variable "mulNat"
./tests/extracted-code/liquidity-extract/tests/liquidity_eip20token.liq: Warning: 
unused variable "addNat"
./tests/extracted-code/liquidity-extract/tests/liquidity_eip20token.liq: Warning: 
unused variable "multTez"
./tests/extracted-code/liquidity-extract/tests/liquidity_eip20token.liq: Warning: 
unused variable "divTez"
./tests/extracted-code/liquidity-extract/tests/liquidity_eip20token.liq: Warning: 
unused variable "evenTez"
./tests/extracted-code/liquidity-extract/tests/liquidity_eip20token.liq: Warning: 
unused variable "eqTez"
./tests/extracted-code/liquidity-extract/tests/liquidity_eip20token.liq: Warning: 
unused variable "gtTez"
./tests/extracted-code/liquidity-extract/tests/liquidity_eip20token.liq: Warning: 
unused variable "ltTez"
./tests/extracted-code/liquidity-extract/tests/liquidity_eip20token.liq: Warning: 
unused variable "leTez"
./tests/extracted-code/liquidity-extract/tests/liquidity_eip20token.liq: Warning: 
unused variable "subTez"
./tests/extracted-code/liquidity-extract/tests/liquidity_eip20token.liq: Warning: 
unused variable "addTez"
./tests/extracted-code/liquidity-extract/tests/liquidity_eip20token.liq: Warning: 
unused variable "powInt"
./tests/extracted-code/liquidity-extract/tests/liquidity_eip20token.liq: Warning: 
unused variable "modInt"
./tests/extracted-code/liquidity-extract/tests/liquidity_eip20token.liq: Warning: 
unused variable "eqInt"
./tests/extracted-code/liquidity-extract/tests/liquidity_eip20token.liq: Warning: 
unused variable "leInt"
./tests/extracted-code/liquidity-extract/tests/liquidity_eip20token.liq: Warning: 
unused variable "mulInt"
./tests/extracted-code/liquidity-extract/tests/liquidity_eip20token.liq: Warning: 
unused variable "snd"
./tests/extracted-code/liquidity-extract/tests/liquidity_eip20token.liq: Warning: 
unused variable "fst"
./tests/extracted-code/liquidity-extract/tests/liquidity_eip20token.liq:125.78-125.82: Warning: 
unused variable "ctx_"
./tests/extracted-code/liquidity-extract/tests/CounterCertifiedExtraction.liq:2.38-2.43: Warning: 
Unresolved type 'a. Type variables 'a were replaced by unit.
./tests/extracted-code/liquidity-extract/tests/CounterCertifiedExtraction.liq:2.18-2.19: Warning: 
Unresolved type ('a * 'b). Type variables 'a, 'b were replaced by unit.
./tests/extracted-code/liquidity-extract/tests/CounterCertifiedExtraction.liq:3.38-3.43: Warning: 
Unresolved type 'b. Type variables 'b were replaced by unit.
./tests/extracted-code/liquidity-extract/tests/CounterCertifiedExtraction.liq:3.18-3.19: Warning: 
Unresolved type ('a * 'b). Type variables 'a, 'b were replaced by unit.
./tests/extracted-code/liquidity-extract/tests/CounterCertifiedExtraction.liq:49.18-49.94: Warning: 
Unresolved type (((int * key_hash) -> (operation list * (int * key_hash)))[@closure
                                                            :(((msg ->
                                                                  (((int *
                                                                    key_hash)
                                                                    ->
                                                                    'j71
                                                                    result)
                                                                  [@closure
                                                                    :
                                                                    (((
                                                                    (int *
                                                                    key_hash)
                                                                    ->
                                                                    ((int ->
                                                                    (int *
                                                                    key_hash))
                                                                    [@closure
                                                                    :((int *
                                                                    key_hash)
                                                                    *
                                                                    (int ->
                                                                    ((int ->
                                                                    int)
                                                                    [@closure
                                                                    :int])))]))
                                                                    [@closure
                                                                    :int ->
                                                                    ((int ->
                                                                    int)
                                                                    [@closure
                                                                    :int])])
                                                                    * nat *
                                                                    (((int *
                                                                    key_hash)
                                                                    ->
                                                                    ((int ->
                                                                    (int *
                                                                    key_hash))
                                                                    [@closure
                                                                    :((int ->
                                                                    ((int ->
                                                                    int)[@closure
                                                                    :int])) *
                                                                    (int *
                                                                    key_hash))]))
                                                                    [@closure
                                                                    :int ->
                                                                    ((int ->
                                                                    int)
                                                                    [@closure
                                                                    :int])])
                                                                    *
                                                                    (int ->
                                                                    ((int ->
                                                                    bool)
                                                                    [@closure
                                                                    :int])) *
                                                                    msg)]))
                                                               [@closure
                                                                 :(((
                                                                    (int *
                                                                    key_hash)
                                                                    ->
                                                                    ((int ->
                                                                    (int *
                                                                    key_hash))
                                                                    [@closure
                                                                    :((int *
                                                                    key_hash)
                                                                    *
                                                                    (int ->
                                                                    ((int ->
                                                                    int)
                                                                    [@closure
                                                                    :int])))]))
                                                                    [@closure
                                                                    :int ->
                                                                    ((int ->
                                                                    int)
                                                                    [@closure
                                                                    :int])])
                                                                    * nat *
                                                                    ((
                                                                    (int *
                                                                    key_hash)
                                                                    ->
                                                                    ((int ->
                                                                    (int *
                                                                    key_hash))
                                                                    [@closure
                                                                    :((int ->
                                                                    ((int ->
                                                                    int)[@closure
                                                                    :int])) *
                                                                    (int *
                                                                    key_hash))]))
                                                                    [@closure
                                                                    :int ->
                                                                    ((int ->
                                                                    int)
                                                                    [@closure
                                                                    :int])])
                                                                    *
                                                                    (
                                                                    int ->
                                                                    ((int ->
                                                                    bool)
                                                                    [@closure
                                                                    :int])))])
                                                               * msg)]). Type variables 'j71 were replaced by unit.
./tests/extracted-code/liquidity-extract/tests/CounterCertifiedExtraction.liq:41.32-42.10: Warning: 
Unresolved type (((int * key_hash) -> 'r71 result)[@closure
                                    :(timestamp * (address * (dun * dun)))]). Type variables 'r71 were replaced by unit.
./tests/extracted-code/liquidity-extract/tests/CounterCertifiedExtraction.liq:41.61-42.10: Warning: 
Unresolved type 'r71 result. Type variables 'r71 were replaced by unit.
./tests/extracted-code/liquidity-extract/tests/CounterDepCertifiedExtraction.liq:2.38-2.43: Warning: 
Unresolved type 'a. Type variables 'a were replaced by unit.
./tests/extracted-code/liquidity-extract/tests/CounterDepCertifiedExtraction.liq:2.18-2.19: Warning: 
Unresolved type ('a * 'b). Type variables 'a, 'b were replaced by unit.
./tests/extracted-code/liquidity-extract/tests/CounterDepCertifiedExtraction.liq:3.38-3.43: Warning: 
Unresolved type 'b. Type variables 'b were replaced by unit.
./tests/extracted-code/liquidity-extract/tests/CounterDepCertifiedExtraction.liq:3.18-3.19: Warning: 
Unresolved type ('a * 'b). Type variables 'a, 'b were replaced by unit.
./tests/extracted-code/liquidity-extract/tests/CounterDepCertifiedExtraction.liq:60.18-60.98: Warning: 
Unresolved type (((int * key_hash) -> (operation list * (int * key_hash)))[@closure
                                                            :(((coq_msg ->
                                                                  (((int *
                                                                    key_hash)
                                                                    ->
                                                                    'u72
                                                                    result)
                                                                  [@closure
                                                                    :
                                                                    (((
                                                                    (int *
                                                                    key_hash)
                                                                    ->
                                                                    ((int ->
                                                                    (int *
                                                                    key_hash))
                                                                    [@closure
                                                                    :((int *
                                                                    key_hash)
                                                                    *
                                                                    (int ->
                                                                    ((int ->
                                                                    int)
                                                                    [@closure
                                                                    :int])))]))
                                                                    [@closure
                                                                    :int ->
                                                                    ((int ->
                                                                    int)
                                                                    [@closure
                                                                    :int])])
                                                                    * nat *
                                                                    (((int *
                                                                    key_hash)
                                                                    ->
                                                                    ((int ->
                                                                    (int *
                                                                    key_hash))
                                                                    [@closure
                                                                    :((int ->
                                                                    ((int ->
                                                                    int)[@closure
                                                                    :int])) *
                                                                    (int *
                                                                    key_hash))]))
                                                                    [@closure
                                                                    :int ->
                                                                    ((int ->
                                                                    int)
                                                                    [@closure
                                                                    :int])])
                                                                    *
                                                                    (bool ->
                                                                    ((bool ->
                                                                    coq_sumbool)
                                                                    [@closure
                                                                    :bool]))
                                                                    *
                                                                    (int ->
                                                                    ((int ->
                                                                    bool)
                                                                    [@closure
                                                                    :int])) *
                                                                    coq_msg)]))
                                                               [@closure
                                                                 :(((
                                                                    (int *
                                                                    key_hash)
                                                                    ->
                                                                    ((int ->
                                                                    (int *
                                                                    key_hash))
                                                                    [@closure
                                                                    :((int *
                                                                    key_hash)
                                                                    *
                                                                    (int ->
                                                                    ((int ->
                                                                    int)
                                                                    [@closure
                                                                    :int])))]))
                                                                    [@closure
                                                                    :int ->
                                                                    ((int ->
                                                                    int)
                                                                    [@closure
                                                                    :int])])
                                                                    * nat *
                                                                    ((
                                                                    (int *
                                                                    key_hash)
                                                                    ->
                                                                    ((int ->
                                                                    (int *
                                                                    key_hash))
                                                                    [@closure
                                                                    :((int ->
                                                                    ((int ->
                                                                    int)[@closure
                                                                    :int])) *
                                                                    (int *
                                                                    key_hash))]))
                                                                    [@closure
                                                                    :int ->
                                                                    ((int ->
                                                                    int)
                                                                    [@closure
                                                                    :int])])
                                                                    *
                                                                    (
                                                                    bool ->
                                                                    ((bool ->
                                                                    coq_sumbool)
                                                                    [@closure
                                                                    :bool]))
                                                                    *
                                                                    (
                                                                    int ->
                                                                    ((int ->
                                                                    bool)
                                                                    [@closure
                                                                    :int])))])
                                                               * coq_msg)]). Type variables 'u72 were replaced by unit.
./tests/extracted-code/liquidity-extract/tests/CounterDepCertifiedExtraction.liq:52.36-53.10: Warning: 
Unresolved type (((int * key_hash) -> 'c73 result)[@closure
                                    :(timestamp * (address * (dun * dun)))]). Type variables 'c73 were replaced by unit.
./tests/extracted-code/liquidity-extract/tests/CounterDepCertifiedExtraction.liq:52.65-53.10: Warning: 
Unresolved type 'c73 result. Type variables 'c73 were replaced by unit.
./tests/extracted-code/liquidity-extract/tests/CounterSubsetTypes.liq:2.38-2.43: Warning: 
Unresolved type 'a. Type variables 'a were replaced by unit.
./tests/extracted-code/liquidity-extract/tests/CounterSubsetTypes.liq:2.18-2.19: Warning: 
Unresolved type ('a * 'b). Type variables 'a, 'b were replaced by unit.
./tests/extracted-code/liquidity-extract/tests/CounterSubsetTypes.liq:3.38-3.43: Warning: 
Unresolved type 'b. Type variables 'b were replaced by unit.
./tests/extracted-code/liquidity-extract/tests/CounterSubsetTypes.liq:3.18-3.19: Warning: 
Unresolved type ('a * 'b). Type variables 'a, 'b were replaced by unit.
./tests/extracted-code/liquidity-extract/tests/CounterSubsetTypes.liq:16.15-16.16: Warning: 
Unresolved type 'a10. Type variables 'a10 were replaced by unit.
./tests/extracted-code/liquidity-extract/tests/CounterSubsetTypes.liq:16.11-16.12: Warning: 
Unresolved type 'a10. Type variables 'a10 were replaced by unit.
./tests/extracted-code/liquidity-extract/tests/CounterSubsetTypes.liq:62.18-62.98: Warning: 
Unresolved type ((int -> (operation list * int))[@closure
                                  :(((coq_msg ->
                                        ((int -> 'f74 result)[@closure
                                                               :((bool ->
                                                                    ((
                                                                    bool ->
                                                                    coq_sumbool)
                                                                    [@closure
                                                                    :bool]))
                                                                  *
                                                                  ((int ->
                                                                    ((int ->
                                                                    int)
                                                                    [@closure
                                                                    :(int *
                                                                    (int ->
                                                                    ((int ->
                                                                    int)
                                                                    [@closure
                                                                    :int])))]))
                                                                  [@closure
                                                                    :
                                                                    int ->
                                                                    ((int ->
                                                                    int)
                                                                    [@closure
                                                                    :int])])
                                                                  * nat *
                                                                  ((int ->
                                                                    ((int ->
                                                                    int)
                                                                    [@closure
                                                                    :((int ->
                                                                    ((int ->
                                                                    int)[@closure
                                                                    :int])) *
                                                                    int)]))
                                                                  [@closure
                                                                    :
                                                                    int ->
                                                                    ((int ->
                                                                    int)
                                                                    [@closure
                                                                    :int])])
                                                                  *
                                                                  (int ->
                                                                    ((
                                                                    int ->
                                                                    bool)
                                                                    [@closure
                                                                    :int]))
                                                                  * coq_msg)]))
                                     [@closure
                                       :((bool ->
                                            ((bool -> coq_sumbool)[@closure
                                                                    :
                                                                    bool]))
                                          *
                                          ((int ->
                                              ((int -> int)[@closure
                                                             :(int *
                                                                (int ->
                                                                   ((
                                                                   int -> 
                                                                    int)
                                                                   [@closure
                                                                    :int])))]))
                                          [@closure
                                            :int ->
                                               ((int -> int)[@closure :int])])
                                          * nat *
                                          ((int ->
                                              ((int -> int)[@closure
                                                             :((int ->
                                                                  ((int ->
                                                                    int)
                                                                  [@closure
                                                                    :
                                                                    int]))
                                                                * int)]))
                                          [@closure
                                            :int ->
                                               ((int -> int)[@closure :int])])
                                          *
                                          (int ->
                                             ((int -> bool)[@closure :int])))])
                                     * coq_msg)]). Type variables 'f74 were replaced by unit.
./tests/extracted-code/liquidity-extract/tests/CounterSubsetTypes.liq:54.36-55.10: Warning: 
Unresolved type ((int -> 'n74 result)[@closure :(timestamp * (address * (dun * dun)))]). Type variables 'n74 were replaced by unit.
./tests/extracted-code/liquidity-extract/tests/CounterSubsetTypes.liq:54.52-55.10: Warning: 
Unresolved type 'n74 result. Type variables 'n74 were replaced by unit.
./tests/extracted-code/liquidity-extract/tests/CrowdfundingCertifiedExtraction.liq:2.38-2.43: Warning: 
Unresolved type 'a. Type variables 'a were replaced by unit.
./tests/extracted-code/liquidity-extract/tests/CrowdfundingCertifiedExtraction.liq:2.18-2.19: Warning: 
Unresolved type ('a * 'b). Type variables 'a, 'b were replaced by unit.
./tests/extracted-code/liquidity-extract/tests/CrowdfundingCertifiedExtraction.liq:3.38-3.43: Warning: 
Unresolved type 'b. Type variables 'b were replaced by unit.
./tests/extracted-code/liquidity-extract/tests/CrowdfundingCertifiedExtraction.liq:3.18-3.19: Warning: 
Unresolved type ('a * 'b). Type variables 'a, 'b were replaced by unit.
./tests/extracted-code/liquidity-extract/tests/CrowdfundingCertifiedExtraction.liq:92.29-92.34: Warning: 
Unresolved type 'b. Type variables 'b were replaced by unit.
./tests/extracted-code/liquidity-extract/tests/CrowdfundingCertifiedExtraction.liq:92.9-92.10: Warning: 
Unresolved type ('a * 'b). Type variables 'a, 'b were replaced by unit.
./tests/extracted-code/liquidity-extract/tests/CrowdfundingCertifiedExtraction.liq:91.88-91.93: Warning: 
Unresolved type 'a. Type variables 'a were replaced by unit.
./tests/extracted-code/liquidity-extract/tests/CrowdfundingCertifiedExtraction.liq:91.68-91.69: Warning: 
Unresolved type ('a * 'b). Type variables 'a, 'b were replaced by unit.
./tests/extracted-code/liquidity-extract/tests/StackInterpreter.liq:2.38-2.43: Warning: 
Unresolved type 'a. Type variables 'a were replaced by unit.
./tests/extracted-code/liquidity-extract/tests/StackInterpreter.liq:2.18-2.19: Warning: 
Unresolved type ('a * 'b). Type variables 'a, 'b were replaced by unit.
./tests/extracted-code/liquidity-extract/tests/StackInterpreter.liq:3.38-3.43: Warning: 
Unresolved type 'b. Type variables 'b were replaced by unit.
./tests/extracted-code/liquidity-extract/tests/StackInterpreter.liq:3.18-3.19: Warning: 
Unresolved type ('a * 'b). Type variables 'a, 'b were replaced by unit.
./tests/extracted-code/liquidity-extract/tests/StackInterpreter.liq:151.18-151.94: Warning: 
Unresolved type ((value list -> (operation list * value list))[@closure
                                                :((instruction list *
                                                   ((string * int), value)
                                                   map) *
                                                   (((instruction list *
                                                       ((string * int),
                                                       value) map) ->
                                                       ((value list ->
                                                           'u82 result)
                                                       [@closure
                                                         :(((((string * int),
                                                               value) map ->
                                                               ((instruction
                                                                   list ->
                                                                   ((
                                                                   value list
                                                                    ->
                                                                    ((
                                                                    int ->
                                                                    result)
                                                                    [@closure
                                                                    :(((string
                                                                    * int),
                                                                    value)
                                                                    map *
                                                                    instruction
                                                                    list *
                                                                    (((((string
                                                                    * int),
                                                                    value)
                                                                    map *
                                                                    instruction
                                                                    list *
                                                                    value
                                                                    list *
                                                                    int) ->
                                                                    result)
                                                                    [@closure
                                                                    :((int ->
                                                                    ((int ->
                                                                    int)[@closure
                                                                    :int])) *
                                                                    (bool ->
                                                                    int) *
                                                                    ((int ->
                                                                    bool)
                                                                    [@closure
                                                                    :int ->
                                                                    ((int ->
                                                                    bool)
                                                                    [@closure
                                                                    :int])])
                                                                    * nat *
                                                                    (int ->
                                                                    ((int ->
                                                                    bool)
                                                                    [@closure
                                                                    :int])) *
                                                                    ((int ->
                                                                    int)
                                                                    [@closure
                                                                    :int ->
                                                                    ((int ->
                                                                    bool)
                                                                    [@closure
                                                                    :int])])
                                                                    *
                                                                    (int ->
                                                                    ((int ->
                                                                    bool)
                                                                    [@closure
                                                                    :int])) *
                                                                    (int ->
                                                                    ((int ->
                                                                    bool)
                                                                    [@closure
                                                                    :int])) *
                                                                    (int ->
                                                                    ((int ->
                                                                    int)
                                                                    [@closure
                                                                    :int])) *
                                                                    ((int ->
                                                                    int)
                                                                    [@closure
                                                                    :((int ->
                                                                    ((int ->
                                                                    bool)[@closure
                                                                    :int])) *
                                                                    (int ->
                                                                    ((int ->
                                                                    int)
                                                                    [@closure
                                                                    :int])))])
                                                                    *
                                                                    (int ->
                                                                    ((int ->
                                                                    int)
                                                                    [@closure
                                                                    :int])))])
                                                                    * value
                                                                    list)]))
                                                                   [@closure
                                                                    :(((string
                                                                    * int),
                                                                    value)
                                                                    map *
                                                                    instruction
                                                                    list *
                                                                    (((((string
                                                                    * int),
                                                                    value)
                                                                    map *
                                                                    instruction
                                                                    list *
                                                                    value
                                                                    list *
                                                                    int) ->
                                                                    result)
                                                                    [@closure
                                                                    :((int ->
                                                                    ((int ->
                                                                    int)[@closure
                                                                    :int])) *
                                                                    (bool ->
                                                                    int) *
                                                                    ((int ->
                                                                    bool)
                                                                    [@closure
                                                                    :int ->
                                                                    ((int ->
                                                                    bool)
                                                                    [@closure
                                                                    :int])])
                                                                    * nat *
                                                                    (int ->
                                                                    ((int ->
                                                                    bool)
                                                                    [@closure
                                                                    :int])) *
                                                                    ((int ->
                                                                    int)
                                                                    [@closure
                                                                    :int ->
                                                                    ((int ->
                                                                    bool)
                                                                    [@closure
                                                                    :int])])
                                                                    *
                                                                    (int ->
                                                                    ((int ->
                                                                    bool)
                                                                    [@closure
                                                                    :int])) *
                                                                    (int ->
                                                                    ((int ->
                                                                    bool)
                                                                    [@closure
                                                                    :int])) *
                                                                    (int ->
                                                                    ((int ->
                                                                    int)
                                                                    [@closure
                                                                    :int])) *
                                                                    ((int ->
                                                                    int)
                                                                    [@closure
                                                                    :((int ->
                                                                    ((int ->
                                                                    bool)[@closure
                                                                    :int])) *
                                                                    (int ->
                                                                    ((int ->
                                                                    int)
                                                                    [@closure
                                                                    :int])))])
                                                                    *
                                                                    (int ->
                                                                    ((int ->
                                                                    int)
                                                                    [@closure
                                                                    :int])))]))]))
                                                               [@closure
                                                                 :(((string *
                                                                    int),
                                                                    value)
                                                                    map *
                                                                    ((
                                                                    (((string
                                                                    * int),
                                                                    value)
                                                                    map *
                                                                    instruction
                                                                    list *
                                                                    value
                                                                    list *
                                                                    int) ->
                                                                    result)
                                                                    [@closure
                                                                    :((int ->
                                                                    ((int ->
                                                                    int)[@closure
                                                                    :int])) *
                                                                    (bool ->
                                                                    int) *
                                                                    ((int ->
                                                                    bool)
                                                                    [@closure
                                                                    :int ->
                                                                    ((int ->
                                                                    bool)
                                                                    [@closure
                                                                    :int])])
                                                                    * nat *
                                                                    (int ->
                                                                    ((int ->
                                                                    bool)
                                                                    [@closure
                                                                    :int])) *
                                                                    ((int ->
                                                                    int)
                                                                    [@closure
                                                                    :int ->
                                                                    ((int ->
                                                                    bool)
                                                                    [@closure
                                                                    :int])])
                                                                    *
                                                                    (int ->
                                                                    ((int ->
                                                                    bool)
                                                                    [@closure
                                                                    :int])) *
                                                                    (int ->
                                                                    ((int ->
                                                                    bool)
                                                                    [@closure
                                                                    :int])) *
                                                                    (int ->
                                                                    ((int ->
                                                                    int)
                                                                    [@closure
                                                                    :int])) *
                                                                    ((int ->
                                                                    int)
                                                                    [@closure
                                                                    :((int ->
                                                                    ((int ->
                                                                    bool)[@closure
                                                                    :int])) *
                                                                    (int ->
                                                                    ((int ->
                                                                    int)
                                                                    [@closure
                                                                    :int])))])
                                                                    *
                                                                    (int ->
                                                                    ((int ->
                                                                    int)
                                                                    [@closure
                                                                    :int])))]))]))
                                                            [@closure
                                                              :(((((string *
                                                                    int),
                                                                   value) map
                                                                   *
                                                                   instruction
                                                                   list *
                                                                   value list
                                                                   * int) ->
                                                                   result)
                                                              [@closure
                                                                :((int ->
                                                                    ((
                                                                    int ->
                                                                    int)
                                                                    [@closure
                                                                    :int]))
                                                                   *
                                                                   (bool ->
                                                                    int)
                                                                   *
                                                                   ((
                                                                   int ->
                                                                    bool)
                                                                   [@closure
                                                                    :int ->
                                                                    ((int ->
                                                                    bool)
                                                                    [@closure
                                                                    :int])])
                                                                   * nat *
                                                                   (int ->
                                                                    ((int ->
                                                                    bool)
                                                                    [@closure
                                                                    :int]))
                                                                   *
                                                                   ((
                                                                   int -> 
                                                                    int)
                                                                   [@closure
                                                                    :int ->
                                                                    ((int ->
                                                                    bool)
                                                                    [@closure
                                                                    :int])])
                                                                   *
                                                                   (int ->
                                                                    ((int ->
                                                                    bool)
                                                                    [@closure
                                                                    :int]))
                                                                   *
                                                                   (int ->
                                                                    ((int ->
                                                                    bool)
                                                                    [@closure
                                                                    :int]))
                                                                   *
                                                                   (int ->
                                                                    ((int ->
                                                                    int)
                                                                    [@closure
                                                                    :int]))
                                                                   *
                                                                   ((
                                                                   int -> 
                                                                    int)
                                                                   [@closure
                                                                    :((int ->
                                                                    ((int ->
                                                                    bool)[@closure
                                                                    :int])) *
                                                                    (int ->
                                                                    ((int ->
                                                                    int)
                                                                    [@closure
                                                                    :int])))])
                                                                   *
                                                                   (int ->
                                                                    ((int ->
                                                                    int)
                                                                    [@closure
                                                                    :int])))])])
                                                            * (instruction
                                                            list *
                                                            ((string * int),
                                                            value) map))]))
                                                   [@closure
                                                     :((((string * int),
                                                          value) map ->
                                                          ((instruction list
                                                              ->
                                                              ((value list ->
                                                                  ((int ->
                                                                    result)
                                                                  [@closure
                                                                    :
                                                                    (((string
                                                                    * int),
                                                                    value)
                                                                    map *
                                                                    instruction
                                                                    list *
                                                                    (((((string
                                                                    * int),
                                                                    value)
                                                                    map *
                                                                    instruction
                                                                    list *
                                                                    value
                                                                    list *
                                                                    int) ->
                                                                    result)
                                                                    [@closure
                                                                    :((int ->
                                                                    ((int ->
                                                                    int)[@closure
                                                                    :int])) *
                                                                    (bool ->
                                                                    int) *
                                                                    ((int ->
                                                                    bool)
                                                                    [@closure
                                                                    :int ->
                                                                    ((int ->
                                                                    bool)
                                                                    [@closure
                                                                    :int])])
                                                                    * nat *
                                                                    (int ->
                                                                    ((int ->
                                                                    bool)
                                                                    [@closure
                                                                    :int])) *
                                                                    ((int ->
                                                                    int)
                                                                    [@closure
                                                                    :int ->
                                                                    ((int ->
                                                                    bool)
                                                                    [@closure
                                                                    :int])])
                                                                    *
                                                                    (int ->
                                                                    ((int ->
                                                                    bool)
                                                                    [@closure
                                                                    :int])) *
                                                                    (int ->
                                                                    ((int ->
                                                                    bool)
                                                                    [@closure
                                                                    :int])) *
                                                                    (int ->
                                                                    ((int ->
                                                                    int)
                                                                    [@closure
                                                                    :int])) *
                                                                    ((int ->
                                                                    int)
                                                                    [@closure
                                                                    :((int ->
                                                                    ((int ->
                                                                    bool)[@closure
                                                                    :int])) *
                                                                    (int ->
                                                                    ((int ->
                                                                    int)
                                                                    [@closure
                                                                    :int])))])
                                                                    *
                                                                    (int ->
                                                                    ((int ->
                                                                    int)
                                                                    [@closure
                                                                    :int])))])
                                                                    * value
                                                                    list)]))
                                                              [@closure
                                                                :(((string *
                                                                    int),
                                                                   value) map
                                                                   *
                                                                   instruction
                                                                   list *
                                                                   ((
                                                                   (((string
                                                                    * int),
                                                                    value)
                                                                    map *
                                                                    instruction
                                                                    list *
                                                                    value
                                                                    list *
                                                                    int) ->
                                                                    result)
                                                                   [@closure
                                                                    :((int ->
                                                                    ((int ->
                                                                    int)[@closure
                                                                    :int])) *
                                                                    (bool ->
                                                                    int) *
                                                                    ((int ->
                                                                    bool)
                                                                    [@closure
                                                                    :int ->
                                                                    ((int ->
                                                                    bool)
                                                                    [@closure
                                                                    :int])])
                                                                    * nat *
                                                                    (int ->
                                                                    ((int ->
                                                                    bool)
                                                                    [@closure
                                                                    :int])) *
                                                                    ((int ->
                                                                    int)
                                                                    [@closure
                                                                    :int ->
                                                                    ((int ->
                                                                    bool)
                                                                    [@closure
                                                                    :int])])
                                                                    *
                                                                    (int ->
                                                                    ((int ->
                                                                    bool)
                                                                    [@closure
                                                                    :int])) *
                                                                    (int ->
                                                                    ((int ->
                                                                    bool)
                                                                    [@closure
                                                                    :int])) *
                                                                    (int ->
                                                                    ((int ->
                                                                    int)
                                                                    [@closure
                                                                    :int])) *
                                                                    ((int ->
                                                                    int)
                                                                    [@closure
                                                                    :((int ->
                                                                    ((int ->
                                                                    bool)[@closure
                                                                    :int])) *
                                                                    (int ->
                                                                    ((int ->
                                                                    int)
                                                                    [@closure
                                                                    :int])))])
                                                                    *
                                                                    (int ->
                                                                    ((int ->
                                                                    int)
                                                                    [@closure
                                                                    :int])))]))]))
                                                          [@closure
                                                            :(((string * int),
                                                               value) map *
                                                               (((((string *
                                                                    int),
                                                                   value) map
                                                                   *
                                                                   instruction
                                                                   list *
                                                                   value list
                                                                   * int) ->
                                                                   result)
                                                               [@closure
                                                                 :((int ->
                                                                    ((int ->
                                                                    int)
                                                                    [@closure
                                                                    :int])) *
                                                                    (
                                                                    bool ->
                                                                    int) *
                                                                    ((
                                                                    int ->
                                                                    bool)
                                                                    [@closure
                                                                    :int ->
                                                                    ((int ->
                                                                    bool)
                                                                    [@closure
                                                                    :int])])
                                                                    * nat *
                                                                    (
                                                                    int ->
                                                                    ((int ->
                                                                    bool)
                                                                    [@closure
                                                                    :int])) *
                                                                    ((
                                                                    int ->
                                                                    int)
                                                                    [@closure
                                                                    :int ->
                                                                    ((int ->
                                                                    bool)
                                                                    [@closure
                                                                    :int])])
                                                                    *
                                                                    (
                                                                    int ->
                                                                    ((int ->
                                                                    bool)
                                                                    [@closure
                                                                    :int])) *
                                                                    (
                                                                    int ->
                                                                    ((int ->
                                                                    bool)
                                                                    [@closure
                                                                    :int])) *
                                                                    (
                                                                    int ->
                                                                    ((int ->
                                                                    int)
                                                                    [@closure
                                                                    :int])) *
                                                                    ((
                                                                    int ->
                                                                    int)
                                                                    [@closure
                                                                    :((int ->
                                                                    ((int ->
                                                                    bool)[@closure
                                                                    :int])) *
                                                                    (int ->
                                                                    ((int ->
                                                                    int)
                                                                    [@closure
                                                                    :int])))])
                                                                    *
                                                                    (
                                                                    int ->
                                                                    ((int ->
                                                                    int)
                                                                    [@closure
                                                                    :int])))]))]))
                                                     [@closure
                                                       :(((((string * int),
                                                            value) map *
                                                            instruction list
                                                            * value list *
                                                            int) -> result)
                                                       [@closure
                                                         :((int ->
                                                              ((int -> int)
                                                              [@closure :
                                                                int]))
                                                            * (bool -> int) *
                                                            ((int -> bool)
                                                            [@closure
                                                              :int ->
                                                                 ((int ->
                                                                    bool)
                                                                 [@closure
                                                                   :int])])
                                                            * nat *
                                                            (int ->
                                                               ((int -> bool)
                                                               [@closure
                                                                 :int]))
                                                            *
                                                            ((int -> int)
                                                            [@closure
                                                              :int ->
                                                                 ((int ->
                                                                    bool)
                                                                 [@closure
                                                                   :int])])
                                                            *
                                                            (int ->
                                                               ((int -> bool)
                                                               [@closure
                                                                 :int]))
                                                            *
                                                            (int ->
                                                               ((int -> bool)
                                                               [@closure
                                                                 :int]))
                                                            *
                                                            (int ->
                                                               ((int -> int)
                                                               [@closure
                                                                 :int]))
                                                            *
                                                            ((int -> int)
                                                            [@closure
                                                              :((int ->
                                                                   ((
                                                                   int ->
                                                                    bool)
                                                                   [@closure
                                                                    :int]))
                                                                 *
                                                                 (int ->
                                                                    ((
                                                                    int ->
                                                                    int)
                                                                    [@closure
                                                                    :int])))])
                                                            *
                                                            (int ->
                                                               ((int -> int)
                                                               [@closure
                                                                 :int])))])])]))]). Type variables 'u82 were replaced by unit.
./tests/extracted-code/liquidity-extract/tests/StackInterpreter.liq:142.32-144.7: Warning: 
Unresolved type ((unit -> 'x82 result)[@closure :(timestamp * (address * (dun * dun)))]). Type variables 'x82 were replaced by unit.
./tests/extracted-code/liquidity-extract/tests/StackInterpreter.liq:142.49-144.7: Warning: 
Unresolved type 'x82 result. Type variables 'x82 were replaced by unit.
./tests/extracted-code/liquidity-extract/tests/StackInterpreter.liq:144.0-144.7: Warning: 
Unresolved type 'x82 result. Type variables 'x82 were replaced by unit.
./tests/extracted-code/liquidity-extract/tests/escrow.liq:2.38-2.43: Warning: 
Unresolved type 'a. Type variables 'a were replaced by unit.
./tests/extracted-code/liquidity-extract/tests/escrow.liq:2.18-2.19: Warning: 
Unresolved type ('a * 'b). Type variables 'a, 'b were replaced by unit.
./tests/extracted-code/liquidity-extract/tests/escrow.liq:3.38-3.43: Warning: 
Unresolved type 'b. Type variables 'b were replaced by unit.
./tests/extracted-code/liquidity-extract/tests/escrow.liq:3.18-3.19: Warning: 
Unresolved type ('a * 'b). Type variables 'a, 'b were replaced by unit.
./tests/extracted-code/liquidity-extract/tests/escrow.liq:91.28-137.33: Warning: 
Unresolved type (((timestamp * (address * (dun * dun))) ->
    ((state ->
        ((msg option -> result)[@closure
                                 :((nat -> ((nat -> nat)[@closure :nat])) *
                                    (bool -> ((bool -> bool)[@closure :bool]))
                                    * (nat * (nat * nat)) * (timestamp *
                                    (address * (dun * dun))) * nat *
                                    ((dun ->
                                        ((dun -> dun)[@closure
                                                       :(dun * (dun -> nat))]))
                                    [@closure :dun -> nat]) *
                                    (dun -> ((dun -> bool)[@closure :dun])) *
                                    (address ->
                                       ((address -> bool)[@closure :address]))
                                    * (dun -> ((dun -> bool)[@closure :dun]))
                                    * (nat -> ((nat -> bool)[@closure :nat]))
                                    *
                                    ((dun ->
                                        ((dun -> dun)[@closure
                                                       :(dun * (dun -> nat))]))
                                    [@closure :dun -> nat]) *
                                    ('k92 option ->
                                       (('j92 -> ('j92, 'k92) result)
                                       [@closure :'k92 option]))
                                    * state *
                                    ((dun ->
                                        ((dun -> dun option)[@closure
                                                              :((dun ->
                                                                   ((
                                                                   dun ->
                                                                    bool)
                                                                   [@closure
                                                                    :dun]))
                                                                 * dun *
                                                                 (dun ->
                                                                    ((
                                                                    dun ->
                                                                    dun)
                                                                    [@closure
                                                                    :dun])))]))
                                    [@closure
                                      :((dun ->
                                           ((dun -> bool)[@closure :dun]))
                                         *
                                         (dun ->
                                            ((dun -> dun)[@closure :dun])))]))]))
    [@closure
      :((nat -> ((nat -> nat)[@closure :nat])) *
         (bool -> ((bool -> bool)[@closure :bool])) * (nat * (nat * nat)) *
         (timestamp * (address * (dun * dun))) * nat *
         ((dun -> ((dun -> dun)[@closure :(dun * (dun -> nat))]))[@closure
                                                                   :dun ->
                                                                    nat])
         * (dun -> ((dun -> bool)[@closure :dun])) *
         (address -> ((address -> bool)[@closure :address])) *
         (dun -> ((dun -> bool)[@closure :dun])) *
         (nat -> ((nat -> bool)[@closure :nat])) *
         ((dun -> ((dun -> dun)[@closure :(dun * (dun -> nat))]))[@closure
                                                                   :dun ->
                                                                    nat])
         *
         ('i92 option ->
            (('h92 -> ('h92, 'i92) result)[@closure :'i92 option]))
         *
         ((dun ->
             ((dun -> dun option)[@closure
                                   :((dun -> ((dun -> bool)[@closure :dun]))
                                      * dun *
                                      (dun -> ((dun -> dun)[@closure :dun])))]))
         [@closure
           :((dun -> ((dun -> bool)[@closure :dun])) *
              (dun -> ((dun -> dun)[@closure :dun])))]))]))[@closure
                                                             :((nat ->
                                                                  ((nat ->
                                                                    nat)
                                                                  [@closure
                                                                    :
                                                                    nat]))
                                                                *
                                                                (bool ->
                                                                   ((
                                                                   bool ->
                                                                    bool)
                                                                   [@closure
                                                                    :bool]))
                                                                * (nat * (nat
                                                                * nat)) * nat
                                                                *
                                                                ((dun ->
                                                                    ((
                                                                    dun ->
                                                                    dun)
                                                                    [@closure
                                                                    :(dun *
                                                                    (dun ->
                                                                    nat))]))
                                                                [@closure
                                                                  :dun -> nat])
                                                                *
                                                                (dun ->
                                                                   ((
                                                                   dun ->
                                                                    bool)
                                                                   [@closure
                                                                    :dun]))
                                                                *
                                                                (address ->
                                                                   ((
                                                                   address ->
                                                                    bool)
                                                                   [@closure
                                                                    :address]))
                                                                *
                                                                (dun ->
                                                                   ((
                                                                   dun ->
                                                                    bool)
                                                                   [@closure
                                                                    :dun]))
                                                                *
                                                                (nat ->
                                                                   ((
                                                                   nat ->
                                                                    bool)
                                                                   [@closure
                                                                    :nat]))
                                                                *
                                                                ((dun ->
                                                                    ((
                                                                    dun ->
                                                                    dun)
                                                                    [@closure
                                                                    :(dun *
                                                                    (dun ->
                                                                    nat))]))
                                                                [@closure
                                                                  :dun -> nat])
                                                                *
                                                                ('g92 option
                                                                   ->
                                                                   ((
                                                                   'f92 ->
                                                                    ('f92,
                                                                    'g92)
                                                                    result)
                                                                   [@closure
                                                                    :'g92
                                                                    option]))
                                                                *
                                                                ((dun ->
                                                                    ((
                                                                    dun ->
                                                                    dun
                                                                    option)
                                                                    [@closure
                                                                    :((dun ->
                                                                    ((dun ->
                                                                    bool)[@closure
                                                                    :dun])) *
                                                                    dun *
                                                                    (dun ->
                                                                    ((dun ->
                                                                    dun)
                                                                    [@closure
                                                                    :dun])))]))
                                                                [@closure
                                                                  :((dun ->
                                                                    ((dun ->
                                                                    bool)
                                                                    [@closure
                                                                    :dun])) *
                                                                    (dun ->
                                                                    ((dun ->
                                                                    dun)
                                                                    [@closure
                                                                    :dun])))]))]). Type variables 'f92, 'g92, 'h92, 'i92, 'j92, 'k92 were replaced by unit.
./tests/extracted-code/liquidity-extract/tests/escrow.liq:91.41-137.33: Warning: 
Unresolved type ((state ->
    ((msg option -> result)[@closure
                             :((nat -> ((nat -> nat)[@closure :nat])) *
                                (bool -> ((bool -> bool)[@closure :bool])) *
                                (nat * (nat * nat)) * (timestamp * (address *
                                (dun * dun))) * nat *
                                ((dun ->
                                    ((dun -> dun)[@closure
                                                   :(dun * (dun -> nat))]))
                                [@closure :dun -> nat]) *
                                (dun -> ((dun -> bool)[@closure :dun])) *
                                (address ->
                                   ((address -> bool)[@closure :address]))
                                * (dun -> ((dun -> bool)[@closure :dun])) *
                                (nat -> ((nat -> bool)[@closure :nat])) *
                                ((dun ->
                                    ((dun -> dun)[@closure
                                                   :(dun * (dun -> nat))]))
                                [@closure :dun -> nat]) *
                                ('k92 option ->
                                   (('j92 -> ('j92, 'k92) result)[@closure
                                                                   :'k92
                                                                    option]))
                                * state *
                                ((dun ->
                                    ((dun -> dun option)[@closure
                                                          :((dun ->
                                                               ((dun -> bool)
                                                               [@closure
                                                                 :dun]))
                                                             * dun *
                                                             (dun ->
                                                                ((dun -> dun)
                                                                [@closure
                                                                  :dun])))]))
                                [@closure
                                  :((dun -> ((dun -> bool)[@closure :dun])) *
                                     (dun -> ((dun -> dun)[@closure :dun])))]))]))
[@closure
  :((nat -> ((nat -> nat)[@closure :nat])) *
     (bool -> ((bool -> bool)[@closure :bool])) * (nat * (nat * nat)) *
     (timestamp * (address * (dun * dun))) * nat *
     ((dun -> ((dun -> dun)[@closure :(dun * (dun -> nat))]))[@closure
                                                               :dun -> nat])
     * (dun -> ((dun -> bool)[@closure :dun])) *
     (address -> ((address -> bool)[@closure :address])) *
     (dun -> ((dun -> bool)[@closure :dun])) *
     (nat -> ((nat -> bool)[@closure :nat])) *
     ((dun -> ((dun -> dun)[@closure :(dun * (dun -> nat))]))[@closure
                                                               :dun -> nat])
     *
     ('i92 option -> (('h92 -> ('h92, 'i92) result)[@closure :'i92 option]))
     *
     ((dun ->
         ((dun -> dun option)[@closure
                               :((dun -> ((dun -> bool)[@closure :dun])) *
                                  dun *
                                  (dun -> ((dun -> dun)[@closure :dun])))]))
     [@closure
       :((dun -> ((dun -> bool)[@closure :dun])) *
          (dun -> ((dun -> dun)[@closure :dun])))]))]). Type variables 'h92, 'i92, 'j92, 'k92 were replaced by unit.
./tests/extracted-code/liquidity-extract/tests/escrow.liq:91.57-137.33: Warning: 
Unresolved type ((msg option -> result)[@closure
                         :((nat -> ((nat -> nat)[@closure :nat])) *
                            (bool -> ((bool -> bool)[@closure :bool])) * (nat
                            * (nat * nat)) * (timestamp * (address * (dun *
                            dun))) * nat *
                            ((dun ->
                                ((dun -> dun)[@closure :(dun * (dun -> nat))]))
                            [@closure :dun -> nat]) *
                            (dun -> ((dun -> bool)[@closure :dun])) *
                            (address ->
                               ((address -> bool)[@closure :address]))
                            * (dun -> ((dun -> bool)[@closure :dun])) *
                            (nat -> ((nat -> bool)[@closure :nat])) *
                            ((dun ->
                                ((dun -> dun)[@closure :(dun * (dun -> nat))]))
                            [@closure :dun -> nat]) *
                            ('k92 option ->
                               (('j92 -> ('j92, 'k92) result)[@closure
                                                               :'k92 option]))
                            * state *
                            ((dun ->
                                ((dun -> dun option)[@closure
                                                      :((dun ->
                                                           ((dun -> bool)
                                                           [@closure :
                                                             dun]))
                                                         * dun *
                                                         (dun ->
                                                            ((dun -> dun)
                                                            [@closure :
                                                              dun])))]))
                            [@closure
                              :((dun -> ((dun -> bool)[@closure :dun])) *
                                 (dun -> ((dun -> dun)[@closure :dun])))]))]). Type variables 'j92, 'k92 were replaced by unit.
./tests/extracted-code/liquidity-extract/tests/escrow.liq:139.58-141.25: Warning: 
Unresolved type ((state -> result)[@closure
                    :(((msg * (timestamp * (address * (dun * dun)))) * (nat *
                       (nat * nat))) *
                       (((nat * (nat * nat)) ->
                           (((timestamp * (address * (dun * dun))) ->
                               ((state ->
                                   ((msg option -> result)[@closure
                                                            :((nat ->
                                                                 ((nat -> nat)
                                                                 [@closure
                                                                   :nat]))
                                                               *
                                                               (bool ->
                                                                  ((bool ->
                                                                    bool)
                                                                  [@closure
                                                                    :
                                                                    bool]))
                                                               * (nat * (nat
                                                               * nat)) *
                                                               (timestamp *
                                                               (address *
                                                               (dun * dun)))
                                                               * nat *
                                                               ((dun ->
                                                                   ((
                                                                   dun -> 
                                                                    dun)
                                                                   [@closure
                                                                    :(dun *
                                                                    (dun ->
                                                                    nat))]))
                                                               [@closure
                                                                 :dun -> nat])
                                                               *
                                                               (dun ->
                                                                  ((dun ->
                                                                    bool)
                                                                  [@closure
                                                                    :
                                                                    dun]))
                                                               *
                                                               (address ->
                                                                  ((address
                                                                    -> 
                                                                    bool)
                                                                  [@closure
                                                                    :
                                                                    address]))
                                                               *
                                                               (dun ->
                                                                  ((dun ->
                                                                    bool)
                                                                  [@closure
                                                                    :
                                                                    dun]))
                                                               *
                                                               (nat ->
                                                                  ((nat ->
                                                                    bool)
                                                                  [@closure
                                                                    :
                                                                    nat]))
                                                               *
                                                               ((dun ->
                                                                   ((
                                                                   dun -> 
                                                                    dun)
                                                                   [@closure
                                                                    :(dun *
                                                                    (dun ->
                                                                    nat))]))
                                                               [@closure
                                                                 :dun -> nat])
                                                               *
                                                               ('f94 option
                                                                  ->
                                                                  (('e94 ->
                                                                    ('e94,
                                                                    'f94)
                                                                    result)
                                                                  [@closure
                                                                    :
                                                                    'f94
                                                                    option]))
                                                               * state *
                                                               ((dun ->
                                                                   ((
                                                                   dun ->
                                                                    dun
                                                                    option)
                                                                   [@closure
                                                                    :((dun ->
                                                                    ((dun ->
                                                                    bool)[@closure
                                                                    :dun])) *
                                                                    dun *
                                                                    (dun ->
                                                                    ((dun ->
                                                                    dun)
                                                                    [@closure
                                                                    :dun])))]))
                                                               [@closure
                                                                 :((dun ->
                                                                    ((dun ->
                                                                    bool)
                                                                    [@closure
                                                                    :dun])) *
                                                                    (
                                                                    dun ->
                                                                    ((dun ->
                                                                    dun)
                                                                    [@closure
                                                                    :dun])))]))]))
                               [@closure
                                 :((nat -> ((nat -> nat)[@closure :nat])) *
                                    (bool -> ((bool -> bool)[@closure :bool]))
                                    * (nat * (nat * nat)) * (timestamp *
                                    (address * (dun * dun))) * nat *
                                    ((dun ->
                                        ((dun -> dun)[@closure
                                                       :(dun * (dun -> nat))]))
                                    [@closure :dun -> nat]) *
                                    (dun -> ((dun -> bool)[@closure :dun])) *
                                    (address ->
                                       ((address -> bool)[@closure :address]))
                                    * (dun -> ((dun -> bool)[@closure :dun]))
                                    * (nat -> ((nat -> bool)[@closure :nat]))
                                    *
                                    ((dun ->
                                        ((dun -> dun)[@closure
                                                       :(dun * (dun -> nat))]))
                                    [@closure :dun -> nat]) *
                                    ('d94 option ->
                                       (('s94 -> ('d94, 's94) result)
                                       [@closure :'d94 option]))
                                    *
                                    ((dun ->
                                        ((dun -> dun option)[@closure
                                                              :((dun ->
                                                                   ((
                                                                   dun ->
                                                                    bool)
                                                                   [@closure
                                                                    :dun]))
                                                                 * dun *
                                                                 (dun ->
                                                                    ((
                                                                    dun ->
                                                                    dun)
                                                                    [@closure
                                                                    :dun])))]))
                                    [@closure
                                      :((dun ->
                                           ((dun -> bool)[@closure :dun]))
                                         *
                                         (dun ->
                                            ((dun -> dun)[@closure :dun])))]))]))
                           [@closure
                             :((nat -> ((nat -> nat)[@closure :nat])) *
                                (bool -> ((bool -> bool)[@closure :bool])) *
                                (nat * (nat * nat)) * nat *
                                ((dun ->
                                    ((dun -> dun)[@closure
                                                   :(dun * (dun -> nat))]))
                                [@closure :dun -> nat]) *
                                (dun -> ((dun -> bool)[@closure :dun])) *
                                (address ->
                                   ((address -> bool)[@closure :address]))
                                * (dun -> ((dun -> bool)[@closure :dun])) *
                                (nat -> ((nat -> bool)[@closure :nat])) *
                                ((dun ->
                                    ((dun -> dun)[@closure
                                                   :(dun * (dun -> nat))]))
                                [@closure :dun -> nat]) *
                                ('r94 option ->
                                   (('q94 -> ('q94, 'r94) result)[@closure
                                                                   :'r94
                                                                    option]))
                                *
                                ((dun ->
                                    ((dun -> dun option)[@closure
                                                          :((dun ->
                                                               ((dun -> bool)
                                                               [@closure
                                                                 :dun]))
                                                             * dun *
                                                             (dun ->
                                                                ((dun -> dun)
                                                                [@closure
                                                                  :dun])))]))
                                [@closure
                                  :((dun -> ((dun -> bool)[@closure :dun])) *
                                     (dun -> ((dun -> dun)[@closure :dun])))]))]))
                       [@closure
                         :((nat -> ((nat -> nat)[@closure :nat])) *
                            (bool -> ((bool -> bool)[@closure :bool])) * nat
                            *
                            ((dun ->
                                ((dun -> dun)[@closure :(dun * (dun -> nat))]))
                            [@closure :dun -> nat]) *
                            (dun -> ((dun -> bool)[@closure :dun])) *
                            (address ->
                               ((address -> bool)[@closure :address]))
                            * (dun -> ((dun -> bool)[@closure :dun])) *
                            (nat -> ((nat -> bool)[@closure :nat])) *
                            ((dun ->
                                ((dun -> dun)[@closure :(dun * (dun -> nat))]))
                            [@closure :dun -> nat]) *
                            ('p94 option ->
                               (('o94 -> ('o94, 'p94) result)[@closure
                                                               :'p94 option]))
                            *
                            ((dun ->
                                ((dun -> dun option)[@closure
                                                      :((dun ->
                                                           ((dun -> bool)
                                                           [@closure :
                                                             dun]))
                                                         * dun *
                                                         (dun ->
                                                            ((dun -> dun)
                                                            [@closure :
                                                              dun])))]))
                            [@closure
                              :((dun -> ((dun -> bool)[@closure :dun])) *
                                 (dun -> ((dun -> dun)[@closure :dun])))]))]))]). Type variables 'd94, 'e94, 'f94, 'o94, 'p94, 'q94, 'r94, 's94 were replaced by unit.
./tests/extracted-code/liquidity-extract/tests/escrow.liq:166.18-166.111: Warning: 
Unresolved type ((state -> (operation list * state))[@closure
                                      :(((((msg * (timestamp * (address *
                                            (dun * dun)))) * (nat * (nat *
                                            nat))) ->
                                            ((state -> result)[@closure
                                                                :(((msg *
                                                                   (timestamp
                                                                   * (address
                                                                   * (dun *
                                                                   dun)))) *
                                                                   (nat *
                                                                   (nat *
                                                                   nat))) *
                                                                   ((
                                                                   (nat *
                                                                    (nat *
                                                                    nat)) ->
                                                                    ((
                                                                    (timestamp
                                                                    *
                                                                    (address
                                                                    * (dun *
                                                                    dun))) ->
                                                                    ((state
                                                                    ->
                                                                    ((msg
                                                                    option ->
                                                                    result)
                                                                    [@closure
                                                                    :((nat ->
                                                                    ((nat ->
                                                                    nat)[@closure
                                                                    :nat])) *
                                                                    (bool ->
                                                                    ((bool ->
                                                                    bool)
                                                                    [@closure
                                                                    :bool]))
                                                                    * (nat *
                                                                    (nat *
                                                                    nat)) *
                                                                    (timestamp
                                                                    *
                                                                    (address
                                                                    * (dun *
                                                                    dun))) *
                                                                    nat *
                                                                    ((dun ->
                                                                    ((dun ->
                                                                    dun)[@closure
                                                                    :(dun *
                                                                    (dun ->
                                                                    nat))]))
                                                                    [@closure
                                                                    :dun ->
                                                                    nat]) *
                                                                    (dun ->
                                                                    ((dun ->
                                                                    bool)
                                                                    [@closure
                                                                    :dun])) *
                                                                    (address
                                                                    ->
                                                                    ((address
                                                                    -> bool)
                                                                    [@closure
                                                                    :address]))
                                                                    *
                                                                    (dun ->
                                                                    ((dun ->
                                                                    bool)
                                                                    [@closure
                                                                    :dun])) *
                                                                    (nat ->
                                                                    ((nat ->
                                                                    bool)
                                                                    [@closure
                                                                    :nat])) *
                                                                    ((dun ->
                                                                    ((dun ->
                                                                    dun)[@closure
                                                                    :(dun *
                                                                    (dun ->
                                                                    nat))]))
                                                                    [@closure
                                                                    :dun ->
                                                                    nat]) *
                                                                    ('l95
                                                                    option ->
                                                                    (('k95 ->
                                                                    ('k95,
                                                                    'l95)
                                                                    result)
                                                                    [@closure
                                                                    :'l95
                                                                    option]))
                                                                    * state *
                                                                    ((dun ->
                                                                    ((dun ->
                                                                    dun
                                                                    option)
                                                                    [@closure
                                                                    :((dun ->
                                                                    ((dun ->
                                                                    bool)[@closure
                                                                    :dun])) *
                                                                    dun *
                                                                    (dun ->
                                                                    ((dun ->
                                                                    dun)
                                                                    [@closure
                                                                    :dun])))]))
                                                                    [@closure
                                                                    :((dun ->
                                                                    ((dun ->
                                                                    bool)[@closure
                                                                    :dun])) *
                                                                    (dun ->
                                                                    ((dun ->
                                                                    dun)
                                                                    [@closure
                                                                    :dun])))]))]))
                                                                    [@closure
                                                                    :((nat ->
                                                                    ((nat ->
                                                                    nat)[@closure
                                                                    :nat])) *
                                                                    (bool ->
                                                                    ((bool ->
                                                                    bool)
                                                                    [@closure
                                                                    :bool]))
                                                                    * (nat *
                                                                    (nat *
                                                                    nat)) *
                                                                    (timestamp
                                                                    *
                                                                    (address
                                                                    * (dun *
                                                                    dun))) *
                                                                    nat *
                                                                    ((dun ->
                                                                    ((dun ->
                                                                    dun)[@closure
                                                                    :(dun *
                                                                    (dun ->
                                                                    nat))]))
                                                                    [@closure
                                                                    :dun ->
                                                                    nat]) *
                                                                    (dun ->
                                                                    ((dun ->
                                                                    bool)
                                                                    [@closure
                                                                    :dun])) *
                                                                    (address
                                                                    ->
                                                                    ((address
                                                                    -> bool)
                                                                    [@closure
                                                                    :address]))
                                                                    *
                                                                    (dun ->
                                                                    ((dun ->
                                                                    bool)
                                                                    [@closure
                                                                    :dun])) *
                                                                    (nat ->
                                                                    ((nat ->
                                                                    bool)
                                                                    [@closure
                                                                    :nat])) *
                                                                    ((dun ->
                                                                    ((dun ->
                                                                    dun)[@closure
                                                                    :(dun *
                                                                    (dun ->
                                                                    nat))]))
                                                                    [@closure
                                                                    :dun ->
                                                                    nat]) *
                                                                    ('j95
                                                                    option ->
                                                                    (('y94 ->
                                                                    ('j95,
                                                                    'y94)
                                                                    result)
                                                                    [@closure
                                                                    :'j95
                                                                    option]))
                                                                    *
                                                                    ((dun ->
                                                                    ((dun ->
                                                                    dun
                                                                    option)
                                                                    [@closure
                                                                    :((dun ->
                                                                    ((dun ->
                                                                    bool)[@closure
                                                                    :dun])) *
                                                                    dun *
                                                                    (dun ->
                                                                    ((dun ->
                                                                    dun)
                                                                    [@closure
                                                                    :dun])))]))
                                                                    [@closure
                                                                    :((dun ->
                                                                    ((dun ->
                                                                    bool)[@closure
                                                                    :dun])) *
                                                                    (dun ->
                                                                    ((dun ->
                                                                    dun)
                                                                    [@closure
                                                                    :dun])))]))]))
                                                                    [@closure
                                                                    :((nat ->
                                                                    ((nat ->
                                                                    nat)[@closure
                                                                    :nat])) *
                                                                    (bool ->
                                                                    ((bool ->
                                                                    bool)
                                                                    [@closure
                                                                    :bool]))
                                                                    * (nat *
                                                                    (nat *
                                                                    nat)) *
                                                                    nat *
                                                                    ((dun ->
                                                                    ((dun ->
                                                                    dun)[@closure
                                                                    :(dun *
                                                                    (dun ->
                                                                    nat))]))
                                                                    [@closure
                                                                    :dun ->
                                                                    nat]) *
                                                                    (dun ->
                                                                    ((dun ->
                                                                    bool)
                                                                    [@closure
                                                                    :dun])) *
                                                                    (address
                                                                    ->
                                                                    ((address
                                                                    -> bool)
                                                                    [@closure
                                                                    :address]))
                                                                    *
                                                                    (dun ->
                                                                    ((dun ->
                                                                    bool)
                                                                    [@closure
                                                                    :dun])) *
                                                                    (nat ->
                                                                    ((nat ->
                                                                    bool)
                                                                    [@closure
                                                                    :nat])) *
                                                                    ((dun ->
                                                                    ((dun ->
                                                                    dun)[@closure
                                                                    :(dun *
                                                                    (dun ->
                                                                    nat))]))
                                                                    [@closure
                                                                    :dun ->
                                                                    nat]) *
                                                                    ('w94
                                                                    option ->
                                                                    (('u94 ->
                                                                    ('u94,
                                                                    'w94)
                                                                    result)
                                                                    [@closure
                                                                    :'w94
                                                                    option]))
                                                                    *
                                                                    ((dun ->
                                                                    ((dun ->
                                                                    dun
                                                                    option)
                                                                    [@closure
                                                                    :((dun ->
                                                                    ((dun ->
                                                                    bool)[@closure
                                                                    :dun])) *
                                                                    dun *
                                                                    (dun ->
                                                                    ((dun ->
                                                                    dun)
                                                                    [@closure
                                                                    :dun])))]))
                                                                    [@closure
                                                                    :((dun ->
                                                                    ((dun ->
                                                                    bool)[@closure
                                                                    :dun])) *
                                                                    (dun ->
                                                                    ((dun ->
                                                                    dun)
                                                                    [@closure
                                                                    :dun])))]))]))
                                                                   [@closure
                                                                    :((nat ->
                                                                    ((nat ->
                                                                    nat)[@closure
                                                                    :nat])) *
                                                                    (bool ->
                                                                    ((bool ->
                                                                    bool)
                                                                    [@closure
                                                                    :bool]))
                                                                    * nat *
                                                                    ((dun ->
                                                                    ((dun ->
                                                                    dun)[@closure
                                                                    :(dun *
                                                                    (dun ->
                                                                    nat))]))
                                                                    [@closure
                                                                    :dun ->
                                                                    nat]) *
                                                                    (dun ->
                                                                    ((dun ->
                                                                    bool)
                                                                    [@closure
                                                                    :dun])) *
                                                                    (address
                                                                    ->
                                                                    ((address
                                                                    -> bool)
                                                                    [@closure
                                                                    :address]))
                                                                    *
                                                                    (dun ->
                                                                    ((dun ->
                                                                    bool)
                                                                    [@closure
                                                                    :dun])) *
                                                                    (nat ->
                                                                    ((nat ->
                                                                    bool)
                                                                    [@closure
                                                                    :nat])) *
                                                                    ((dun ->
                                                                    ((dun ->
                                                                    dun)[@closure
                                                                    :(dun *
                                                                    (dun ->
                                                                    nat))]))
                                                                    [@closure
                                                                    :dun ->
                                                                    nat]) *
                                                                    ('y95
                                                                    option ->
                                                                    (('w95 ->
                                                                    ('w95,
                                                                    'y95)
                                                                    result)
                                                                    [@closure
                                                                    :'y95
                                                                    option]))
                                                                    *
                                                                    ((dun ->
                                                                    ((dun ->
                                                                    dun
                                                                    option)
                                                                    [@closure
                                                                    :((dun ->
                                                                    ((dun ->
                                                                    bool)[@closure
                                                                    :dun])) *
                                                                    dun *
                                                                    (dun ->
                                                                    ((dun ->
                                                                    dun)
                                                                    [@closure
                                                                    :dun])))]))
                                                                    [@closure
                                                                    :((dun ->
                                                                    ((dun ->
                                                                    bool)[@closure
                                                                    :dun])) *
                                                                    (dun ->
                                                                    ((dun ->
                                                                    dun)
                                                                    [@closure
                                                                    :dun])))]))]))]))
                                         [@closure
                                           :(((nat * (nat * nat)) ->
                                                (((timestamp * (address *
                                                    (dun * dun))) ->
                                                    ((state ->
                                                        ((msg option ->
                                                            result)[@closure
                                                                    :((nat ->
                                                                    ((nat ->
                                                                    nat)[@closure
                                                                    :nat])) *
                                                                    (bool ->
                                                                    ((bool ->
                                                                    bool)
                                                                    [@closure
                                                                    :bool]))
                                                                    * (nat *
                                                                    (nat *
                                                                    nat)) *
                                                                    (timestamp
                                                                    *
                                                                    (address
                                                                    * (dun *
                                                                    dun))) *
                                                                    nat *
                                                                    ((dun ->
                                                                    ((dun ->
                                                                    dun)[@closure
                                                                    :(dun *
                                                                    (dun ->
                                                                    nat))]))
                                                                    [@closure
                                                                    :dun ->
                                                                    nat]) *
                                                                    (dun ->
                                                                    ((dun ->
                                                                    bool)
                                                                    [@closure
                                                                    :dun])) *
                                                                    (address
                                                                    ->
                                                                    ((address
                                                                    -> bool)
                                                                    [@closure
                                                                    :address]))
                                                                    *
                                                                    (dun ->
                                                                    ((dun ->
                                                                    bool)
                                                                    [@closure
                                                                    :dun])) *
                                                                    (nat ->
                                                                    ((nat ->
                                                                    bool)
                                                                    [@closure
                                                                    :nat])) *
                                                                    ((dun ->
                                                                    ((dun ->
                                                                    dun)[@closure
                                                                    :(dun *
                                                                    (dun ->
                                                                    nat))]))
                                                                    [@closure
                                                                    :dun ->
                                                                    nat]) *
                                                                    ('u95
                                                                    option ->
                                                                    (('s95 ->
                                                                    ('s95,
                                                                    'u95)
                                                                    result)
                                                                    [@closure
                                                                    :'u95
                                                                    option]))
                                                                    * state *
                                                                    ((dun ->
                                                                    ((dun ->
                                                                    dun
                                                                    option)
                                                                    [@closure
                                                                    :((dun ->
                                                                    ((dun ->
                                                                    bool)[@closure
                                                                    :dun])) *
                                                                    dun *
                                                                    (dun ->
                                                                    ((dun ->
                                                                    dun)
                                                                    [@closure
                                                                    :dun])))]))
                                                                    [@closure
                                                                    :((dun ->
                                                                    ((dun ->
                                                                    bool)[@closure
                                                                    :dun])) *
                                                                    (dun ->
                                                                    ((dun ->
                                                                    dun)
                                                                    [@closure
                                                                    :dun])))]))]))
                                                    [@closure
                                                      :((nat ->
                                                           ((nat -> nat)
                                                           [@closure :
                                                             nat]))
                                                         *
                                                         (bool ->
                                                            ((bool -> bool)
                                                            [@closure :
                                                              bool]))
                                                         * (nat * (nat *
                                                         nat)) * (timestamp *
                                                         (address * (dun *
                                                         dun))) * nat *
                                                         ((dun ->
                                                             ((dun -> dun)
                                                             [@closure
                                                               :(dun *
                                                                  (dun -> nat))]))
                                                         [@closure
                                                           :dun -> nat])
                                                         *
                                                         (dun ->
                                                            ((dun -> bool)
                                                            [@closure :
                                                              dun]))
                                                         *
                                                         (address ->
                                                            ((address -> bool)
                                                            [@closure
                                                              :address]))
                                                         *
                                                         (dun ->
                                                            ((dun -> bool)
                                                            [@closure :
                                                              dun]))
                                                         *
                                                         (nat ->
                                                            ((nat -> bool)
                                                            [@closure :
                                                              nat]))
                                                         *
                                                         ((dun ->
                                                             ((dun -> dun)
                                                             [@closure
                                                               :(dun *
                                                                  (dun -> nat))]))
                                                         [@closure
                                                           :dun -> nat])
                                                         *
                                                         ('r95 option ->
                                                            (('q95 ->
                                                                ('q95, 
                                                                  'r95)
                                                                  result)
                                                            [@closure
                                                              :'r95 option]))
                                                         *
                                                         ((dun ->
                                                             ((dun ->
                                                                 dun option)
                                                             [@closure
                                                               :((dun ->
                                                                    ((
                                                                    dun ->
                                                                    bool)
                                                                    [@closure
                                                                    :dun]))
                                                                  * dun *
                                                                  (dun ->
                                                                    ((
                                                                    dun ->
                                                                    dun)
                                                                    [@closure
                                                                    :dun])))]))
                                                         [@closure
                                                           :((dun ->
                                                                ((dun -> bool)
                                                                [@closure
                                                                  :dun]))
                                                              *
                                                              (dun ->
                                                                 ((dun -> dun)
                                                                 [@closure
                                                                   :dun])))]))]))
                                                [@closure
                                                  :((nat ->
                                                       ((nat -> nat)[@closure
                                                                    :nat]))
                                                     *
                                                     (bool ->
                                                        ((bool -> bool)
                                                        [@closure :bool]))
                                                     * (nat * (nat * nat)) *
                                                     nat *
                                                     ((dun ->
                                                         ((dun -> dun)
                                                         [@closure
                                                           :(dun *
                                                              (dun -> nat))]))
                                                     [@closure :dun -> nat])
                                                     *
                                                     (dun ->
                                                        ((dun -> bool)
                                                        [@closure :dun]))
                                                     *
                                                     (address ->
                                                        ((address -> bool)
                                                        [@closure :address]))
                                                     *
                                                     (dun ->
                                                        ((dun -> bool)
                                                        [@closure :dun]))
                                                     *
                                                     (nat ->
                                                        ((nat -> bool)
                                                        [@closure :nat]))
                                                     *
                                                     ((dun ->
                                                         ((dun -> dun)
                                                         [@closure
                                                           :(dun *
                                                              (dun -> nat))]))
                                                     [@closure :dun -> nat])
                                                     *
                                                     ('p95 option ->
                                                        (('o95 ->
                                                            ('o95, 'p95)
                                                              result)
                                                        [@closure
                                                          :'p95 option]))
                                                     *
                                                     ((dun ->
                                                         ((dun -> dun option)
                                                         [@closure
                                                           :((dun ->
                                                                ((dun -> bool)
                                                                [@closure
                                                                  :dun]))
                                                              * dun *
                                                              (dun ->
                                                                 ((dun -> dun)
                                                                 [@closure
                                                                   :dun])))]))
                                                     [@closure
                                                       :((dun ->
                                                            ((dun -> bool)
                                                            [@closure :
                                                              dun]))
                                                          *
                                                          (dun ->
                                                             ((dun -> dun)
                                                             [@closure :
                                                               dun])))]))]))
                                           [@closure
                                             :((nat ->
                                                  ((nat -> nat)[@closure
                                                                 :nat]))
                                                *
                                                (bool ->
                                                   ((bool -> bool)[@closure
                                                                    :
                                                                    bool]))
                                                * nat *
                                                ((dun ->
                                                    ((dun -> dun)[@closure
                                                                   :(dun *
                                                                    (dun ->
                                                                    nat))]))
                                                [@closure :dun -> nat]) *
                                                (dun ->
                                                   ((dun -> bool)[@closure
                                                                   :dun]))
                                                *
                                                (address ->
                                                   ((address -> bool)
                                                   [@closure :address]))
                                                *
                                                (dun ->
                                                   ((dun -> bool)[@closure
                                                                   :dun]))
                                                *
                                                (nat ->
                                                   ((nat -> bool)[@closure
                                                                   :nat]))
                                                *
                                                ((dun ->
                                                    ((dun -> dun)[@closure
                                                                   :(dun *
                                                                    (dun ->
                                                                    nat))]))
                                                [@closure :dun -> nat]) *
                                                ('n95 option ->
                                                   (('m95 ->
                                                       ('m95, 'n95) result)
                                                   [@closure :'n95 option]))
                                                *
                                                ((dun ->
                                                    ((dun -> dun option)
                                                    [@closure
                                                      :((dun ->
                                                           ((dun -> bool)
                                                           [@closure :
                                                             dun]))
                                                         * dun *
                                                         (dun ->
                                                            ((dun -> dun)
                                                            [@closure :
                                                              dun])))]))
                                                [@closure
                                                  :((dun ->
                                                       ((dun -> bool)
                                                       [@closure :dun]))
                                                     *
                                                     (dun ->
                                                        ((dun -> dun)
                                                        [@closure :dun])))]))])])
                                         * ((msg * (timestamp * (address *
                                         (dun * dun)))) * (nat * (nat *
                                         nat))))]). Type variables 'j95, 'k95, 'l95, 'm95, 'n95, 'o95, 'p95, 'q95, 'r95, 's95, 'u94, 'u95, 'w94, 'w95, 'y94, 'y95 were replaced by unit.
./tests/extracted-code/liquidity-extract/tests/liquidity_eip20token.liq:2.38-2.43: Warning: 
Unresolved type 'a. Type variables 'a were replaced by unit.
./tests/extracted-code/liquidity-extract/tests/liquidity_eip20token.liq:2.18-2.19: Warning: 
Unresolved type ('a * 'b). Type variables 'a, 'b were replaced by unit.
./tests/extracted-code/liquidity-extract/tests/liquidity_eip20token.liq:3.38-3.43: Warning: 
Unresolved type 'b. Type variables 'b were replaced by unit.
./tests/extracted-code/liquidity-extract/tests/liquidity_eip20token.liq:3.18-3.19: Warning: 
Unresolved type ('a * 'b). Type variables 'a, 'b were replaced by unit.
./tests/extracted-code/liquidity-extract/tests/liquidity_eip20token.liq:84.35-89.97: Warning: 
Unresolved type ((address ->
    ((int ->
        ((state -> result)[@closure
                            :(int * ((unit -> 'e104 result)[@closure :nat]) *
                               address *
                               (((address, int) map ->
                                   ((address ->
                                       ((int -> (address, int) map)[@closure
                                                                    :((int ->
                                                                    ((int ->
                                                                    int)[@closure
                                                                    :int])) *
                                                                    address *
                                                                    (address,
                                                                    int) map)]))
                                   [@closure
                                     :((int -> ((int -> int)[@closure :int]))
                                        * (address, int) map)]))[@closure
                                                                  :int ->
                                                                    ((
                                                                    int ->
                                                                    int)
                                                                    [@closure
                                                                    :int])])
                               * (int -> ((int -> bool)[@closure :int])) *
                               (int -> ((int -> int)[@closure :int])) *
                               address)]))[@closure
                                            :(((unit -> 'd104 result)
                                               [@closure :nat]) * address *
                                               (((address, int) map ->
                                                   ((address ->
                                                       ((int ->
                                                           (address, int) map)
                                                       [@closure
                                                         :((int ->
                                                              ((int -> int)
                                                              [@closure :
                                                                int]))
                                                            * address *
                                                            (address, 
                                                            int) map)]))
                                                   [@closure
                                                     :((int ->
                                                          ((int -> int)
                                                          [@closure :
                                                            int]))
                                                        * (address, int) map)]))
                                               [@closure
                                                 :int ->
                                                    ((int -> int)[@closure
                                                                   :int])])
                                               *
                                               (int ->
                                                  ((int -> bool)[@closure
                                                                  :int]))
                                               *
                                               (int ->
                                                  ((int -> int)[@closure
                                                                 :int]))
                                               * address)]))[@closure
                                                              :(((unit ->
                                                                    'c104
                                                                    result)
                                                                 [@closure
                                                                   :nat])
                                                                 * address *
                                                                 (((address,
                                                                    int) map
                                                                    ->
                                                                    ((
                                                                    address
                                                                    ->
                                                                    ((int ->
                                                                    (address,
                                                                    int) map)
                                                                    [@closure
                                                                    :((int ->
                                                                    ((int ->
                                                                    int)[@closure
                                                                    :int])) *
                                                                    address *
                                                                    (address,
                                                                    int) map)]))
                                                                    [@closure
                                                                    :((int ->
                                                                    ((int ->
                                                                    int)[@closure
                                                                    :int])) *
                                                                    (address,
                                                                    int) map)]))
                                                                 [@closure
                                                                   :int ->
                                                                    ((int ->
                                                                    int)
                                                                    [@closure
                                                                    :int])])
                                                                 *
                                                                 (int ->
                                                                    ((
                                                                    int ->
                                                                    bool)
                                                                    [@closure
                                                                    :int]))
                                                                 *
                                                                 (int ->
                                                                    ((
                                                                    int ->
                                                                    int)
                                                                    [@closure
                                                                    :int])))]). Type variables 'c104, 'd104, 'e104 were replaced by unit.
./tests/extracted-code/liquidity-extract/tests/liquidity_eip20token.liq:84.51-89.97: Warning: 
Unresolved type ((int ->
    ((state -> result)[@closure
                        :(int * ((unit -> 'e104 result)[@closure :nat]) *
                           address *
                           (((address, int) map ->
                               ((address ->
                                   ((int -> (address, int) map)[@closure
                                                                 :((int ->
                                                                    ((int ->
                                                                    int)
                                                                    [@closure
                                                                    :int])) *
                                                                    address *
                                                                    (
                                                                    address,
                                                                    int) map)]))
                               [@closure
                                 :((int -> ((int -> int)[@closure :int])) *
                                    (address, int) map)]))[@closure
                                                            :int ->
                                                               ((int -> int)
                                                               [@closure
                                                                 :int])])
                           * (int -> ((int -> bool)[@closure :int])) *
                           (int -> ((int -> int)[@closure :int])) * address)]))
[@closure
  :(((unit -> 'd104 result)[@closure :nat]) * address *
     (((address, int) map ->
         ((address ->
             ((int -> (address, int) map)[@closure
                                           :((int ->
                                                ((int -> int)[@closure :int]))
                                              * address * (address, int) map)]))
         [@closure
           :((int -> ((int -> int)[@closure :int])) * (address, int) map)]))
     [@closure :int -> ((int -> int)[@closure :int])]) *
     (int -> ((int -> bool)[@closure :int])) *
     (int -> ((int -> int)[@closure :int])) * address)]). Type variables 'd104, 'e104 were replaced by unit.
./tests/extracted-code/liquidity-extract/tests/liquidity_eip20token.liq:84.73-89.97: Warning: 
Unresolved type ((state -> result)[@closure
                    :(int * ((unit -> 'e104 result)[@closure :nat]) * address
                       *
                       (((address, int) map ->
                           ((address ->
                               ((int -> (address, int) map)[@closure
                                                             :((int ->
                                                                  ((int ->
                                                                    int)
                                                                  [@closure
                                                                    :
                                                                    int]))
                                                                * address *
                                                                (address,
                                                                int) map)]))
                           [@closure
                             :((int -> ((int -> int)[@closure :int])) *
                                (address, int) map)]))[@closure
                                                        :int ->
                                                           ((int -> int)
                                                           [@closure :
                                                             int])])
                       * (int -> ((int -> bool)[@closure :int])) *
                       (int -> ((int -> int)[@closure :int])) * address)]). Type variables 'e104 were replaced by unit.
./tests/extracted-code/liquidity-extract/tests/liquidity_eip20token.liq:95.43-105.25: Warning: 
Unresolved type ((address ->
    ((address ->
        ((int ->
            ((state -> result)[@closure
                                :(int * nat * address *
                                   ((unit -> 'm104 result)[@closure :nat]) *
                                   address *
                                   (((address, int) map ->
                                       ((address ->
                                           ((int -> (address, int) map)
                                           [@closure
                                             :((int ->
                                                  ((int -> int)[@closure
                                                                 :int]))
                                                * address * (address, 
                                                int) map)]))[@closure
                                                              :((int ->
                                                                   ((
                                                                   int -> 
                                                                    int)
                                                                   [@closure
                                                                    :int]))
                                                                 * (address,
                                                                 int) map)]))
                                   [@closure
                                     :int -> ((int -> int)[@closure :int])])
                                   * (int -> ((int -> bool)[@closure :int]))
                                   *
                                   (bool -> ((bool -> bool)[@closure :bool]))
                                   *
                                   ('o104 option ->
                                      (('n104 -> ('n104, 'o104) result)
                                      [@closure :'o104 option]))
                                   * (int -> ((int -> int)[@closure :int])) *
                                   address)]))[@closure
                                                :(nat * address *
                                                   ((unit -> 'j104 result)
                                                   [@closure :nat]) * address
                                                   *
                                                   (((address, int) map ->
                                                       ((address ->
                                                           ((int ->
                                                               (address, 
                                                                 int) map)
                                                           [@closure
                                                             :((int ->
                                                                  ((int ->
                                                                    int)
                                                                  [@closure
                                                                    :
                                                                    int]))
                                                                * address *
                                                                (address,
                                                                int) map)]))
                                                       [@closure
                                                         :((int ->
                                                              ((int -> int)
                                                              [@closure :
                                                                int]))
                                                            * (address, 
                                                            int) map)]))
                                                   [@closure
                                                     :int ->
                                                        ((int -> int)
                                                        [@closure :int])])
                                                   *
                                                   (int ->
                                                      ((int -> bool)[@closure
                                                                    :int]))
                                                   *
                                                   (bool ->
                                                      ((bool -> bool)
                                                      [@closure :bool]))
                                                   *
                                                   ('l104 option ->
                                                      (('k104 ->
                                                          ('k104, 'l104)
                                                            result)[@closure
                                                                    :'l104
                                                                    option]))
                                                   *
                                                   (int ->
                                                      ((int -> int)[@closure
                                                                    :int]))
                                                   * address)]))[@closure
                                                                  :(nat *
                                                                    address *
                                                                    ((
                                                                    unit ->
                                                                    'v104
                                                                    result)
                                                                    [@closure
                                                                    :nat]) *
                                                                    address *
                                                                    ((
                                                                    (address,
                                                                    int) map
                                                                    ->
                                                                    ((address
                                                                    ->
                                                                    ((int ->
                                                                    (address,
                                                                    int) map)
                                                                    [@closure
                                                                    :((int ->
                                                                    ((int ->
                                                                    int)[@closure
                                                                    :int])) *
                                                                    address *
                                                                    (address,
                                                                    int) map)]))
                                                                    [@closure
                                                                    :((int ->
                                                                    ((int ->
                                                                    int)[@closure
                                                                    :int])) *
                                                                    (address,
                                                                    int) map)]))
                                                                    [@closure
                                                                    :int ->
                                                                    ((int ->
                                                                    int)
                                                                    [@closure
                                                                    :int])])
                                                                    *
                                                                    (int ->
                                                                    ((int ->
                                                                    bool)
                                                                    [@closure
                                                                    :int])) *
                                                                    (bool ->
                                                                    ((bool ->
                                                                    bool)
                                                                    [@closure
                                                                    :bool]))
                                                                    *
                                                                    ('i104
                                                                    option ->
                                                                    (('w104
                                                                    ->
                                                                    ('i104,
                                                                    'w104)
                                                                    result)
                                                                    [@closure
                                                                    :'i104
                                                                    option]))
                                                                    *
                                                                    (int ->
                                                                    ((int ->
                                                                    int)
                                                                    [@closure
                                                                    :int])))]))
[@closure
  :(nat * address * ((unit -> 's104 result)[@closure :nat]) *
     (((address, int) map ->
         ((address ->
             ((int -> (address, int) map)[@closure
                                           :((int ->
                                                ((int -> int)[@closure :int]))
                                              * address * (address, int) map)]))
         [@closure
           :((int -> ((int -> int)[@closure :int])) * (address, int) map)]))
     [@closure :int -> ((int -> int)[@closure :int])]) *
     (int -> ((int -> bool)[@closure :int])) *
     (bool -> ((bool -> bool)[@closure :bool])) *
     ('u104 option ->
        (('t104 -> ('t104, 'u104) result)[@closure :'u104 option]))
     * (int -> ((int -> int)[@closure :int])))]). Type variables 'i104, 'j104, 'k104, 'l104, 'm104, 'n104, 'o104, 's104, 't104, 'u104, 'v104, 'w104 were replaced by unit.
./tests/extracted-code/liquidity-extract/tests/liquidity_eip20token.liq:95.61-105.25: Warning: 
Unresolved type ((address ->
    ((int ->
        ((state -> result)[@closure
                            :(int * nat * address *
                               ((unit -> 'm104 result)[@closure :nat]) *
                               address *
                               (((address, int) map ->
                                   ((address ->
                                       ((int -> (address, int) map)[@closure
                                                                    :((int ->
                                                                    ((int ->
                                                                    int)[@closure
                                                                    :int])) *
                                                                    address *
                                                                    (address,
                                                                    int) map)]))
                                   [@closure
                                     :((int -> ((int -> int)[@closure :int]))
                                        * (address, int) map)]))[@closure
                                                                  :int ->
                                                                    ((
                                                                    int ->
                                                                    int)
                                                                    [@closure
                                                                    :int])])
                               * (int -> ((int -> bool)[@closure :int])) *
                               (bool -> ((bool -> bool)[@closure :bool])) *
                               ('o104 option ->
                                  (('n104 -> ('n104, 'o104) result)[@closure
                                                                    :'o104
                                                                    option]))
                               * (int -> ((int -> int)[@closure :int])) *
                               address)]))[@closure
                                            :(nat * address *
                                               ((unit -> 'j104 result)
                                               [@closure :nat]) * address *
                                               (((address, int) map ->
                                                   ((address ->
                                                       ((int ->
                                                           (address, int) map)
                                                       [@closure
                                                         :((int ->
                                                              ((int -> int)
                                                              [@closure :
                                                                int]))
                                                            * address *
                                                            (address, 
                                                            int) map)]))
                                                   [@closure
                                                     :((int ->
                                                          ((int -> int)
                                                          [@closure :
                                                            int]))
                                                        * (address, int) map)]))
                                               [@closure
                                                 :int ->
                                                    ((int -> int)[@closure
                                                                   :int])])
                                               *
                                               (int ->
                                                  ((int -> bool)[@closure
                                                                  :int]))
                                               *
                                               (bool ->
                                                  ((bool -> bool)[@closure
                                                                   :bool]))
                                               *
                                               ('l104 option ->
                                                  (('k104 ->
                                                      ('k104, 'l104) result)
                                                  [@closure :'l104 option]))
                                               *
                                               (int ->
                                                  ((int -> int)[@closure
                                                                 :int]))
                                               * address)]))[@closure
                                                              :(nat * address
                                                                 *
                                                                 ((unit ->
                                                                    'v104
                                                                    result)
                                                                 [@closure
                                                                   :nat])
                                                                 * address *
                                                                 (((address,
                                                                    int) map
                                                                    ->
                                                                    ((
                                                                    address
                                                                    ->
                                                                    ((int ->
                                                                    (address,
                                                                    int) map)
                                                                    [@closure
                                                                    :((int ->
                                                                    ((int ->
                                                                    int)[@closure
                                                                    :int])) *
                                                                    address *
                                                                    (address,
                                                                    int) map)]))
                                                                    [@closure
                                                                    :((int ->
                                                                    ((int ->
                                                                    int)[@closure
                                                                    :int])) *
                                                                    (address,
                                                                    int) map)]))
                                                                 [@closure
                                                                   :int ->
                                                                    ((int ->
                                                                    int)
                                                                    [@closure
                                                                    :int])])
                                                                 *
                                                                 (int ->
                                                                    ((
                                                                    int ->
                                                                    bool)
                                                                    [@closure
                                                                    :int]))
                                                                 *
                                                                 (bool ->
                                                                    ((
                                                                    bool ->
                                                                    bool)
                                                                    [@closure
                                                                    :bool]))
                                                                 *
                                                                 ('i104
                                                                    option ->
                                                                    ((
                                                                    'w104 ->
                                                                    ('i104,
                                                                    'w104)
                                                                    result)
                                                                    [@closure
                                                                    :'i104
                                                                    option]))
                                                                 *
                                                                 (int ->
                                                                    ((
                                                                    int ->
                                                                    int)
                                                                    [@closure
                                                                    :int])))]). Type variables 'i104, 'j104, 'k104, 'l104, 'm104, 'n104, 'o104, 'v104, 'w104 were replaced by unit.
./tests/extracted-code/liquidity-extract/tests/liquidity_eip20token.liq:95.77-105.25: Warning: 
Unresolved type ((int ->
    ((state -> result)[@closure
                        :(int * nat * address *
                           ((unit -> 'm104 result)[@closure :nat]) * address
                           *
                           (((address, int) map ->
                               ((address ->
                                   ((int -> (address, int) map)[@closure
                                                                 :((int ->
                                                                    ((int ->
                                                                    int)
                                                                    [@closure
                                                                    :int])) *
                                                                    address *
                                                                    (
                                                                    address,
                                                                    int) map)]))
                               [@closure
                                 :((int -> ((int -> int)[@closure :int])) *
                                    (address, int) map)]))[@closure
                                                            :int ->
                                                               ((int -> int)
                                                               [@closure
                                                                 :int])])
                           * (int -> ((int -> bool)[@closure :int])) *
                           (bool -> ((bool -> bool)[@closure :bool])) *
                           ('o104 option ->
                              (('n104 -> ('n104, 'o104) result)[@closure
                                                                 :'o104
                                                                    option]))
                           * (int -> ((int -> int)[@closure :int])) *
                           address)]))[@closure
                                        :(nat * address *
                                           ((unit -> 'j104 result)[@closure
                                                                    :
                                                                    nat])
                                           * address *
                                           (((address, int) map ->
                                               ((address ->
                                                   ((int ->
                                                       (address, int) map)
                                                   [@closure
                                                     :((int ->
                                                          ((int -> int)
                                                          [@closure :
                                                            int]))
                                                        * address * (
                                                        address, int) map)]))
                                               [@closure
                                                 :((int ->
                                                      ((int -> int)[@closure
                                                                    :int]))
                                                    * (address, int) map)]))
                                           [@closure
                                             :int ->
                                                ((int -> int)[@closure :int])])
                                           *
                                           (int ->
                                              ((int -> bool)[@closure :int]))
                                           *
                                           (bool ->
                                              ((bool -> bool)[@closure :bool]))
                                           *
                                           ('l104 option ->
                                              (('k104 ->
                                                  ('k104, 'l104) result)
                                              [@closure :'l104 option]))
                                           *
                                           (int ->
                                              ((int -> int)[@closure :int]))
                                           * address)]). Type variables 'j104, 'k104, 'l104, 'm104, 'n104, 'o104 were replaced by unit.
./tests/extracted-code/liquidity-extract/tests/liquidity_eip20token.liq:95.99-105.25: Warning: 
Unresolved type ((state -> result)[@closure
                    :(int * nat * address *
                       ((unit -> 'm104 result)[@closure :nat]) * address *
                       (((address, int) map ->
                           ((address ->
                               ((int -> (address, int) map)[@closure
                                                             :((int ->
                                                                  ((int ->
                                                                    int)
                                                                  [@closure
                                                                    :
                                                                    int]))
                                                                * address *
                                                                (address,
                                                                int) map)]))
                           [@closure
                             :((int -> ((int -> int)[@closure :int])) *
                                (address, int) map)]))[@closure
                                                        :int ->
                                                           ((int -> int)
                                                           [@closure :
                                                             int])])
                       * (int -> ((int -> bool)[@closure :int])) *
                       (bool -> ((bool -> bool)[@closure :bool])) *
                       ('o104 option ->
                          (('n104 -> ('n104, 'o104) result)[@closure
                                                             :'o104 option]))
                       * (int -> ((int -> int)[@closure :int])) * address)]). Type variables 'm104, 'n104, 'o104 were replaced by unit.
./tests/extracted-code/liquidity-extract/tests/liquidity_eip20token.liq:111.63-120.33: Warning: 
Unresolved type ((state ->
    ((msg option -> result)[@closure
                             :((timestamp * (address * (dun * dun))) * nat *
                                state *
                                (address ->
                                   ((address ->
                                       ((int ->
                                           ((state -> 'c110 result)[@closure
                                                                    :(int *
                                                                    address *
                                                                    address)]))
                                       [@closure :(address * address)]))
                                   [@closure :address]))
                                *
                                ((address ->
                                    ((address ->
                                        ((int ->
                                            ((state -> result)[@closure
                                                                :(int *
                                                                   ((
                                                                   unit ->
                                                                    'k110
                                                                    result)
                                                                   [@closure
                                                                    :nat])
                                                                   * address
                                                                   *
                                                                   ((
                                                                   (address,
                                                                    int) map
                                                                    ->
                                                                    ((
                                                                    address
                                                                    ->
                                                                    ((int ->
                                                                    (address,
                                                                    int) map)
                                                                    [@closure
                                                                    :((int ->
                                                                    ((int ->
                                                                    int)[@closure
                                                                    :int])) *
                                                                    address *
                                                                    (address,
                                                                    int) map)]))
                                                                    [@closure
                                                                    :((int ->
                                                                    ((int ->
                                                                    int)[@closure
                                                                    :int])) *
                                                                    (address,
                                                                    int) map)]))
                                                                   [@closure
                                                                    :int ->
                                                                    ((int ->
                                                                    int)
                                                                    [@closure
                                                                    :int])])
                                                                   *
                                                                   (int ->
                                                                    ((int ->
                                                                    bool)
                                                                    [@closure
                                                                    :int]))
                                                                   *
                                                                   (int ->
                                                                    ((int ->
                                                                    int)
                                                                    [@closure
                                                                    :int]))
                                                                   * address)]))
                                        [@closure
                                          :(((unit -> 'i110 result)[@closure
                                                                    :nat])
                                             * address *
                                             (((address, int) map ->
                                                 ((address ->
                                                     ((int ->
                                                         (address, int) map)
                                                     [@closure
                                                       :((int ->
                                                            ((int -> int)
                                                            [@closure :
                                                              int]))
                                                          * address *
                                                          (address, int) map)]))
                                                 [@closure
                                                   :((int ->
                                                        ((int -> int)
                                                        [@closure :int]))
                                                      * (address, int) map)]))
                                             [@closure
                                               :int ->
                                                  ((int -> int)[@closure
                                                                 :int])])
                                             *
                                             (int ->
                                                ((int -> bool)[@closure :int]))
                                             *
                                             (int ->
                                                ((int -> int)[@closure :int]))
                                             * address)]))[@closure
                                                            :(((unit ->
                                                                  'g110
                                                                    result)
                                                               [@closure
                                                                 :nat])
                                                               * address *
                                                               (((address,
                                                                   int) map
                                                                   ->
                                                                   ((
                                                                   address ->
                                                                    ((
                                                                    int ->
                                                                    (address,
                                                                    int) map)
                                                                    [@closure
                                                                    :((int ->
                                                                    ((int ->
                                                                    int)[@closure
                                                                    :int])) *
                                                                    address *
                                                                    (address,
                                                                    int) map)]))
                                                                   [@closure
                                                                    :((int ->
                                                                    ((int ->
                                                                    int)[@closure
                                                                    :int])) *
                                                                    (address,
                                                                    int) map)]))
                                                               [@closure
                                                                 :int ->
                                                                    ((
                                                                    int ->
                                                                    int)
                                                                    [@closure
                                                                    :int])])
                                                               *
                                                               (int ->
                                                                  ((int ->
                                                                    bool)
                                                                  [@closure
                                                                    :
                                                                    int]))
                                                               *
                                                               (int ->
                                                                  ((int ->
                                                                    int)
                                                                  [@closure
                                                                    :
                                                                    int])))]))
                                [@closure
                                  :(((unit -> 'e110 result)[@closure :nat]) *
                                     (((address, int) map ->
                                         ((address ->
                                             ((int -> (address, int) map)
                                             [@closure
                                               :((int ->
                                                    ((int -> int)[@closure
                                                                   :int]))
                                                  * address * (address, 
                                                  int) map)]))[@closure
                                                                :((int ->
                                                                    ((
                                                                    int ->
                                                                    int)
                                                                    [@closure
                                                                    :int]))
                                                                   *
                                                                   (address,
                                                                   int) map)]))
                                     [@closure
                                       :int -> ((int -> int)[@closure :int])])
                                     *
                                     (int -> ((int -> bool)[@closure :int]))
                                     *
                                     (int -> ((int -> int)[@closure :int])))])
                                *
                                ((address ->
                                    ((address ->
                                        ((address ->
                                            ((int ->
                                                ((state -> result)[@closure
                                                                    :
                                                                    (int *
                                                                    nat *
                                                                    address *
                                                                    ((unit ->
                                                                    'u110
                                                                    result)
                                                                    [@closure
                                                                    :nat]) *
                                                                    address *
                                                                    (((address,
                                                                    int) map
                                                                    ->
                                                                    ((address
                                                                    ->
                                                                    ((int ->
                                                                    (address,
                                                                    int) map)
                                                                    [@closure
                                                                    :((int ->
                                                                    ((int ->
                                                                    int)[@closure
                                                                    :int])) *
                                                                    address *
                                                                    (address,
                                                                    int) map)]))
                                                                    [@closure
                                                                    :((int ->
                                                                    ((int ->
                                                                    int)[@closure
                                                                    :int])) *
                                                                    (address,
                                                                    int) map)]))
                                                                    [@closure
                                                                    :int ->
                                                                    ((int ->
                                                                    int)
                                                                    [@closure
                                                                    :int])])
                                                                    *
                                                                    (int ->
                                                                    ((int ->
                                                                    bool)
                                                                    [@closure
                                                                    :int])) *
                                                                    (bool ->
                                                                    ((bool ->
                                                                    bool)
                                                                    [@closure
                                                                    :bool]))
                                                                    *
                                                                    ('y110
                                                                    option ->
                                                                    (('w110
                                                                    ->
                                                                    ('w110,
                                                                    'y110)
                                                                    result)
                                                                    [@closure
                                                                    :'y110
                                                                    option]))
                                                                    *
                                                                    (int ->
                                                                    ((int ->
                                                                    int)
                                                                    [@closure
                                                                    :int])) *
                                                                    address)]))
                                            [@closure
                                              :(nat * address *
                                                 ((unit -> 'o110 result)
                                                 [@closure :nat]) * address *
                                                 (((address, int) map ->
                                                     ((address ->
                                                         ((int ->
                                                             (address, 
                                                               int) map)
                                                         [@closure
                                                           :((int ->
                                                                ((int -> int)
                                                                [@closure
                                                                  :int]))
                                                              * address *
                                                              (address, 
                                                              int) map)]))
                                                     [@closure
                                                       :((int ->
                                                            ((int -> int)
                                                            [@closure :
                                                              int]))
                                                          * (address, 
                                                          int) map)]))
                                                 [@closure
                                                   :int ->
                                                      ((int -> int)[@closure
                                                                    :int])])
                                                 *
                                                 (int ->
                                                    ((int -> bool)[@closure
                                                                    :
                                                                    int]))
                                                 *
                                                 (bool ->
                                                    ((bool -> bool)[@closure
                                                                    :bool]))
                                                 *
                                                 ('s110 option ->
                                                    (('q110 ->
                                                        ('q110, 's110) result)
                                                    [@closure :'s110 option]))
                                                 *
                                                 (int ->
                                                    ((int -> int)[@closure
                                                                   :int]))
                                                 * address)]))[@closure
                                                                :(nat *
                                                                   address *
                                                                   ((
                                                                   unit ->
                                                                    't111
                                                                    result)
                                                                   [@closure
                                                                    :nat])
                                                                   * address
                                                                   *
                                                                   ((
                                                                   (address,
                                                                    int) map
                                                                    ->
                                                                    ((
                                                                    address
                                                                    ->
                                                                    ((int ->
                                                                    (address,
                                                                    int) map)
                                                                    [@closure
                                                                    :((int ->
                                                                    ((int ->
                                                                    int)[@closure
                                                                    :int])) *
                                                                    address *
                                                                    (address,
                                                                    int) map)]))
                                                                    [@closure
                                                                    :((int ->
                                                                    ((int ->
                                                                    int)[@closure
                                                                    :int])) *
                                                                    (address,
                                                                    int) map)]))
                                                                   [@closure
                                                                    :int ->
                                                                    ((int ->
                                                                    int)
                                                                    [@closure
                                                                    :int])])
                                                                   *
                                                                   (int ->
                                                                    ((int ->
                                                                    bool)
                                                                    [@closure
                                                                    :int]))
                                                                   *
                                                                   (bool ->
                                                                    ((bool ->
                                                                    bool)
                                                                    [@closure
                                                                    :bool]))
                                                                   *
                                                                   ('m110
                                                                    option ->
                                                                    (('w111
                                                                    ->
                                                                    ('m110,
                                                                    'w111)
                                                                    result)
                                                                    [@closure
                                                                    :'m110
                                                                    option]))
                                                                   *
                                                                   (int ->
                                                                    ((int ->
                                                                    int)
                                                                    [@closure
                                                                    :int])))]))
                                    [@closure
                                      :(nat * address *
                                         ((unit -> 'k111 result)[@closure
                                                                  :nat])
                                         *
                                         (((address, int) map ->
                                             ((address ->
                                                 ((int -> (address, int) map)
                                                 [@closure
                                                   :((int ->
                                                        ((int -> int)
                                                        [@closure :int]))
                                                      * address * (address,
                                                      int) map)]))[@closure
                                                                    :
                                                                    ((int ->
                                                                    ((int ->
                                                                    int)[@closure
                                                                    :int])) *
                                                                    (address,
                                                                    int) map)]))
                                         [@closure
                                           :int ->
                                              ((int -> int)[@closure :int])])
                                         *
                                         (int ->
                                            ((int -> bool)[@closure :int]))
                                         *
                                         (bool ->
                                            ((bool -> bool)[@closure :bool]))
                                         *
                                         ('q111 option ->
                                            (('n111 -> ('n111, 'q111) result)
                                            [@closure :'q111 option]))
                                         *
                                         (int ->
                                            ((int -> int)[@closure :int])))]))
                                [@closure
                                  :(nat *
                                     ((unit -> 'b111 result)[@closure :nat])
                                     *
                                     (((address, int) map ->
                                         ((address ->
                                             ((int -> (address, int) map)
                                             [@closure
                                               :((int ->
                                                    ((int -> int)[@closure
                                                                   :int]))
                                                  * address * (address, 
                                                  int) map)]))[@closure
                                                                :((int ->
                                                                    ((
                                                                    int ->
                                                                    int)
                                                                    [@closure
                                                                    :int]))
                                                                   *
                                                                   (address,
                                                                   int) map)]))
                                     [@closure
                                       :int -> ((int -> int)[@closure :int])])
                                     *
                                     (int -> ((int -> bool)[@closure :int]))
                                     *
                                     (bool ->
                                        ((bool -> bool)[@closure :bool]))
                                     *
                                     ('h111 option ->
                                        (('e111 -> ('e111, 'h111) result)
                                        [@closure :'h111 option]))
                                     *
                                     (int -> ((int -> int)[@closure :int])))]))]))
[@closure
  :((timestamp * (address * (dun * dun))) * nat *
     (address ->
        ((address ->
            ((int ->
                ((state -> 'n110 result)[@closure :(int * address * address)]))
            [@closure :(address * address)]))[@closure :address]))
     *
     ((address ->
         ((address ->
             ((int ->
                 ((state -> result)[@closure
                                     :(int *
                                        ((unit -> 'v110 result)[@closure
                                                                 :nat])
                                        * address *
                                        (((address, int) map ->
                                            ((address ->
                                                ((int -> (address, int) map)
                                                [@closure
                                                  :((int ->
                                                       ((int -> int)[@closure
                                                                    :int]))
                                                     * address * (address,
                                                     int) map)]))[@closure
                                                                   :((int ->
                                                                    ((int ->
                                                                    int)[@closure
                                                                    :int])) *
                                                                    (address,
                                                                    int) map)]))
                                        [@closure
                                          :int ->
                                             ((int -> int)[@closure :int])])
                                        *
                                        (int ->
                                           ((int -> bool)[@closure :int]))
                                        *
                                        (int -> ((int -> int)[@closure :int]))
                                        * address)]))[@closure
                                                       :(((unit ->
                                                             't110 result)
                                                          [@closure :
                                                            nat])
                                                          * address *
                                                          (((address, 
                                                              int) map ->
                                                              ((address ->
                                                                  ((int ->
                                                                    (address,
                                                                    int) map)
                                                                  [@closure
                                                                    :
                                                                    ((int ->
                                                                    ((int ->
                                                                    int)[@closure
                                                                    :int])) *
                                                                    address *
                                                                    (address,
                                                                    int) map)]))
                                                              [@closure
                                                                :((int ->
                                                                    ((
                                                                    int ->
                                                                    int)
                                                                    [@closure
                                                                    :int]))
                                                                   *
                                                                   (address,
                                                                   int) map)]))
                                                          [@closure
                                                            :int ->
                                                               ((int -> int)
                                                               [@closure
                                                                 :int])])
                                                          *
                                                          (int ->
                                                             ((int -> bool)
                                                             [@closure :
                                                               int]))
                                                          *
                                                          (int ->
                                                             ((int -> int)
                                                             [@closure :
                                                               int]))
                                                          * address)]))
         [@closure
           :(((unit -> 'r110 result)[@closure :nat]) * address *
              (((address, int) map ->
                  ((address ->
                      ((int -> (address, int) map)[@closure
                                                    :((int ->
                                                         ((int -> int)
                                                         [@closure :int]))
                                                       * address * (address,
                                                       int) map)]))[@closure
                                                                    :((int ->
                                                                    ((int ->
                                                                    int)[@closure
                                                                    :int])) *
                                                                    (address,
                                                                    int) map)]))
              [@closure :int -> ((int -> int)[@closure :int])]) *
              (int -> ((int -> bool)[@closure :int])) *
              (int -> ((int -> int)[@closure :int])))]))[@closure
                                                          :(((unit ->
                                                                'p110 result)
                                                             [@closure :
                                                               nat])
                                                             *
                                                             (((address, 
                                                                 int) map ->
                                                                 ((address ->
                                                                    ((
                                                                    int ->
                                                                    (address,
                                                                    int) map)
                                                                    [@closure
                                                                    :((int ->
                                                                    ((int ->
                                                                    int)[@closure
                                                                    :int])) *
                                                                    address *
                                                                    (address,
                                                                    int) map)]))
                                                                 [@closure
                                                                   :((int ->
                                                                    ((int ->
                                                                    int)[@closure
                                                                    :int])) *
                                                                    (address,
                                                                    int) map)]))
                                                             [@closure
                                                               :int ->
                                                                  ((int ->
                                                                    int)
                                                                  [@closure
                                                                    :
                                                                    int])])
                                                             *
                                                             (int ->
                                                                ((int -> bool)
                                                                [@closure
                                                                  :int]))
                                                             *
                                                             (int ->
                                                                ((int -> int)
                                                                [@closure
                                                                  :int])))])
     *
     ((address ->
         ((address ->
             ((address ->
                 ((int ->
                     ((state -> result)[@closure
                                         :(int * nat * address *
                                            ((unit -> 'j111 result)[@closure
                                                                    :nat])
                                            * address *
                                            (((address, int) map ->
                                                ((address ->
                                                    ((int ->
                                                        (address, int) map)
                                                    [@closure
                                                      :((int ->
                                                           ((int -> int)
                                                           [@closure :
                                                             int]))
                                                         * address *
                                                         (address, int) map)]))
                                                [@closure
                                                  :((int ->
                                                       ((int -> int)[@closure
                                                                    :int]))
                                                     * (address, int) map)]))
                                            [@closure
                                              :int ->
                                                 ((int -> int)[@closure :int])])
                                            *
                                            (int ->
                                               ((int -> bool)[@closure :int]))
                                            *
                                            (bool ->
                                               ((bool -> bool)[@closure
                                                                :bool]))
                                            *
                                            ('p111 option ->
                                               (('m111 ->
                                                   ('m111, 'p111) result)
                                               [@closure :'p111 option]))
                                            *
                                            (int ->
                                               ((int -> int)[@closure :int]))
                                            * address)]))[@closure
                                                           :(nat * address *
                                                              ((unit ->
                                                                  'a111
                                                                    result)
                                                              [@closure :
                                                                nat])
                                                              * address *
                                                              (((address,
                                                                  int) map ->
                                                                  ((address
                                                                    ->
                                                                    ((int ->
                                                                    (address,
                                                                    int) map)
                                                                    [@closure
                                                                    :((int ->
                                                                    ((int ->
                                                                    int)[@closure
                                                                    :int])) *
                                                                    address *
                                                                    (address,
                                                                    int) map)]))
                                                                  [@closure
                                                                    :
                                                                    ((int ->
                                                                    ((int ->
                                                                    int)[@closure
                                                                    :int])) *
                                                                    (address,
                                                                    int) map)]))
                                                              [@closure
                                                                :int ->
                                                                   ((
                                                                   int -> 
                                                                    int)
                                                                   [@closure
                                                                    :int])])
                                                              *
                                                              (int ->
                                                                 ((int ->
                                                                    bool)
                                                                 [@closure
                                                                   :int]))
                                                              *
                                                              (bool ->
                                                                 ((bool ->
                                                                    bool)
                                                                 [@closure
                                                                   :bool]))
                                                              *
                                                              ('g111 option
                                                                 ->
                                                                 (('d111 ->
                                                                    ('d111,
                                                                    'g111)
                                                                    result)
                                                                 [@closure
                                                                   :'g111
                                                                    option]))
                                                              *
                                                              (int ->
                                                                 ((int -> int)
                                                                 [@closure
                                                                   :int]))
                                                              * address)]))
             [@closure
               :(nat * address * ((unit -> 'y109 result)[@closure :nat]) *
                  address *
                  (((address, int) map ->
                      ((address ->
                          ((int -> (address, int) map)[@closure
                                                        :((int ->
                                                             ((int -> int)
                                                             [@closure :
                                                               int]))
                                                           * address *
                                                           (address, 
                                                           int) map)]))
                      [@closure
                        :((int -> ((int -> int)[@closure :int])) * (address,
                           int) map)]))[@closure
                                         :int ->
                                            ((int -> int)[@closure :int])])
                  * (int -> ((int -> bool)[@closure :int])) *
                  (bool -> ((bool -> bool)[@closure :bool])) *
                  ('x110 option ->
                     (('a110 -> ('a110, 'x110) result)[@closure
                                                        :'x110 option]))
                  * (int -> ((int -> int)[@closure :int])))]))[@closure
                                                                :(nat *
                                                                   address *
                                                                   ((
                                                                   unit ->
                                                                    'a112
                                                                    result)
                                                                   [@closure
                                                                    :nat])
                                                                   *
                                                                   ((
                                                                   (address,
                                                                    int) map
                                                                    ->
                                                                    ((
                                                                    address
                                                                    ->
                                                                    ((int ->
                                                                    (address,
                                                                    int) map)
                                                                    [@closure
                                                                    :((int ->
                                                                    ((int ->
                                                                    int)[@closure
                                                                    :int])) *
                                                                    address *
                                                                    (address,
                                                                    int) map)]))
                                                                    [@closure
                                                                    :((int ->
                                                                    ((int ->
                                                                    int)[@closure
                                                                    :int])) *
                                                                    (address,
                                                                    int) map)]))
                                                                   [@closure
                                                                    :int ->
                                                                    ((int ->
                                                                    int)
                                                                    [@closure
                                                                    :int])])
                                                                   *
                                                                   (int ->
                                                                    ((int ->
                                                                    bool)
                                                                    [@closure
                                                                    :int]))
                                                                   *
                                                                   (bool ->
                                                                    ((bool ->
                                                                    bool)
                                                                    [@closure
                                                                    :bool]))
                                                                   *
                                                                   ('w109
                                                                    option ->
                                                                    (('u109
                                                                    ->
                                                                    ('u109,
                                                                    'w109)
                                                                    result)
                                                                    [@closure
                                                                    :'w109
                                                                    option]))
                                                                   *
                                                                   (int ->
                                                                    ((int ->
                                                                    int)
                                                                    [@closure
                                                                    :int])))]))
     [@closure
       :(nat * ((unit -> 's111 result)[@closure :nat]) *
          (((address, int) map ->
              ((address ->
                  ((int -> (address, int) map)[@closure
                                                :((int ->
                                                     ((int -> int)[@closure
                                                                    :
                                                                    int]))
                                                   * address * (address, 
                                                   int) map)]))[@closure
                                                                 :((int ->
                                                                    ((int ->
                                                                    int)
                                                                    [@closure
                                                                    :int])) *
                                                                    (
                                                                    address,
                                                                    int) map)]))
          [@closure :int -> ((int -> int)[@closure :int])]) *
          (int -> ((int -> bool)[@closure :int])) *
          (bool -> ((bool -> bool)[@closure :bool])) *
          ('y111 option ->
             (('v111 -> ('v111, 'y111) result)[@closure :'y111 option]))
          * (int -> ((int -> int)[@closure :int])))]))]). Type variables 'a110, 'a111, 'a112, 'b111, 'c110, 'd111, 'e110, 'e111, 'g110, 'g111, 'h111, 'i110, 'j111, 'k110, 'k111, 'm110, 'm111, 'n110, 'n111, 'o110, 'p110, 'p111, 'q110, 'q111, 'r110, 's110, 's111, 't110, 't111, 'u109, 'u110, 'v110, 'v111, 'w109, 'w110, 'w111, 'x110, 'y109, 'y110, 'y111 were replaced by unit.
./tests/extracted-code/liquidity-extract/tests/liquidity_eip20token.liq:111.79-120.33: Warning: 
Unresolved type ((msg option -> result)[@closure
                         :((timestamp * (address * (dun * dun))) * nat *
                            state *
                            (address ->
                               ((address ->
                                   ((int ->
                                       ((state -> 'c110 result)[@closure
                                                                 :(int *
                                                                    address *
                                                                    address)]))
                                   [@closure :(address * address)]))[@closure
                                                                    :address]))
                            *
                            ((address ->
                                ((address ->
                                    ((int ->
                                        ((state -> result)[@closure
                                                            :(int *
                                                               ((unit ->
                                                                   'k110
                                                                    result)
                                                               [@closure
                                                                 :nat])
                                                               * address *
                                                               (((address,
                                                                   int) map
                                                                   ->
                                                                   ((
                                                                   address ->
                                                                    ((
                                                                    int ->
                                                                    (address,
                                                                    int) map)
                                                                    [@closure
                                                                    :((int ->
                                                                    ((int ->
                                                                    int)[@closure
                                                                    :int])) *
                                                                    address *
                                                                    (address,
                                                                    int) map)]))
                                                                   [@closure
                                                                    :((int ->
                                                                    ((int ->
                                                                    int)[@closure
                                                                    :int])) *
                                                                    (address,
                                                                    int) map)]))
                                                               [@closure
                                                                 :int ->
                                                                    ((
                                                                    int ->
                                                                    int)
                                                                    [@closure
                                                                    :int])])
                                                               *
                                                               (int ->
                                                                  ((int ->
                                                                    bool)
                                                                  [@closure
                                                                    :
                                                                    int]))
                                                               *
                                                               (int ->
                                                                  ((int ->
                                                                    int)
                                                                  [@closure
                                                                    :
                                                                    int]))
                                                               * address)]))
                                    [@closure
                                      :(((unit -> 'i110 result)[@closure
                                                                 :nat])
                                         * address *
                                         (((address, int) map ->
                                             ((address ->
                                                 ((int -> (address, int) map)
                                                 [@closure
                                                   :((int ->
                                                        ((int -> int)
                                                        [@closure :int]))
                                                      * address * (address,
                                                      int) map)]))[@closure
                                                                    :
                                                                    ((int ->
                                                                    ((int ->
                                                                    int)[@closure
                                                                    :int])) *
                                                                    (address,
                                                                    int) map)]))
                                         [@closure
                                           :int ->
                                              ((int -> int)[@closure :int])])
                                         *
                                         (int ->
                                            ((int -> bool)[@closure :int]))
                                         *
                                         (int ->
                                            ((int -> int)[@closure :int]))
                                         * address)]))[@closure
                                                        :(((unit ->
                                                              'g110 result)
                                                           [@closure :
                                                             nat])
                                                           * address *
                                                           (((address, 
                                                               int) map ->
                                                               ((address ->
                                                                   ((
                                                                   int ->
                                                                    (address,
                                                                    int) map)
                                                                   [@closure
                                                                    :((int ->
                                                                    ((int ->
                                                                    int)[@closure
                                                                    :int])) *
                                                                    address *
                                                                    (address,
                                                                    int) map)]))
                                                               [@closure
                                                                 :((int ->
                                                                    ((int ->
                                                                    int)
                                                                    [@closure
                                                                    :int])) *
                                                                    (
                                                                    address,
                                                                    int) map)]))
                                                           [@closure
                                                             :int ->
                                                                ((int -> int)
                                                                [@closure
                                                                  :int])])
                                                           *
                                                           (int ->
                                                              ((int -> bool)
                                                              [@closure :
                                                                int]))
                                                           *
                                                           (int ->
                                                              ((int -> int)
                                                              [@closure :
                                                                int])))]))
                            [@closure
                              :(((unit -> 'e110 result)[@closure :nat]) *
                                 (((address, int) map ->
                                     ((address ->
                                         ((int -> (address, int) map)
                                         [@closure
                                           :((int ->
                                                ((int -> int)[@closure :int]))
                                              * address * (address, int) map)]))
                                     [@closure
                                       :((int ->
                                            ((int -> int)[@closure :int]))
                                          * (address, int) map)]))[@closure
                                                                    :
                                                                    int ->
                                                                    ((int ->
                                                                    int)
                                                                    [@closure
                                                                    :int])])
                                 * (int -> ((int -> bool)[@closure :int])) *
                                 (int -> ((int -> int)[@closure :int])))])
                            *
                            ((address ->
                                ((address ->
                                    ((address ->
                                        ((int ->
                                            ((state -> result)[@closure
                                                                :(int * nat *
                                                                   address *
                                                                   ((
                                                                   unit ->
                                                                    'u110
                                                                    result)
                                                                   [@closure
                                                                    :nat])
                                                                   * address
                                                                   *
                                                                   ((
                                                                   (address,
                                                                    int) map
                                                                    ->
                                                                    ((
                                                                    address
                                                                    ->
                                                                    ((int ->
                                                                    (address,
                                                                    int) map)
                                                                    [@closure
                                                                    :((int ->
                                                                    ((int ->
                                                                    int)[@closure
                                                                    :int])) *
                                                                    address *
                                                                    (address,
                                                                    int) map)]))
                                                                    [@closure
                                                                    :((int ->
                                                                    ((int ->
                                                                    int)[@closure
                                                                    :int])) *
                                                                    (address,
                                                                    int) map)]))
                                                                   [@closure
                                                                    :int ->
                                                                    ((int ->
                                                                    int)
                                                                    [@closure
                                                                    :int])])
                                                                   *
                                                                   (int ->
                                                                    ((int ->
                                                                    bool)
                                                                    [@closure
                                                                    :int]))
                                                                   *
                                                                   (bool ->
                                                                    ((bool ->
                                                                    bool)
                                                                    [@closure
                                                                    :bool]))
                                                                   *
                                                                   ('y110
                                                                    option ->
                                                                    (('w110
                                                                    ->
                                                                    ('w110,
                                                                    'y110)
                                                                    result)
                                                                    [@closure
                                                                    :'y110
                                                                    option]))
                                                                   *
                                                                   (int ->
                                                                    ((int ->
                                                                    int)
                                                                    [@closure
                                                                    :int]))
                                                                   * address)]))
                                        [@closure
                                          :(nat * address *
                                             ((unit -> 'o110 result)[@closure
                                                                    :nat])
                                             * address *
                                             (((address, int) map ->
                                                 ((address ->
                                                     ((int ->
                                                         (address, int) map)
                                                     [@closure
                                                       :((int ->
                                                            ((int -> int)
                                                            [@closure :
                                                              int]))
                                                          * address *
                                                          (address, int) map)]))
                                                 [@closure
                                                   :((int ->
                                                        ((int -> int)
                                                        [@closure :int]))
                                                      * (address, int) map)]))
                                             [@closure
                                               :int ->
                                                  ((int -> int)[@closure
                                                                 :int])])
                                             *
                                             (int ->
                                                ((int -> bool)[@closure :int]))
                                             *
                                             (bool ->
                                                ((bool -> bool)[@closure
                                                                 :bool]))
                                             *
                                             ('s110 option ->
                                                (('q110 ->
                                                    ('q110, 's110) result)
                                                [@closure :'s110 option]))
                                             *
                                             (int ->
                                                ((int -> int)[@closure :int]))
                                             * address)]))[@closure
                                                            :(nat * address *
                                                               ((unit ->
                                                                   't111
                                                                    result)
                                                               [@closure
                                                                 :nat])
                                                               * address *
                                                               (((address,
                                                                   int) map
                                                                   ->
                                                                   ((
                                                                   address ->
                                                                    ((
                                                                    int ->
                                                                    (address,
                                                                    int) map)
                                                                    [@closure
                                                                    :((int ->
                                                                    ((int ->
                                                                    int)[@closure
                                                                    :int])) *
                                                                    address *
                                                                    (address,
                                                                    int) map)]))
                                                                   [@closure
                                                                    :((int ->
                                                                    ((int ->
                                                                    int)[@closure
                                                                    :int])) *
                                                                    (address,
                                                                    int) map)]))
                                                               [@closure
                                                                 :int ->
                                                                    ((
                                                                    int ->
                                                                    int)
                                                                    [@closure
                                                                    :int])])
                                                               *
                                                               (int ->
                                                                  ((int ->
                                                                    bool)
                                                                  [@closure
                                                                    :
                                                                    int]))
                                                               *
                                                               (bool ->
                                                                  ((bool ->
                                                                    bool)
                                                                  [@closure
                                                                    :
                                                                    bool]))
                                                               *
                                                               ('m110 option
                                                                  ->
                                                                  (('w111 ->
                                                                    ('m110,
                                                                    'w111)
                                                                    result)
                                                                  [@closure
                                                                    :
                                                                    'm110
                                                                    option]))
                                                               *
                                                               (int ->
                                                                  ((int ->
                                                                    int)
                                                                  [@closure
                                                                    :
                                                                    int])))]))
                                [@closure
                                  :(nat * address *
                                     ((unit -> 'k111 result)[@closure :nat])
                                     *
                                     (((address, int) map ->
                                         ((address ->
                                             ((int -> (address, int) map)
                                             [@closure
                                               :((int ->
                                                    ((int -> int)[@closure
                                                                   :int]))
                                                  * address * (address, 
                                                  int) map)]))[@closure
                                                                :((int ->
                                                                    ((
                                                                    int ->
                                                                    int)
                                                                    [@closure
                                                                    :int]))
                                                                   *
                                                                   (address,
                                                                   int) map)]))
                                     [@closure
                                       :int -> ((int -> int)[@closure :int])])
                                     *
                                     (int -> ((int -> bool)[@closure :int]))
                                     *
                                     (bool ->
                                        ((bool -> bool)[@closure :bool]))
                                     *
                                     ('q111 option ->
                                        (('n111 -> ('n111, 'q111) result)
                                        [@closure :'q111 option]))
                                     *
                                     (int -> ((int -> int)[@closure :int])))]))
                            [@closure
                              :(nat * ((unit -> 'b111 result)[@closure :nat])
                                 *
                                 (((address, int) map ->
                                     ((address ->
                                         ((int -> (address, int) map)
                                         [@closure
                                           :((int ->
                                                ((int -> int)[@closure :int]))
                                              * address * (address, int) map)]))
                                     [@closure
                                       :((int ->
                                            ((int -> int)[@closure :int]))
                                          * (address, int) map)]))[@closure
                                                                    :
                                                                    int ->
                                                                    ((int ->
                                                                    int)
                                                                    [@closure
                                                                    :int])])
                                 * (int -> ((int -> bool)[@closure :int])) *
                                 (bool -> ((bool -> bool)[@closure :bool])) *
                                 ('h111 option ->
                                    (('e111 -> ('e111, 'h111) result)
                                    [@closure :'h111 option]))
                                 * (int -> ((int -> int)[@closure :int])))]))]). Type variables 'b111, 'c110, 'e110, 'e111, 'g110, 'h111, 'i110, 'k110, 'k111, 'm110, 'n111, 'o110, 'q110, 'q111, 's110, 't111, 'u110, 'w110, 'w111, 'y110 were replaced by unit.
./tests/extracted-code/liquidity-extract/tests/liquidity_eip20token.liq:122.89-122.141: Warning: 
Unresolved type ((state -> result)[@closure
                    :(((timestamp * (address * (dun * dun))) * msg option) *
                       (((timestamp * (address * (dun * dun))) ->
                           ((state ->
                               ((msg option -> 'e125 result)[@closure
                                                              :((timestamp *
                                                                 (address *
                                                                 (dun *
                                                                 dun))) * nat
                                                                 * state *
                                                                 (address ->
                                                                    ((
                                                                    address
                                                                    ->
                                                                    ((int ->
                                                                    ((state
                                                                    ->
                                                                    'h125
                                                                    result)
                                                                    [@closure
                                                                    :(int *
                                                                    address *
                                                                    address)]))
                                                                    [@closure
                                                                    :(address
                                                                    *
                                                                    address)]))
                                                                    [@closure
                                                                    :address]))
                                                                 *
                                                                 ((address ->
                                                                    ((
                                                                    address
                                                                    ->
                                                                    ((int ->
                                                                    ((state
                                                                    -> result)
                                                                    [@closure
                                                                    :(int *
                                                                    ((unit ->
                                                                    'v121
                                                                    result)
                                                                    [@closure
                                                                    :nat]) *
                                                                    address *
                                                                    (((address,
                                                                    int) map
                                                                    ->
                                                                    ((address
                                                                    ->
                                                                    ((int ->
                                                                    (address,
                                                                    int) map)
                                                                    [@closure
                                                                    :((int ->
                                                                    ((int ->
                                                                    int)[@closure
                                                                    :int])) *
                                                                    address *
                                                                    (address,
                                                                    int) map)]))
                                                                    [@closure
                                                                    :((int ->
                                                                    ((int ->
                                                                    int)[@closure
                                                                    :int])) *
                                                                    (address,
                                                                    int) map)]))
                                                                    [@closure
                                                                    :int ->
                                                                    ((int ->
                                                                    int)
                                                                    [@closure
                                                                    :int])])
                                                                    *
                                                                    (int ->
                                                                    ((int ->
                                                                    bool)
                                                                    [@closure
                                                                    :int])) *
                                                                    (int ->
                                                                    ((int ->
                                                                    int)
                                                                    [@closure
                                                                    :int])) *
                                                                    address)]))
                                                                    [@closure
                                                                    :(((
                                                                    unit ->
                                                                    'f126
                                                                    result)
                                                                    [@closure
                                                                    :nat]) *
                                                                    address *
                                                                    (((address,
                                                                    int) map
                                                                    ->
                                                                    ((address
                                                                    ->
                                                                    ((int ->
                                                                    (address,
                                                                    int) map)
                                                                    [@closure
                                                                    :((int ->
                                                                    ((int ->
                                                                    int)[@closure
                                                                    :int])) *
                                                                    address *
                                                                    (address,
                                                                    int) map)]))
                                                                    [@closure
                                                                    :((int ->
                                                                    ((int ->
                                                                    int)[@closure
                                                                    :int])) *
                                                                    (address,
                                                                    int) map)]))
                                                                    [@closure
                                                                    :int ->
                                                                    ((int ->
                                                                    int)
                                                                    [@closure
                                                                    :int])])
                                                                    *
                                                                    (int ->
                                                                    ((int ->
                                                                    bool)
                                                                    [@closure
                                                                    :int])) *
                                                                    (int ->
                                                                    ((int ->
                                                                    int)
                                                                    [@closure
                                                                    :int])) *
                                                                    address)]))
                                                                    [@closure
                                                                    :(((
                                                                    unit ->
                                                                    'x125
                                                                    result)
                                                                    [@closure
                                                                    :nat]) *
                                                                    address *
                                                                    (((address,
                                                                    int) map
                                                                    ->
                                                                    ((address
                                                                    ->
                                                                    ((int ->
                                                                    (address,
                                                                    int) map)
                                                                    [@closure
                                                                    :((int ->
                                                                    ((int ->
                                                                    int)[@closure
                                                                    :int])) *
                                                                    address *
                                                                    (address,
                                                                    int) map)]))
                                                                    [@closure
                                                                    :((int ->
                                                                    ((int ->
                                                                    int)[@closure
                                                                    :int])) *
                                                                    (address,
                                                                    int) map)]))
                                                                    [@closure
                                                                    :int ->
                                                                    ((int ->
                                                                    int)
                                                                    [@closure
                                                                    :int])])
                                                                    *
                                                                    (int ->
                                                                    ((int ->
                                                                    bool)
                                                                    [@closure
                                                                    :int])) *
                                                                    (int ->
                                                                    ((int ->
                                                                    int)
                                                                    [@closure
                                                                    :int])))]))
                                                                 [@closure
                                                                   :(((
                                                                    unit ->
                                                                    'p125
                                                                    result)
                                                                    [@closure
                                                                    :nat]) *
                                                                    (((address,
                                                                    int) map
                                                                    ->
                                                                    ((address
                                                                    ->
                                                                    ((int ->
                                                                    (address,
                                                                    int) map)
                                                                    [@closure
                                                                    :((int ->
                                                                    ((int ->
                                                                    int)[@closure
                                                                    :int])) *
                                                                    address *
                                                                    (address,
                                                                    int) map)]))
                                                                    [@closure
                                                                    :((int ->
                                                                    ((int ->
                                                                    int)[@closure
                                                                    :int])) *
                                                                    (address,
                                                                    int) map)]))
                                                                    [@closure
                                                                    :int ->
                                                                    ((int ->
                                                                    int)
                                                                    [@closure
                                                                    :int])])
                                                                    *
                                                                    (int ->
                                                                    ((int ->
                                                                    bool)
                                                                    [@closure
                                                                    :int])) *
                                                                    (int ->
                                                                    ((int ->
                                                                    int)
                                                                    [@closure
                                                                    :int])))])
                                                                 *
                                                                 ((address ->
                                                                    ((
                                                                    address
                                                                    ->
                                                                    ((address
                                                                    ->
                                                                    ((int ->
                                                                    ((state
                                                                    -> result)
                                                                    [@closure
                                                                    :(int *
                                                                    nat *
                                                                    address *
                                                                    ((unit ->
                                                                    'u123
                                                                    result)
                                                                    [@closure
                                                                    :nat]) *
                                                                    address *
                                                                    (((address,
                                                                    int) map
                                                                    ->
                                                                    ((address
                                                                    ->
                                                                    ((int ->
                                                                    (address,
                                                                    int) map)
                                                                    [@closure
                                                                    :((int ->
                                                                    ((int ->
                                                                    int)[@closure
                                                                    :int])) *
                                                                    address *
                                                                    (address,
                                                                    int) map)]))
                                                                    [@closure
                                                                    :((int ->
                                                                    ((int ->
                                                                    int)[@closure
                                                                    :int])) *
                                                                    (address,
                                                                    int) map)]))
                                                                    [@closure
                                                                    :int ->
                                                                    ((int ->
                                                                    int)
                                                                    [@closure
                                                                    :int])])
                                                                    *
                                                                    (int ->
                                                                    ((int ->
                                                                    bool)
                                                                    [@closure
                                                                    :int])) *
                                                                    (bool ->
                                                                    ((bool ->
                                                                    bool)
                                                                    [@closure
                                                                    :bool]))
                                                                    *
                                                                    ('o124
                                                                    option ->
                                                                    (('e124
                                                                    ->
                                                                    ('e124,
                                                                    'o124)
                                                                    result)
                                                                    [@closure
                                                                    :'o124
                                                                    option]))
                                                                    *
                                                                    (int ->
                                                                    ((int ->
                                                                    int)
                                                                    [@closure
                                                                    :int])) *
                                                                    address)]))
                                                                    [@closure
                                                                    :(nat *
                                                                    address *
                                                                    ((unit ->
                                                                    'q122
                                                                    result)
                                                                    [@closure
                                                                    :nat]) *
                                                                    address *
                                                                    (((address,
                                                                    int) map
                                                                    ->
                                                                    ((address
                                                                    ->
                                                                    ((int ->
                                                                    (address,
                                                                    int) map)
                                                                    [@closure
                                                                    :((int ->
                                                                    ((int ->
                                                                    int)[@closure
                                                                    :int])) *
                                                                    address *
                                                                    (address,
                                                                    int) map)]))
                                                                    [@closure
                                                                    :((int ->
                                                                    ((int ->
                                                                    int)[@closure
                                                                    :int])) *
                                                                    (address,
                                                                    int) map)]))
                                                                    [@closure
                                                                    :int ->
                                                                    ((int ->
                                                                    int)
                                                                    [@closure
                                                                    :int])])
                                                                    *
                                                                    (int ->
                                                                    ((int ->
                                                                    bool)
                                                                    [@closure
                                                                    :int])) *
                                                                    (bool ->
                                                                    ((bool ->
                                                                    bool)
                                                                    [@closure
                                                                    :bool]))
                                                                    *
                                                                    ('k123
                                                                    option ->
                                                                    (('a123
                                                                    ->
                                                                    ('a123,
                                                                    'k123)
                                                                    result)
                                                                    [@closure
                                                                    :'k123
                                                                    option]))
                                                                    *
                                                                    (int ->
                                                                    ((int ->
                                                                    int)
                                                                    [@closure
                                                                    :int])) *
                                                                    address)]))
                                                                    [@closure
                                                                    :(nat *
                                                                    address *
                                                                    ((unit ->
                                                                    'q123
                                                                    result)
                                                                    [@closure
                                                                    :nat]) *
                                                                    address *
                                                                    (((address,
                                                                    int) map
                                                                    ->
                                                                    ((address
                                                                    ->
                                                                    ((int ->
                                                                    (address,
                                                                    int) map)
                                                                    [@closure
                                                                    :((int ->
                                                                    ((int ->
                                                                    int)[@closure
                                                                    :int])) *
                                                                    address *
                                                                    (address,
                                                                    int) map)]))
                                                                    [@closure
                                                                    :((int ->
                                                                    ((int ->
                                                                    int)[@closure
                                                                    :int])) *
                                                                    (address,
                                                                    int) map)]))
                                                                    [@closure
                                                                    :int ->
                                                                    ((int ->
                                                                    int)
                                                                    [@closure
                                                                    :int])])
                                                                    *
                                                                    (int ->
                                                                    ((int ->
                                                                    bool)
                                                                    [@closure
                                                                    :int])) *
                                                                    (bool ->
                                                                    ((bool ->
                                                                    bool)
                                                                    [@closure
                                                                    :bool]))
                                                                    *
                                                                    ('g122
                                                                    option ->
                                                                    (('f124
                                                                    ->
                                                                    ('f124,
                                                                    'g122)
                                                                    result)
                                                                    [@closure
                                                                    :'g122
                                                                    option]))
                                                                    *
                                                                    (int ->
                                                                    ((int ->
                                                                    int)
                                                                    [@closure
                                                                    :int])))]))
                                                                    [@closure
                                                                    :(nat *
                                                                    address *
                                                                    ((unit ->
                                                                    'w121
                                                                    result)
                                                                    [@closure
                                                                    :nat]) *
                                                                    (((address,
                                                                    int) map
                                                                    ->
                                                                    ((address
                                                                    ->
                                                                    ((int ->
                                                                    (address,
                                                                    int) map)
                                                                    [@closure
                                                                    :((int ->
                                                                    ((int ->
                                                                    int)[@closure
                                                                    :int])) *
                                                                    address *
                                                                    (address,
                                                                    int) map)]))
                                                                    [@closure
                                                                    :((int ->
                                                                    ((int ->
                                                                    int)[@closure
                                                                    :int])) *
                                                                    (address,
                                                                    int) map)]))
                                                                    [@closure
                                                                    :int ->
                                                                    ((int ->
                                                                    int)
                                                                    [@closure
                                                                    :int])])
                                                                    *
                                                                    (int ->
                                                                    ((int ->
                                                                    bool)
                                                                    [@closure
                                                                    :int])) *
                                                                    (bool ->
                                                                    ((bool ->
                                                                    bool)
                                                                    [@closure
                                                                    :bool]))
                                                                    *
                                                                    ('b123
                                                                    option ->
                                                                    (('m122
                                                                    ->
                                                                    ('b123,
                                                                    'm122)
                                                                    result)
                                                                    [@closure
                                                                    :'b123
                                                                    option]))
                                                                    *
                                                                    (int ->
                                                                    ((int ->
                                                                    int)
                                                                    [@closure
                                                                    :int])))]))
                                                                 [@closure
                                                                   :(nat *
                                                                    ((unit ->
                                                                    'd125
                                                                    result)
                                                                    [@closure
                                                                    :nat]) *
                                                                    (((address,
                                                                    int) map
                                                                    ->
                                                                    ((address
                                                                    ->
                                                                    ((int ->
                                                                    (address,
                                                                    int) map)
                                                                    [@closure
                                                                    :((int ->
                                                                    ((int ->
                                                                    int)[@closure
                                                                    :int])) *
                                                                    address *
                                                                    (address,
                                                                    int) map)]))
                                                                    [@closure
                                                                    :((int ->
                                                                    ((int ->
                                                                    int)[@closure
                                                                    :int])) *
                                                                    (address,
                                                                    int) map)]))
                                                                    [@closure
                                                                    :int ->
                                                                    ((int ->
                                                                    int)
                                                                    [@closure
                                                                    :int])])
                                                                    *
                                                                    (int ->
                                                                    ((int ->
                                                                    bool)
                                                                    [@closure
                                                                    :int])) *
                                                                    (bool ->
                                                                    ((bool ->
                                                                    bool)
                                                                    [@closure
                                                                    :bool]))
                                                                    *
                                                                    ('c126
                                                                    option ->
                                                                    (('q125
                                                                    ->
                                                                    ('c126,
                                                                    'q125)
                                                                    result)
                                                                    [@closure
                                                                    :'c126
                                                                    option]))
                                                                    *
                                                                    (int ->
                                                                    ((int ->
                                                                    int)
                                                                    [@closure
                                                                    :int])))]))]))
                           [@closure
                             :((timestamp * (address * (dun * dun))) * nat *
                                (address ->
                                   ((address ->
                                       ((int ->
                                           ((state -> 'l122 result)[@closure
                                                                    :(int *
                                                                    address *
                                                                    address)]))
                                       [@closure :(address * address)]))
                                   [@closure :address]))
                                *
                                ((address ->
                                    ((address ->
                                        ((int ->
                                            ((state -> result)[@closure
                                                                :(int *
                                                                   ((
                                                                   unit ->
                                                                    'z123
                                                                    result)
                                                                   [@closure
                                                                    :nat])
                                                                   * address
                                                                   *
                                                                   ((
                                                                   (address,
                                                                    int) map
                                                                    ->
                                                                    ((
                                                                    address
                                                                    ->
                                                                    ((int ->
                                                                    (address,
                                                                    int) map)
                                                                    [@closure
                                                                    :((int ->
                                                                    ((int ->
                                                                    int)[@closure
                                                                    :int])) *
                                                                    address *
                                                                    (address,
                                                                    int) map)]))
                                                                    [@closure
                                                                    :((int ->
                                                                    ((int ->
                                                                    int)[@closure
                                                                    :int])) *
                                                                    (address,
                                                                    int) map)]))
                                                                   [@closure
                                                                    :int ->
                                                                    ((int ->
                                                                    int)
                                                                    [@closure
                                                                    :int])])
                                                                   *
                                                                   (int ->
                                                                    ((int ->
                                                                    bool)
                                                                    [@closure
                                                                    :int]))
                                                                   *
                                                                   (int ->
                                                                    ((int ->
                                                                    int)
                                                                    [@closure
                                                                    :int]))
                                                                   * address)]))
                                        [@closure
                                          :(((unit -> 'p123 result)[@closure
                                                                    :nat])
                                             * address *
                                             (((address, int) map ->
                                                 ((address ->
                                                     ((int ->
                                                         (address, int) map)
                                                     [@closure
                                                       :((int ->
                                                            ((int -> int)
                                                            [@closure :
                                                              int]))
                                                          * address *
                                                          (address, int) map)]))
                                                 [@closure
                                                   :((int ->
                                                        ((int -> int)
                                                        [@closure :int]))
                                                      * (address, int) map)]))
                                             [@closure
                                               :int ->
                                                  ((int -> int)[@closure
                                                                 :int])])
                                             *
                                             (int ->
                                                ((int -> bool)[@closure :int]))
                                             *
                                             (int ->
                                                ((int -> int)[@closure :int]))
                                             * address)]))[@closure
                                                            :(((unit ->
                                                                  'f123
                                                                    result)
                                                               [@closure
                                                                 :nat])
                                                               * address *
                                                               (((address,
                                                                   int) map
                                                                   ->
                                                                   ((
                                                                   address ->
                                                                    ((
                                                                    int ->
                                                                    (address,
                                                                    int) map)
                                                                    [@closure
                                                                    :((int ->
                                                                    ((int ->
                                                                    int)[@closure
                                                                    :int])) *
                                                                    address *
                                                                    (address,
                                                                    int) map)]))
                                                                   [@closure
                                                                    :((int ->
                                                                    ((int ->
                                                                    int)[@closure
                                                                    :int])) *
                                                                    (address,
                                                                    int) map)]))
                                                               [@closure
                                                                 :int ->
                                                                    ((
                                                                    int ->
                                                                    int)
                                                                    [@closure
                                                                    :int])])
                                                               *
                                                               (int ->
                                                                  ((int ->
                                                                    bool)
                                                                  [@closure
                                                                    :
                                                                    int]))
                                                               *
                                                               (int ->
                                                                  ((int ->
                                                                    int)
                                                                  [@closure
                                                                    :
                                                                    int])))]))
                                [@closure
                                  :(((unit -> 'v122 result)[@closure :nat]) *
                                     (((address, int) map ->
                                         ((address ->
                                             ((int -> (address, int) map)
                                             [@closure
                                               :((int ->
                                                    ((int -> int)[@closure
                                                                   :int]))
                                                  * address * (address, 
                                                  int) map)]))[@closure
                                                                :((int ->
                                                                    ((
                                                                    int ->
                                                                    int)
                                                                    [@closure
                                                                    :int]))
                                                                   *
                                                                   (address,
                                                                   int) map)]))
                                     [@closure
                                       :int -> ((int -> int)[@closure :int])])
                                     *
                                     (int -> ((int -> bool)[@closure :int]))
                                     *
                                     (int -> ((int -> int)[@closure :int])))])
                                *
                                ((address ->
                                    ((address ->
                                        ((address ->
                                            ((int ->
                                                ((state -> result)[@closure
                                                                    :
                                                                    (int *
                                                                    nat *
                                                                    address *
                                                                    ((unit ->
                                                                    'r121
                                                                    result)
                                                                    [@closure
                                                                    :nat]) *
                                                                    address *
                                                                    (((address,
                                                                    int) map
                                                                    ->
                                                                    ((address
                                                                    ->
                                                                    ((int ->
                                                                    (address,
                                                                    int) map)
                                                                    [@closure
                                                                    :((int ->
                                                                    ((int ->
                                                                    int)[@closure
                                                                    :int])) *
                                                                    address *
                                                                    (address,
                                                                    int) map)]))
                                                                    [@closure
                                                                    :((int ->
                                                                    ((int ->
                                                                    int)[@closure
                                                                    :int])) *
                                                                    (address,
                                                                    int) map)]))
                                                                    [@closure
                                                                    :int ->
                                                                    ((int ->
                                                                    int)
                                                                    [@closure
                                                                    :int])])
                                                                    *
                                                                    (int ->
                                                                    ((int ->
                                                                    bool)
                                                                    [@closure
                                                                    :int])) *
                                                                    (bool ->
                                                                    ((bool ->
                                                                    bool)
                                                                    [@closure
                                                                    :bool]))
                                                                    *
                                                                    ('w122
                                                                    option ->
                                                                    (('h122
                                                                    ->
                                                                    ('h122,
                                                                    'w122)
                                                                    result)
                                                                    [@closure
                                                                    :'w122
                                                                    option]))
                                                                    *
                                                                    (int ->
                                                                    ((int ->
                                                                    int)
                                                                    [@closure
                                                                    :int])) *
                                                                    address)]))
                                            [@closure
                                              :(nat * address *
                                                 ((unit -> 'y124 result)
                                                 [@closure :nat]) * address *
                                                 (((address, int) map ->
                                                     ((address ->
                                                         ((int ->
                                                             (address, 
                                                               int) map)
                                                         [@closure
                                                           :((int ->
                                                                ((int -> int)
                                                                [@closure
                                                                  :int]))
                                                              * address *
                                                              (address, 
                                                              int) map)]))
                                                     [@closure
                                                       :((int ->
                                                            ((int -> int)
                                                            [@closure :
                                                              int]))
                                                          * (address, 
                                                          int) map)]))
                                                 [@closure
                                                   :int ->
                                                      ((int -> int)[@closure
                                                                    :int])])
                                                 *
                                                 (int ->
                                                    ((int -> bool)[@closure
                                                                    :
                                                                    int]))
                                                 *
                                                 (bool ->
                                                    ((bool -> bool)[@closure
                                                                    :bool]))
                                                 *
                                                 ('y125 option ->
                                                    (('m125 ->
                                                        ('m125, 'y125) result)
                                                    [@closure :'y125 option]))
                                                 *
                                                 (int ->
                                                    ((int -> int)[@closure
                                                                   :int]))
                                                 * address)]))[@closure
                                                                :(nat *
                                                                   address *
                                                                   ((
                                                                   unit ->
                                                                    'n124
                                                                    result)
                                                                   [@closure
                                                                    :nat])
                                                                   * address
                                                                   *
                                                                   ((
                                                                   (address,
                                                                    int) map
                                                                    ->
                                                                    ((
                                                                    address
                                                                    ->
                                                                    ((int ->
                                                                    (address,
                                                                    int) map)
                                                                    [@closure
                                                                    :((int ->
                                                                    ((int ->
                                                                    int)[@closure
                                                                    :int])) *
                                                                    address *
                                                                    (address,
                                                                    int) map)]))
                                                                    [@closure
                                                                    :((int ->
                                                                    ((int ->
                                                                    int)[@closure
                                                                    :int])) *
                                                                    (address,
                                                                    int) map)]))
                                                                   [@closure
                                                                    :int ->
                                                                    ((int ->
                                                                    int)
                                                                    [@closure
                                                                    :int])])
                                                                   *
                                                                   (int ->
                                                                    ((int ->
                                                                    bool)
                                                                    [@closure
                                                                    :int]))
                                                                   *
                                                                   (bool ->
                                                                    ((bool ->
                                                                    bool)
                                                                    [@closure
                                                                    :bool]))
                                                                   *
                                                                   ('j124
                                                                    option ->
                                                                    (('x124
                                                                    ->
                                                                    ('j124,
                                                                    'x124)
                                                                    result)
                                                                    [@closure
                                                                    :'j124
                                                                    option]))
                                                                   *
                                                                   (int ->
                                                                    ((int ->
                                                                    int)
                                                                    [@closure
                                                                    :int])))]))
                                    [@closure
                                      :(nat * address *
                                         ((unit -> 'z124 result)[@closure
                                                                  :nat])
                                         *
                                         (((address, int) map ->
                                             ((address ->
                                                 ((int -> (address, int) map)
                                                 [@closure
                                                   :((int ->
                                                        ((int -> int)
                                                        [@closure :int]))
                                                      * address * (address,
                                                      int) map)]))[@closure
                                                                    :
                                                                    ((int ->
                                                                    ((int ->
                                                                    int)[@closure
                                                                    :int])) *
                                                                    (address,
                                                                    int) map)]))
                                         [@closure
                                           :int ->
                                              ((int -> int)[@closure :int])])
                                         *
                                         (int ->
                                            ((int -> bool)[@closure :int]))
                                         *
                                         (bool ->
                                            ((bool -> bool)[@closure :bool]))
                                         *
                                         ('d124 option ->
                                            (('t123 -> ('d124, 't123) result)
                                            [@closure :'d124 option]))
                                         *
                                         (int ->
                                            ((int -> int)[@closure :int])))]))
                                [@closure
                                  :(nat *
                                     ((unit -> 'l123 result)[@closure :nat])
                                     *
                                     (((address, int) map ->
                                         ((address ->
                                             ((int -> (address, int) map)
                                             [@closure
                                               :((int ->
                                                    ((int -> int)[@closure
                                                                   :int]))
                                                  * address * (address, 
                                                  int) map)]))[@closure
                                                                :((int ->
                                                                    ((
                                                                    int ->
                                                                    int)
                                                                    [@closure
                                                                    :int]))
                                                                   *
                                                                   (address,
                                                                   int) map)]))
                                     [@closure
                                       :int -> ((int -> int)[@closure :int])])
                                     *
                                     (int -> ((int -> bool)[@closure :int]))
                                     *
                                     (bool ->
                                        ((bool -> bool)[@closure :bool]))
                                     *
                                     ('p124 option ->
                                        (('a124 -> ('a124, 'p124) result)
                                        [@closure :'p124 option]))
                                     *
                                     (int -> ((int -> int)[@closure :int])))]))]))
                       [@closure
                         :(nat *
                            (address ->
                               ((address ->
                                   ((int ->
                                       ((state -> 't124 result)[@closure
                                                                 :(int *
                                                                    address *
                                                                    address)]))
                                   [@closure :(address * address)]))[@closure
                                                                    :address]))
                            *
                            ((address ->
                                ((address ->
                                    ((int ->
                                        ((state -> result)[@closure
                                                            :(int *
                                                               ((unit ->
                                                                   'c122
                                                                    result)
                                                               [@closure
                                                                 :nat])
                                                               * address *
                                                               (((address,
                                                                   int) map
                                                                   ->
                                                                   ((
                                                                   address ->
                                                                    ((
                                                                    int ->
                                                                    (address,
                                                                    int) map)
                                                                    [@closure
                                                                    :((int ->
                                                                    ((int ->
                                                                    int)[@closure
                                                                    :int])) *
                                                                    address *
                                                                    (address,
                                                                    int) map)]))
                                                                   [@closure
                                                                    :((int ->
                                                                    ((int ->
                                                                    int)[@closure
                                                                    :int])) *
                                                                    (address,
                                                                    int) map)]))
                                                               [@closure
                                                                 :int ->
                                                                    ((
                                                                    int ->
                                                                    int)
                                                                    [@closure
                                                                    :int])])
                                                               *
                                                               (int ->
                                                                  ((int ->
                                                                    bool)
                                                                  [@closure
                                                                    :
                                                                    int]))
                                                               *
                                                               (int ->
                                                                  ((int ->
                                                                    int)
                                                                  [@closure
                                                                    :
                                                                    int]))
                                                               * address)]))
                                    [@closure
                                      :(((unit -> 'g126 result)[@closure
                                                                 :nat])
                                         * address *
                                         (((address, int) map ->
                                             ((address ->
                                                 ((int -> (address, int) map)
                                                 [@closure
                                                   :((int ->
                                                        ((int -> int)
                                                        [@closure :int]))
                                                      * address * (address,
                                                      int) map)]))[@closure
                                                                    :
                                                                    ((int ->
                                                                    ((int ->
                                                                    int)[@closure
                                                                    :int])) *
                                                                    (address,
                                                                    int) map)]))
                                         [@closure
                                           :int ->
                                              ((int -> int)[@closure :int])])
                                         *
                                         (int ->
                                            ((int -> bool)[@closure :int]))
                                         *
                                         (int ->
                                            ((int -> int)[@closure :int]))
                                         * address)]))[@closure
                                                        :(((unit ->
                                                              'u125 result)
                                                           [@closure :
                                                             nat])
                                                           * address *
                                                           (((address, 
                                                               int) map ->
                                                               ((address ->
                                                                   ((
                                                                   int ->
                                                                    (address,
                                                                    int) map)
                                                                   [@closure
                                                                    :((int ->
                                                                    ((int ->
                                                                    int)[@closure
                                                                    :int])) *
                                                                    address *
                                                                    (address,
                                                                    int) map)]))
                                                               [@closure
                                                                 :((int ->
                                                                    ((int ->
                                                                    int)
                                                                    [@closure
                                                                    :int])) *
                                                                    (
                                                                    address,
                                                                    int) map)]))
                                                           [@closure
                                                             :int ->
                                                                ((int -> int)
                                                                [@closure
                                                                  :int])])
                                                           *
                                                           (int ->
                                                              ((int -> bool)
                                                              [@closure :
                                                                int]))
                                                           *
                                                           (int ->
                                                              ((int -> int)
                                                              [@closure :
                                                                int])))]))
                            [@closure
                              :(((unit -> 'i125 result)[@closure :nat]) *
                                 (((address, int) map ->
                                     ((address ->
                                         ((int -> (address, int) map)
                                         [@closure
                                           :((int ->
                                                ((int -> int)[@closure :int]))
                                              * address * (address, int) map)]))
                                     [@closure
                                       :((int ->
                                            ((int -> int)[@closure :int]))
                                          * (address, int) map)]))[@closure
                                                                    :
                                                                    int ->
                                                                    ((int ->
                                                                    int)
                                                                    [@closure
                                                                    :int])])
                                 * (int -> ((int -> bool)[@closure :int])) *
                                 (int -> ((int -> int)[@closure :int])))])
                            *
                            ((address ->
                                ((address ->
                                    ((address ->
                                        ((int ->
                                            ((state -> result)[@closure
                                                                :(int * nat *
                                                                   address *
                                                                   ((
                                                                   unit ->
                                                                    'u124
                                                                    result)
                                                                   [@closure
                                                                    :nat])
                                                                   * address
                                                                   *
                                                                   ((
                                                                   (address,
                                                                    int) map
                                                                    ->
                                                                    ((
                                                                    address
                                                                    ->
                                                                    ((int ->
                                                                    (address,
                                                                    int) map)
                                                                    [@closure
                                                                    :((int ->
                                                                    ((int ->
                                                                    int)[@closure
                                                                    :int])) *
                                                                    address *
                                                                    (address,
                                                                    int) map)]))
                                                                    [@closure
                                                                    :((int ->
                                                                    ((int ->
                                                                    int)[@closure
                                                                    :int])) *
                                                                    (address,
                                                                    int) map)]))
                                                                   [@closure
                                                                    :int ->
                                                                    ((int ->
                                                                    int)
                                                                    [@closure
                                                                    :int])])
                                                                   *
                                                                   (int ->
                                                                    ((int ->
                                                                    bool)
                                                                    [@closure
                                                                    :int]))
                                                                   *
                                                                   (bool ->
                                                                    ((bool ->
                                                                    bool)
                                                                    [@closure
                                                                    :bool]))
                                                                   *
                                                                   ('y123
                                                                    option ->
                                                                    (('o123
                                                                    ->
                                                                    ('o123,
                                                                    'y123)
                                                                    result)
                                                                    [@closure
                                                                    :'y123
                                                                    option]))
                                                                   *
                                                                   (int ->
                                                                    ((int ->
                                                                    int)
                                                                    [@closure
                                                                    :int]))
                                                                   * address)]))
                                        [@closure
                                          :(nat * address *
                                             ((unit -> 'g123 result)[@closure
                                                                    :nat])
                                             * address *
                                             (((address, int) map ->
                                                 ((address ->
                                                     ((int ->
                                                         (address, int) map)
                                                     [@closure
                                                       :((int ->
                                                            ((int -> int)
                                                            [@closure :
                                                              int]))
                                                          * address *
                                                          (address, int) map)]))
                                                 [@closure
                                                   :((int ->
                                                        ((int -> int)
                                                        [@closure :int]))
                                                      * (address, int) map)]))
                                             [@closure
                                               :int ->
                                                  ((int -> int)[@closure
                                                                 :int])])
                                             *
                                             (int ->
                                                ((int -> bool)[@closure :int]))
                                             *
                                             (bool ->
                                                ((bool -> bool)[@closure
                                                                 :bool]))
                                             *
                                             ('k124 option ->
                                                (('v123 ->
                                                    ('k124, 'v123) result)
                                                [@closure :'k124 option]))
                                             *
                                             (int ->
                                                ((int -> int)[@closure :int]))
                                             * address)]))[@closure
                                                            :(nat * address *
                                                               ((unit ->
                                                                   'q121
                                                                    result)
                                                               [@closure
                                                                 :nat])
                                                               * address *
                                                               (((address,
                                                                   int) map
                                                                   ->
                                                                   ((
                                                                   address ->
                                                                    ((
                                                                    int ->
                                                                    (address,
                                                                    int) map)
                                                                    [@closure
                                                                    :((int ->
                                                                    ((int ->
                                                                    int)[@closure
                                                                    :int])) *
                                                                    address *
                                                                    (address,
                                                                    int) map)]))
                                                                   [@closure
                                                                    :((int ->
                                                                    ((int ->
                                                                    int)[@closure
                                                                    :int])) *
                                                                    (address,
                                                                    int) map)]))
                                                               [@closure
                                                                 :int ->
                                                                    ((
                                                                    int ->
                                                                    int)
                                                                    [@closure
                                                                    :int])])
                                                               *
                                                               (int ->
                                                                  ((int ->
                                                                    bool)
                                                                  [@closure
                                                                    :
                                                                    int]))
                                                               *
                                                               (bool ->
                                                                  ((bool ->
                                                                    bool)
                                                                  [@closure
                                                                    :
                                                                    bool]))
                                                               *
                                                               ('r122 option
                                                                  ->
                                                                  (('b122 ->
                                                                    ('b122,
                                                                    'r122)
                                                                    result)
                                                                  [@closure
                                                                    :
                                                                    'r122
                                                                    option]))
                                                               *
                                                               (int ->
                                                                  ((int ->
                                                                    int)
                                                                  [@closure
                                                                    :
                                                                    int])))]))
                                [@closure
                                  :(nat * address *
                                     ((unit -> 'l125 result)[@closure :nat])
                                     *
                                     (((address, int) map ->
                                         ((address ->
                                             ((int -> (address, int) map)
                                             [@closure
                                               :((int ->
                                                    ((int -> int)[@closure
                                                                   :int]))
                                                  * address * (address, 
                                                  int) map)]))[@closure
                                                                :((int ->
                                                                    ((
                                                                    int ->
                                                                    int)
                                                                    [@closure
                                                                    :int]))
                                                                   *
                                                                   (address,
                                                                   int) map)]))
                                     [@closure
                                       :int -> ((int -> int)[@closure :int])])
                                     *
                                     (int -> ((int -> bool)[@closure :int]))
                                     *
                                     (bool ->
                                        ((bool -> bool)[@closure :bool]))
                                     *
                                     ('b126 option ->
                                        (('t125 -> ('b126, 't125) result)
                                        [@closure :'b126 option]))
                                     *
                                     (int -> ((int -> int)[@closure :int])))]))
                            [@closure
                              :(nat * ((unit -> 'i124 result)[@closure :nat])
                                 *
                                 (((address, int) map ->
                                     ((address ->
                                         ((int -> (address, int) map)
                                         [@closure
                                           :((int ->
                                                ((int -> int)[@closure :int]))
                                              * address * (address, int) map)]))
                                     [@closure
                                       :((int ->
                                            ((int -> int)[@closure :int]))
                                          * (address, int) map)]))[@closure
                                                                    :
                                                                    int ->
                                                                    ((int ->
                                                                    int)
                                                                    [@closure
                                                                    :int])])
                                 * (int -> ((int -> bool)[@closure :int])) *
                                 (bool -> ((bool -> bool)[@closure :bool])) *
                                 ('c125 option ->
                                    (('s124 -> ('c125, 's124) result)
                                    [@closure :'c125 option]))
                                 * (int -> ((int -> int)[@closure :int])))]))]))]). Type variables 'a123, 'a124, 'b122, 'b123, 'b126, 'c122, 'c125, 'c126, 'd124, 'd125, 'e124, 'e125, 'f123, 'f124, 'f126, 'g122, 'g123, 'g126, 'h122, 'h125, 'i124, 'i125, 'j124, 'k123, 'k124, 'l122, 'l123, 'l125, 'm122, 'm125, 'n124, 'o123, 'o124, 'p123, 'p124, 'p125, 'q121, 'q122, 'q123, 'q125, 'r121, 'r122, 's124, 't123, 't124, 't125, 'u123, 'u124, 'u125, 'v121, 'v122, 'v123, 'w121, 'w122, 'x124, 'x125, 'y123, 'y124, 'y125, 'z123, 'z124 were replaced by unit.
./tests/extracted-code/liquidity-extract/tests/liquidity_eip20token.liq:134.18-137.73: Warning: 
Unresolved type ((state -> (operation list * state))[@closure
                                      :(msg option *
                                         ((((timestamp * (address * (dun *
                                             dun))) * msg option) ->
                                             ((state -> 'y127 result)
                                             [@closure
                                               :(((timestamp * (address *
                                                  (dun * dun))) * msg option)
                                                  *
                                                  (((timestamp * (address *
                                                      (dun * dun))) ->
                                                      ((state ->
                                                          ((msg option ->
                                                              't130 result)
                                                          [@closure
                                                            :((timestamp *
                                                               (address *
                                                               (dun * dun)))
                                                               * nat * state
                                                               *
                                                               (address ->
                                                                  ((address
                                                                    ->
                                                                    ((int ->
                                                                    ((state
                                                                    ->
                                                                    'x131
                                                                    result)
                                                                    [@closure
                                                                    :(int *
                                                                    address *
                                                                    address)]))
                                                                    [@closure
                                                                    :(address
                                                                    *
                                                                    address)]))
                                                                  [@closure
                                                                    :
                                                                    address]))
                                                               *
                                                               ((address ->
                                                                   ((
                                                                   address ->
                                                                    ((
                                                                    int ->
                                                                    ((state
                                                                    -> result)
                                                                    [@closure
                                                                    :(int *
                                                                    ((unit ->
                                                                    'e127
                                                                    result)
                                                                    [@closure
                                                                    :nat]) *
                                                                    address *
                                                                    (((address,
                                                                    int) map
                                                                    ->
                                                                    ((address
                                                                    ->
                                                                    ((int ->
                                                                    (address,
                                                                    int) map)
                                                                    [@closure
                                                                    :((int ->
                                                                    ((int ->
                                                                    int)[@closure
                                                                    :int])) *
                                                                    address *
                                                                    (address,
                                                                    int) map)]))
                                                                    [@closure
                                                                    :((int ->
                                                                    ((int ->
                                                                    int)[@closure
                                                                    :int])) *
                                                                    (address,
                                                                    int) map)]))
                                                                    [@closure
                                                                    :int ->
                                                                    ((int ->
                                                                    int)
                                                                    [@closure
                                                                    :int])])
                                                                    *
                                                                    (int ->
                                                                    ((int ->
                                                                    bool)
                                                                    [@closure
                                                                    :int])) *
                                                                    (int ->
                                                                    ((int ->
                                                                    int)
                                                                    [@closure
                                                                    :int])) *
                                                                    address)]))
                                                                    [@closure
                                                                    :(((
                                                                    unit ->
                                                                    'e131
                                                                    result)
                                                                    [@closure
                                                                    :nat]) *
                                                                    address *
                                                                    (((address,
                                                                    int) map
                                                                    ->
                                                                    ((address
                                                                    ->
                                                                    ((int ->
                                                                    (address,
                                                                    int) map)
                                                                    [@closure
                                                                    :((int ->
                                                                    ((int ->
                                                                    int)[@closure
                                                                    :int])) *
                                                                    address *
                                                                    (address,
                                                                    int) map)]))
                                                                    [@closure
                                                                    :((int ->
                                                                    ((int ->
                                                                    int)[@closure
                                                                    :int])) *
                                                                    (address,
                                                                    int) map)]))
                                                                    [@closure
                                                                    :int ->
                                                                    ((int ->
                                                                    int)
                                                                    [@closure
                                                                    :int])])
                                                                    *
                                                                    (int ->
                                                                    ((int ->
                                                                    bool)
                                                                    [@closure
                                                                    :int])) *
                                                                    (int ->
                                                                    ((int ->
                                                                    int)
                                                                    [@closure
                                                                    :int])) *
                                                                    address)]))
                                                                   [@closure
                                                                    :(((
                                                                    unit ->
                                                                    'c128
                                                                    result)
                                                                    [@closure
                                                                    :nat]) *
                                                                    address *
                                                                    (((address,
                                                                    int) map
                                                                    ->
                                                                    ((address
                                                                    ->
                                                                    ((int ->
                                                                    (address,
                                                                    int) map)
                                                                    [@closure
                                                                    :((int ->
                                                                    ((int ->
                                                                    int)[@closure
                                                                    :int])) *
                                                                    address *
                                                                    (address,
                                                                    int) map)]))
                                                                    [@closure
                                                                    :((int ->
                                                                    ((int ->
                                                                    int)[@closure
                                                                    :int])) *
                                                                    (address,
                                                                    int) map)]))
                                                                    [@closure
                                                                    :int ->
                                                                    ((int ->
                                                                    int)
                                                                    [@closure
                                                                    :int])])
                                                                    *
                                                                    (int ->
                                                                    ((int ->
                                                                    bool)
                                                                    [@closure
                                                                    :int])) *
                                                                    (int ->
                                                                    ((int ->
                                                                    int)
                                                                    [@closure
                                                                    :int])))]))
                                                               [@closure
                                                                 :(((
                                                                    unit ->
                                                                    'r134
                                                                    result)
                                                                    [@closure
                                                                    :nat]) *
                                                                    ((
                                                                    (address,
                                                                    int) map
                                                                    ->
                                                                    ((address
                                                                    ->
                                                                    ((int ->
                                                                    (address,
                                                                    int) map)
                                                                    [@closure
                                                                    :((int ->
                                                                    ((int ->
                                                                    int)[@closure
                                                                    :int])) *
                                                                    address *
                                                                    (address,
                                                                    int) map)]))
                                                                    [@closure
                                                                    :((int ->
                                                                    ((int ->
                                                                    int)[@closure
                                                                    :int])) *
                                                                    (address,
                                                                    int) map)]))
                                                                    [@closure
                                                                    :int ->
                                                                    ((int ->
                                                                    int)
                                                                    [@closure
                                                                    :int])])
                                                                    *
                                                                    (
                                                                    int ->
                                                                    ((int ->
                                                                    bool)
                                                                    [@closure
                                                                    :int])) *
                                                                    (
                                                                    int ->
                                                                    ((int ->
                                                                    int)
                                                                    [@closure
                                                                    :int])))])
                                                               *
                                                               ((address ->
                                                                   ((
                                                                   address ->
                                                                    ((
                                                                    address
                                                                    ->
                                                                    ((int ->
                                                                    ((state
                                                                    -> result)
                                                                    [@closure
                                                                    :(int *
                                                                    nat *
                                                                    address *
                                                                    ((unit ->
                                                                    'w126
                                                                    result)
                                                                    [@closure
                                                                    :nat]) *
                                                                    address *
                                                                    (((address,
                                                                    int) map
                                                                    ->
                                                                    ((address
                                                                    ->
                                                                    ((int ->
                                                                    (address,
                                                                    int) map)
                                                                    [@closure
                                                                    :((int ->
                                                                    ((int ->
                                                                    int)[@closure
                                                                    :int])) *
                                                                    address *
                                                                    (address,
                                                                    int) map)]))
                                                                    [@closure
                                                                    :((int ->
                                                                    ((int ->
                                                                    int)[@closure
                                                                    :int])) *
                                                                    (address,
                                                                    int) map)]))
                                                                    [@closure
                                                                    :int ->
                                                                    ((int ->
                                                                    int)
                                                                    [@closure
                                                                    :int])])
                                                                    *
                                                                    (int ->
                                                                    ((int ->
                                                                    bool)
                                                                    [@closure
                                                                    :int])) *
                                                                    (bool ->
                                                                    ((bool ->
                                                                    bool)
                                                                    [@closure
                                                                    :bool]))
                                                                    *
                                                                    ('h134
                                                                    option ->
                                                                    (('s130
                                                                    ->
                                                                    ('h134,
                                                                    's130)
                                                                    result)
                                                                    [@closure
                                                                    :'h134
                                                                    option]))
                                                                    *
                                                                    (int ->
                                                                    ((int ->
                                                                    int)
                                                                    [@closure
                                                                    :int])) *
                                                                    address)]))
                                                                    [@closure
                                                                    :(nat *
                                                                    address *
                                                                    ((unit ->
                                                                    'x134
                                                                    result)
                                                                    [@closure
                                                                    :nat]) *
                                                                    address *
                                                                    (((address,
                                                                    int) map
                                                                    ->
                                                                    ((address
                                                                    ->
                                                                    ((int ->
                                                                    (address,
                                                                    int) map)
                                                                    [@closure
                                                                    :((int ->
                                                                    ((int ->
                                                                    int)[@closure
                                                                    :int])) *
                                                                    address *
                                                                    (address,
                                                                    int) map)]))
                                                                    [@closure
                                                                    :((int ->
                                                                    ((int ->
                                                                    int)[@closure
                                                                    :int])) *
                                                                    (address,
                                                                    int) map)]))
                                                                    [@closure
                                                                    :int ->
                                                                    ((int ->
                                                                    int)
                                                                    [@closure
                                                                    :int])])
                                                                    *
                                                                    (int ->
                                                                    ((int ->
                                                                    bool)
                                                                    [@closure
                                                                    :int])) *
                                                                    (bool ->
                                                                    ((bool ->
                                                                    bool)
                                                                    [@closure
                                                                    :bool]))
                                                                    *
                                                                    ('w132
                                                                    option ->
                                                                    (('d129
                                                                    ->
                                                                    ('d129,
                                                                    'w132)
                                                                    result)
                                                                    [@closure
                                                                    :'w132
                                                                    option]))
                                                                    *
                                                                    (int ->
                                                                    ((int ->
                                                                    int)
                                                                    [@closure
                                                                    :int])) *
                                                                    address)]))
                                                                    [@closure
                                                                    :(nat *
                                                                    address *
                                                                    ((unit ->
                                                                    'y134
                                                                    result)
                                                                    [@closure
                                                                    :nat]) *
                                                                    address *
                                                                    (((address,
                                                                    int) map
                                                                    ->
                                                                    ((address
                                                                    ->
                                                                    ((int ->
                                                                    (address,
                                                                    int) map)
                                                                    [@closure
                                                                    :((int ->
                                                                    ((int ->
                                                                    int)[@closure
                                                                    :int])) *
                                                                    address *
                                                                    (address,
                                                                    int) map)]))
                                                                    [@closure
                                                                    :((int ->
                                                                    ((int ->
                                                                    int)[@closure
                                                                    :int])) *
                                                                    (address,
                                                                    int) map)]))
                                                                    [@closure
                                                                    :int ->
                                                                    ((int ->
                                                                    int)
                                                                    [@closure
                                                                    :int])])
                                                                    *
                                                                    (int ->
                                                                    ((int ->
                                                                    bool)
                                                                    [@closure
                                                                    :int])) *
                                                                    (bool ->
                                                                    ((bool ->
                                                                    bool)
                                                                    [@closure
                                                                    :bool]))
                                                                    *
                                                                    ('k131
                                                                    option ->
                                                                    (('c131
                                                                    ->
                                                                    ('c131,
                                                                    'k131)
                                                                    result)
                                                                    [@closure
                                                                    :'k131
                                                                    option]))
                                                                    *
                                                                    (int ->
                                                                    ((int ->
                                                                    int)
                                                                    [@closure
                                                                    :int])))]))
                                                                   [@closure
                                                                    :(nat *
                                                                    address *
                                                                    ((unit ->
                                                                    'o127
                                                                    result)
                                                                    [@closure
                                                                    :nat]) *
                                                                    (((address,
                                                                    int) map
                                                                    ->
                                                                    ((address
                                                                    ->
                                                                    ((int ->
                                                                    (address,
                                                                    int) map)
                                                                    [@closure
                                                                    :((int ->
                                                                    ((int ->
                                                                    int)[@closure
                                                                    :int])) *
                                                                    address *
                                                                    (address,
                                                                    int) map)]))
                                                                    [@closure
                                                                    :((int ->
                                                                    ((int ->
                                                                    int)[@closure
                                                                    :int])) *
                                                                    (address,
                                                                    int) map)]))
                                                                    [@closure
                                                                    :int ->
                                                                    ((int ->
                                                                    int)
                                                                    [@closure
                                                                    :int])])
                                                                    *
                                                                    (int ->
                                                                    ((int ->
                                                                    bool)
                                                                    [@closure
                                                                    :int])) *
                                                                    (bool ->
                                                                    ((bool ->
                                                                    bool)
                                                                    [@closure
                                                                    :bool]))
                                                                    *
                                                                    ('n129
                                                                    option ->
                                                                    (('n133
                                                                    ->
                                                                    ('n129,
                                                                    'n133)
                                                                    result)
                                                                    [@closure
                                                                    :'n129
                                                                    option]))
                                                                    *
                                                                    (int ->
                                                                    ((int ->
                                                                    int)
                                                                    [@closure
                                                                    :int])))]))
                                                               [@closure
                                                                 :(nat *
                                                                    ((
                                                                    unit ->
                                                                    'j130
                                                                    result)
                                                                    [@closure
                                                                    :nat]) *
                                                                    ((
                                                                    (address,
                                                                    int) map
                                                                    ->
                                                                    ((address
                                                                    ->
                                                                    ((int ->
                                                                    (address,
                                                                    int) map)
                                                                    [@closure
                                                                    :((int ->
                                                                    ((int ->
                                                                    int)[@closure
                                                                    :int])) *
                                                                    address *
                                                                    (address,
                                                                    int) map)]))
                                                                    [@closure
                                                                    :((int ->
                                                                    ((int ->
                                                                    int)[@closure
                                                                    :int])) *
                                                                    (address,
                                                                    int) map)]))
                                                                    [@closure
                                                                    :int ->
                                                                    ((int ->
                                                                    int)
                                                                    [@closure
                                                                    :int])])
                                                                    *
                                                                    (
                                                                    int ->
                                                                    ((int ->
                                                                    bool)
                                                                    [@closure
                                                                    :int])) *
                                                                    (
                                                                    bool ->
                                                                    ((bool ->
                                                                    bool)
                                                                    [@closure
                                                                    :bool]))
                                                                    *
                                                                    (
                                                                    'a130
                                                                    option ->
                                                                    (('a135
                                                                    ->
                                                                    ('a130,
                                                                    'a135)
                                                                    result)
                                                                    [@closure
                                                                    :'a130
                                                                    option]))
                                                                    *
                                                                    (
                                                                    int ->
                                                                    ((int ->
                                                                    int)
                                                                    [@closure
                                                                    :int])))]))]))
                                                      [@closure
                                                        :((timestamp *
                                                           (address * (dun *
                                                           dun))) * nat *
                                                           (address ->
                                                              ((address ->
                                                                  ((int ->
                                                                    ((state
                                                                    ->
                                                                    'e133
                                                                    result)
                                                                    [@closure
                                                                    :(int *
                                                                    address *
                                                                    address)]))
                                                                  [@closure
                                                                    :
                                                                    (address
                                                                    *
                                                                    address)]))
                                                              [@closure
                                                                :address]))
                                                           *
                                                           ((address ->
                                                               ((address ->
                                                                   ((
                                                                   int ->
                                                                    ((
                                                                    state ->
                                                                    result)
                                                                    [@closure
                                                                    :(int *
                                                                    ((unit ->
                                                                    'u128
                                                                    result)
                                                                    [@closure
                                                                    :nat]) *
                                                                    address *
                                                                    (((address,
                                                                    int) map
                                                                    ->
                                                                    ((address
                                                                    ->
                                                                    ((int ->
                                                                    (address,
                                                                    int) map)
                                                                    [@closure
                                                                    :((int ->
                                                                    ((int ->
                                                                    int)[@closure
                                                                    :int])) *
                                                                    address *
                                                                    (address,
                                                                    int) map)]))
                                                                    [@closure
                                                                    :((int ->
                                                                    ((int ->
                                                                    int)[@closure
                                                                    :int])) *
                                                                    (address,
                                                                    int) map)]))
                                                                    [@closure
                                                                    :int ->
                                                                    ((int ->
                                                                    int)
                                                                    [@closure
                                                                    :int])])
                                                                    *
                                                                    (int ->
                                                                    ((int ->
                                                                    bool)
                                                                    [@closure
                                                                    :int])) *
                                                                    (int ->
                                                                    ((int ->
                                                                    int)
                                                                    [@closure
                                                                    :int])) *
                                                                    address)]))
                                                                   [@closure
                                                                    :(((
                                                                    unit ->
                                                                    'p134
                                                                    result)
                                                                    [@closure
                                                                    :nat]) *
                                                                    address *
                                                                    (((address,
                                                                    int) map
                                                                    ->
                                                                    ((address
                                                                    ->
                                                                    ((int ->
                                                                    (address,
                                                                    int) map)
                                                                    [@closure
                                                                    :((int ->
                                                                    ((int ->
                                                                    int)[@closure
                                                                    :int])) *
                                                                    address *
                                                                    (address,
                                                                    int) map)]))
                                                                    [@closure
                                                                    :((int ->
                                                                    ((int ->
                                                                    int)[@closure
                                                                    :int])) *
                                                                    (address,
                                                                    int) map)]))
                                                                    [@closure
                                                                    :int ->
                                                                    ((int ->
                                                                    int)
                                                                    [@closure
                                                                    :int])])
                                                                    *
                                                                    (int ->
                                                                    ((int ->
                                                                    bool)
                                                                    [@closure
                                                                    :int])) *
                                                                    (int ->
                                                                    ((int ->
                                                                    int)
                                                                    [@closure
                                                                    :int])) *
                                                                    address)]))
                                                               [@closure
                                                                 :(((
                                                                    unit ->
                                                                    'b131
                                                                    result)
                                                                    [@closure
                                                                    :nat]) *
                                                                    address *
                                                                    ((
                                                                    (address,
                                                                    int) map
                                                                    ->
                                                                    ((address
                                                                    ->
                                                                    ((int ->
                                                                    (address,
                                                                    int) map)
                                                                    [@closure
                                                                    :((int ->
                                                                    ((int ->
                                                                    int)[@closure
                                                                    :int])) *
                                                                    address *
                                                                    (address,
                                                                    int) map)]))
                                                                    [@closure
                                                                    :((int ->
                                                                    ((int ->
                                                                    int)[@closure
                                                                    :int])) *
                                                                    (address,
                                                                    int) map)]))
                                                                    [@closure
                                                                    :int ->
                                                                    ((int ->
                                                                    int)
                                                                    [@closure
                                                                    :int])])
                                                                    *
                                                                    (
                                                                    int ->
                                                                    ((int ->
                                                                    bool)
                                                                    [@closure
                                                                    :int])) *
                                                                    (
                                                                    int ->
                                                                    ((int ->
                                                                    int)
                                                                    [@closure
                                                                    :int])))]))
                                                           [@closure
                                                             :(((unit ->
                                                                   'f127
                                                                    result)
                                                                [@closure
                                                                  :nat])
                                                                *
                                                                (((address,
                                                                    int) map
                                                                    ->
                                                                    ((
                                                                    address
                                                                    ->
                                                                    ((int ->
                                                                    (address,
                                                                    int) map)
                                                                    [@closure
                                                                    :((int ->
                                                                    ((int ->
                                                                    int)[@closure
                                                                    :int])) *
                                                                    address *
                                                                    (address,
                                                                    int) map)]))
                                                                    [@closure
                                                                    :((int ->
                                                                    ((int ->
                                                                    int)[@closure
                                                                    :int])) *
                                                                    (address,
                                                                    int) map)]))
                                                                [@closure
                                                                  :int ->
                                                                    ((
                                                                    int ->
                                                                    int)
                                                                    [@closure
                                                                    :int])])
                                                                *
                                                                (int ->
                                                                   ((
                                                                   int ->
                                                                    bool)
                                                                   [@closure
                                                                    :int]))
                                                                *
                                                                (int ->
                                                                   ((
                                                                   int -> 
                                                                    int)
                                                                   [@closure
                                                                    :int])))])
                                                           *
                                                           ((address ->
                                                               ((address ->
                                                                   ((
                                                                   address ->
                                                                    ((
                                                                    int ->
                                                                    ((state
                                                                    -> result)
                                                                    [@closure
                                                                    :(int *
                                                                    nat *
                                                                    address *
                                                                    ((unit ->
                                                                    'g135
                                                                    result)
                                                                    [@closure
                                                                    :nat]) *
                                                                    address *
                                                                    (((address,
                                                                    int) map
                                                                    ->
                                                                    ((address
                                                                    ->
                                                                    ((int ->
                                                                    (address,
                                                                    int) map)
                                                                    [@closure
                                                                    :((int ->
                                                                    ((int ->
                                                                    int)[@closure
                                                                    :int])) *
                                                                    address *
                                                                    (address,
                                                                    int) map)]))
                                                                    [@closure
                                                                    :((int ->
                                                                    ((int ->
                                                                    int)[@closure
                                                                    :int])) *
                                                                    (address,
                                                                    int) map)]))
                                                                    [@closure
                                                                    :int ->
                                                                    ((int ->
                                                                    int)
                                                                    [@closure
                                                                    :int])])
                                                                    *
                                                                    (int ->
                                                                    ((int ->
                                                                    bool)
                                                                    [@closure
                                                                    :int])) *
                                                                    (bool ->
                                                                    ((bool ->
                                                                    bool)
                                                                    [@closure
                                                                    :bool]))
                                                                    *
                                                                    ('p127
                                                                    option ->
                                                                    (('u131
                                                                    ->
                                                                    ('p127,
                                                                    'u131)
                                                                    result)
                                                                    [@closure
                                                                    :'p127
                                                                    option]))
                                                                    *
                                                                    (int ->
                                                                    ((int ->
                                                                    int)
                                                                    [@closure
                                                                    :int])) *
                                                                    address)]))
                                                                    [@closure
                                                                    :(nat *
                                                                    address *
                                                                    ((unit ->
                                                                    'l128
                                                                    result)
                                                                    [@closure
                                                                    :nat]) *
                                                                    address *
                                                                    (((address,
                                                                    int) map
                                                                    ->
                                                                    ((address
                                                                    ->
                                                                    ((int ->
                                                                    (address,
                                                                    int) map)
                                                                    [@closure
                                                                    :((int ->
                                                                    ((int ->
                                                                    int)[@closure
                                                                    :int])) *
                                                                    address *
                                                                    (address,
                                                                    int) map)]))
                                                                    [@closure
                                                                    :((int ->
                                                                    ((int ->
                                                                    int)[@closure
                                                                    :int])) *
                                                                    (address,
                                                                    int) map)]))
                                                                    [@closure
                                                                    :int ->
                                                                    ((int ->
                                                                    int)
                                                                    [@closure
                                                                    :int])])
                                                                    *
                                                                    (int ->
                                                                    ((int ->
                                                                    bool)
                                                                    [@closure
                                                                    :int])) *
                                                                    (bool ->
                                                                    ((bool ->
                                                                    bool)
                                                                    [@closure
                                                                    :bool]))
                                                                    *
                                                                    ('m128
                                                                    option ->
                                                                    (('q133
                                                                    ->
                                                                    ('m128,
                                                                    'q133)
                                                                    result)
                                                                    [@closure
                                                                    :'m128
                                                                    option]))
                                                                    *
                                                                    (int ->
                                                                    ((int ->
                                                                    int)
                                                                    [@closure
                                                                    :int])) *
                                                                    address)]))
                                                                   [@closure
                                                                    :(nat *
                                                                    address *
                                                                    ((unit ->
                                                                    'y133
                                                                    result)
                                                                    [@closure
                                                                    :nat]) *
                                                                    address *
                                                                    (((address,
                                                                    int) map
                                                                    ->
                                                                    ((address
                                                                    ->
                                                                    ((int ->
                                                                    (address,
                                                                    int) map)
                                                                    [@closure
                                                                    :((int ->
                                                                    ((int ->
                                                                    int)[@closure
                                                                    :int])) *
                                                                    address *
                                                                    (address,
                                                                    int) map)]))
                                                                    [@closure
                                                                    :((int ->
                                                                    ((int ->
                                                                    int)[@closure
                                                                    :int])) *
                                                                    (address,
                                                                    int) map)]))
                                                                    [@closure
                                                                    :int ->
                                                                    ((int ->
                                                                    int)
                                                                    [@closure
                                                                    :int])])
                                                                    *
                                                                    (int ->
                                                                    ((int ->
                                                                    bool)
                                                                    [@closure
                                                                    :int])) *
                                                                    (bool ->
                                                                    ((bool ->
                                                                    bool)
                                                                    [@closure
                                                                    :bool]))
                                                                    *
                                                                    ('o132
                                                                    option ->
                                                                    (('b128
                                                                    ->
                                                                    ('b128,
                                                                    'o132)
                                                                    result)
                                                                    [@closure
                                                                    :'o132
                                                                    option]))
                                                                    *
                                                                    (int ->
                                                                    ((int ->
                                                                    int)
                                                                    [@closure
                                                                    :int])))]))
                                                               [@closure
                                                                 :(nat *
                                                                    address *
                                                                    ((
                                                                    unit ->
                                                                    'v128
                                                                    result)
                                                                    [@closure
                                                                    :nat]) *
                                                                    ((
                                                                    (address,
                                                                    int) map
                                                                    ->
                                                                    ((address
                                                                    ->
                                                                    ((int ->
                                                                    (address,
                                                                    int) map)
                                                                    [@closure
                                                                    :((int ->
                                                                    ((int ->
                                                                    int)[@closure
                                                                    :int])) *
                                                                    address *
                                                                    (address,
                                                                    int) map)]))
                                                                    [@closure
                                                                    :((int ->
                                                                    ((int ->
                                                                    int)[@closure
                                                                    :int])) *
                                                                    (address,
                                                                    int) map)]))
                                                                    [@closure
                                                                    :int ->
                                                                    ((int ->
                                                                    int)
                                                                    [@closure
                                                                    :int])])
                                                                    *
                                                                    (
                                                                    int ->
                                                                    ((int ->
                                                                    bool)
                                                                    [@closure
                                                                    :int])) *
                                                                    (
                                                                    bool ->
                                                                    ((bool ->
                                                                    bool)
                                                                    [@closure
                                                                    :bool]))
                                                                    *
                                                                    (
                                                                    'i130
                                                                    option ->
                                                                    (('n126
                                                                    ->
                                                                    ('i130,
                                                                    'n126)
                                                                    result)
                                                                    [@closure
                                                                    :'i130
                                                                    option]))
                                                                    *
                                                                    (
                                                                    int ->
                                                                    ((int ->
                                                                    int)
                                                                    [@closure
                                                                    :int])))]))
                                                           [@closure
                                                             :(nat *
                                                                ((unit ->
                                                                    'f133
                                                                    result)
                                                                [@closure
                                                                  :nat])
                                                                *
                                                                (((address,
                                                                    int) map
                                                                    ->
                                                                    ((
                                                                    address
                                                                    ->
                                                                    ((int ->
                                                                    (address,
                                                                    int) map)
                                                                    [@closure
                                                                    :((int ->
                                                                    ((int ->
                                                                    int)[@closure
                                                                    :int])) *
                                                                    address *
                                                                    (address,
                                                                    int) map)]))
                                                                    [@closure
                                                                    :((int ->
                                                                    ((int ->
                                                                    int)[@closure
                                                                    :int])) *
                                                                    (address,
                                                                    int) map)]))
                                                                [@closure
                                                                  :int ->
                                                                    ((
                                                                    int ->
                                                                    int)
                                                                    [@closure
                                                                    :int])])
                                                                *
                                                                (int ->
                                                                   ((
                                                                   int ->
                                                                    bool)
                                                                   [@closure
                                                                    :int]))
                                                                *
                                                                (bool ->
                                                                   ((
                                                                   bool ->
                                                                    bool)
                                                                   [@closure
                                                                    :bool]))
                                                                *
                                                                ('q134 option
                                                                   ->
                                                                   ((
                                                                   'e129 ->
                                                                    ('e129,
                                                                    'q134)
                                                                    result)
                                                                   [@closure
                                                                    :'q134
                                                                    option]))
                                                                *
                                                                (int ->
                                                                   ((
                                                                   int -> 
                                                                    int)
                                                                   [@closure
                                                                    :int])))]))]))
                                                  [@closure
                                                    :(nat *
                                                       (address ->
                                                          ((address ->
                                                              ((int ->
                                                                  ((state ->
                                                                    'o126
                                                                    result)
                                                                  [@closure
                                                                    :
                                                                    (int *
                                                                    address *
                                                                    address)]))
                                                              [@closure
                                                                :(address *
                                                                   address)]))
                                                          [@closure :
                                                            address]))
                                                       *
                                                       ((address ->
                                                           ((address ->
                                                               ((int ->
                                                                   ((
                                                                   state ->
                                                                    result)
                                                                   [@closure
                                                                    :(int *
                                                                    ((unit ->
                                                                    'w129
                                                                    result)
                                                                    [@closure
                                                                    :nat]) *
                                                                    address *
                                                                    (((address,
                                                                    int) map
                                                                    ->
                                                                    ((address
                                                                    ->
                                                                    ((int ->
                                                                    (address,
                                                                    int) map)
                                                                    [@closure
                                                                    :((int ->
                                                                    ((int ->
                                                                    int)[@closure
                                                                    :int])) *
                                                                    address *
                                                                    (address,
                                                                    int) map)]))
                                                                    [@closure
                                                                    :((int ->
                                                                    ((int ->
                                                                    int)[@closure
                                                                    :int])) *
                                                                    (address,
                                                                    int) map)]))
                                                                    [@closure
                                                                    :int ->
                                                                    ((int ->
                                                                    int)
                                                                    [@closure
                                                                    :int])])
                                                                    *
                                                                    (int ->
                                                                    ((int ->
                                                                    bool)
                                                                    [@closure
                                                                    :int])) *
                                                                    (int ->
                                                                    ((int ->
                                                                    int)
                                                                    [@closure
                                                                    :int])) *
                                                                    address)]))
                                                               [@closure
                                                                 :(((
                                                                    unit ->
                                                                    'o131
                                                                    result)
                                                                    [@closure
                                                                    :nat]) *
                                                                    address *
                                                                    ((
                                                                    (address,
                                                                    int) map
                                                                    ->
                                                                    ((address
                                                                    ->
                                                                    ((int ->
                                                                    (address,
                                                                    int) map)
                                                                    [@closure
                                                                    :((int ->
                                                                    ((int ->
                                                                    int)[@closure
                                                                    :int])) *
                                                                    address *
                                                                    (address,
                                                                    int) map)]))
                                                                    [@closure
                                                                    :((int ->
                                                                    ((int ->
                                                                    int)[@closure
                                                                    :int])) *
                                                                    (address,
                                                                    int) map)]))
                                                                    [@closure
                                                                    :int ->
                                                                    ((int ->
                                                                    int)
                                                                    [@closure
                                                                    :int])])
                                                                    *
                                                                    (
                                                                    int ->
                                                                    ((int ->
                                                                    bool)
                                                                    [@closure
                                                                    :int])) *
                                                                    (
                                                                    int ->
                                                                    ((int ->
                                                                    int)
                                                                    [@closure
                                                                    :int])) *
                                                                    address)]))
                                                           [@closure
                                                             :(((unit ->
                                                                   'y126
                                                                    result)
                                                                [@closure
                                                                  :nat])
                                                                * address *
                                                                (((address,
                                                                    int) map
                                                                    ->
                                                                    ((
                                                                    address
                                                                    ->
                                                                    ((int ->
                                                                    (address,
                                                                    int) map)
                                                                    [@closure
                                                                    :((int ->
                                                                    ((int ->
                                                                    int)[@closure
                                                                    :int])) *
                                                                    address *
                                                                    (address,
                                                                    int) map)]))
                                                                    [@closure
                                                                    :((int ->
                                                                    ((int ->
                                                                    int)[@closure
                                                                    :int])) *
                                                                    (address,
                                                                    int) map)]))
                                                                [@closure
                                                                  :int ->
                                                                    ((
                                                                    int ->
                                                                    int)
                                                                    [@closure
                                                                    :int])])
                                                                *
                                                                (int ->
                                                                   ((
                                                                   int ->
                                                                    bool)
                                                                   [@closure
                                                                    :int]))
                                                                *
                                                                (int ->
                                                                   ((
                                                                   int -> 
                                                                    int)
                                                                   [@closure
                                                                    :int])))]))
                                                       [@closure
                                                         :(((unit ->
                                                               'g132 result)
                                                            [@closure :
                                                              nat])
                                                            *
                                                            (((address, 
                                                                int) map ->
                                                                ((address ->
                                                                    ((
                                                                    int ->
                                                                    (address,
                                                                    int) map)
                                                                    [@closure
                                                                    :((int ->
                                                                    ((int ->
                                                                    int)[@closure
                                                                    :int])) *
                                                                    address *
                                                                    (address,
                                                                    int) map)]))
                                                                [@closure
                                                                  :((int ->
                                                                    ((int ->
                                                                    int)
                                                                    [@closure
                                                                    :int])) *
                                                                    (address,
                                                                    int) map)]))
                                                            [@closure
                                                              :int ->
                                                                 ((int -> int)
                                                                 [@closure
                                                                   :int])])
                                                            *
                                                            (int ->
                                                               ((int -> bool)
                                                               [@closure
                                                                 :int]))
                                                            *
                                                            (int ->
                                                               ((int -> int)
                                                               [@closure
                                                                 :int])))])
                                                       *
                                                       ((address ->
                                                           ((address ->
                                                               ((address ->
                                                                   ((
                                                                   int ->
                                                                    ((
                                                                    state ->
                                                                    result)
                                                                    [@closure
                                                                    :(int *
                                                                    nat *
                                                                    address *
                                                                    ((unit ->
                                                                    'x126
                                                                    result)
                                                                    [@closure
                                                                    :nat]) *
                                                                    address *
                                                                    (((address,
                                                                    int) map
                                                                    ->
                                                                    ((address
                                                                    ->
                                                                    ((int ->
                                                                    (address,
                                                                    int) map)
                                                                    [@closure
                                                                    :((int ->
                                                                    ((int ->
                                                                    int)[@closure
                                                                    :int])) *
                                                                    address *
                                                                    (address,
                                                                    int) map)]))
                                                                    [@closure
                                                                    :((int ->
                                                                    ((int ->
                                                                    int)[@closure
                                                                    :int])) *
                                                                    (address,
                                                                    int) map)]))
                                                                    [@closure
                                                                    :int ->
                                                                    ((int ->
                                                                    int)
                                                                    [@closure
                                                                    :int])])
                                                                    *
                                                                    (int ->
                                                                    ((int ->
                                                                    bool)
                                                                    [@closure
                                                                    :int])) *
                                                                    (bool ->
                                                                    ((bool ->
                                                                    bool)
                                                                    [@closure
                                                                    :bool]))
                                                                    *
                                                                    ('k128
                                                                    option ->
                                                                    (('g134
                                                                    ->
                                                                    ('g134,
                                                                    'k128)
                                                                    result)
                                                                    [@closure
                                                                    :'k128
                                                                    option]))
                                                                    *
                                                                    (int ->
                                                                    ((int ->
                                                                    int)
                                                                    [@closure
                                                                    :int])) *
                                                                    address)]))
                                                                   [@closure
                                                                    :(nat *
                                                                    address *
                                                                    ((unit ->
                                                                    'l131
                                                                    result)
                                                                    [@closure
                                                                    :nat]) *
                                                                    address *
                                                                    (((address,
                                                                    int) map
                                                                    ->
                                                                    ((address
                                                                    ->
                                                                    ((int ->
                                                                    (address,
                                                                    int) map)
                                                                    [@closure
                                                                    :((int ->
                                                                    ((int ->
                                                                    int)[@closure
                                                                    :int])) *
                                                                    address *
                                                                    (address,
                                                                    int) map)]))
                                                                    [@closure
                                                                    :((int ->
                                                                    ((int ->
                                                                    int)[@closure
                                                                    :int])) *
                                                                    (address,
                                                                    int) map)]))
                                                                    [@closure
                                                                    :int ->
                                                                    ((int ->
                                                                    int)
                                                                    [@closure
                                                                    :int])])
                                                                    *
                                                                    (int ->
                                                                    ((int ->
                                                                    bool)
                                                                    [@closure
                                                                    :int])) *
                                                                    (bool ->
                                                                    ((bool ->
                                                                    bool)
                                                                    [@closure
                                                                    :bool]))
                                                                    *
                                                                    ('x132
                                                                    option ->
                                                                    (('g127
                                                                    ->
                                                                    ('g127,
                                                                    'x132)
                                                                    result)
                                                                    [@closure
                                                                    :'x132
                                                                    option]))
                                                                    *
                                                                    (int ->
                                                                    ((int ->
                                                                    int)
                                                                    [@closure
                                                                    :int])) *
                                                                    address)]))
                                                               [@closure
                                                                 :(nat *
                                                                    address *
                                                                    ((
                                                                    unit ->
                                                                    'w134
                                                                    result)
                                                                    [@closure
                                                                    :nat]) *
                                                                    address *
                                                                    ((
                                                                    (address,
                                                                    int) map
                                                                    ->
                                                                    ((address
                                                                    ->
                                                                    ((int ->
                                                                    (address,
                                                                    int) map)
                                                                    [@closure
                                                                    :((int ->
                                                                    ((int ->
                                                                    int)[@closure
                                                                    :int])) *
                                                                    address *
                                                                    (address,
                                                                    int) map)]))
                                                                    [@closure
                                                                    :((int ->
                                                                    ((int ->
                                                                    int)[@closure
                                                                    :int])) *
                                                                    (address,
                                                                    int) map)]))
                                                                    [@closure
                                                                    :int ->
                                                                    ((int ->
                                                                    int)
                                                                    [@closure
                                                                    :int])])
                                                                    *
                                                                    (
                                                                    int ->
                                                                    ((int ->
                                                                    bool)
                                                                    [@closure
                                                                    :int])) *
                                                                    (
                                                                    bool ->
                                                                    ((bool ->
                                                                    bool)
                                                                    [@closure
                                                                    :bool]))
                                                                    *
                                                                    (
                                                                    'h135
                                                                    option ->
                                                                    (('m129
                                                                    ->
                                                                    ('h135,
                                                                    'm129)
                                                                    result)
                                                                    [@closure
                                                                    :'h135
                                                                    option]))
                                                                    *
                                                                    (
                                                                    int ->
                                                                    ((int ->
                                                                    int)
                                                                    [@closure
                                                                    :int])))]))
                                                           [@closure
                                                             :(nat * address
                                                                *
                                                                ((unit ->
                                                                    'h133
                                                                    result)
                                                                [@closure
                                                                  :nat])
                                                                *
                                                                (((address,
                                                                    int) map
                                                                    ->
                                                                    ((
                                                                    address
                                                                    ->
                                                                    ((int ->
                                                                    (address,
                                                                    int) map)
                                                                    [@closure
                                                                    :((int ->
                                                                    ((int ->
                                                                    int)[@closure
                                                                    :int])) *
                                                                    address *
                                                                    (address,
                                                                    int) map)]))
                                                                    [@closure
                                                                    :((int ->
                                                                    ((int ->
                                                                    int)[@closure
                                                                    :int])) *
                                                                    (address,
                                                                    int) map)]))
                                                                [@closure
                                                                  :int ->
                                                                    ((
                                                                    int ->
                                                                    int)
                                                                    [@closure
                                                                    :int])])
                                                                *
                                                                (int ->
                                                                   ((
                                                                   int ->
                                                                    bool)
                                                                   [@closure
                                                                    :int]))
                                                                *
                                                                (bool ->
                                                                   ((
                                                                   bool ->
                                                                    bool)
                                                                   [@closure
                                                                    :bool]))
                                                                *
                                                                ('q129 option
                                                                   ->
                                                                   ((
                                                                   'p126 ->
                                                                    ('p126,
                                                                    'q129)
                                                                    result)
                                                                   [@closure
                                                                    :'q129
                                                                    option]))
                                                                *
                                                                (int ->
                                                                   ((
                                                                   int -> 
                                                                    int)
                                                                   [@closure
                                                                    :int])))]))
                                                       [@closure
                                                         :(nat *
                                                            ((unit ->
                                                                'f132 result)
                                                            [@closure :
                                                              nat])
                                                            *
                                                            (((address, 
                                                                int) map ->
                                                                ((address ->
                                                                    ((
                                                                    int ->
                                                                    (address,
                                                                    int) map)
                                                                    [@closure
                                                                    :((int ->
                                                                    ((int ->
                                                                    int)[@closure
                                                                    :int])) *
                                                                    address *
                                                                    (address,
                                                                    int) map)]))
                                                                [@closure
                                                                  :((int ->
                                                                    ((int ->
                                                                    int)
                                                                    [@closure
                                                                    :int])) *
                                                                    (address,
                                                                    int) map)]))
                                                            [@closure
                                                              :int ->
                                                                 ((int -> int)
                                                                 [@closure
                                                                   :int])])
                                                            *
                                                            (int ->
                                                               ((int -> bool)
                                                               [@closure
                                                                 :int]))
                                                            *
                                                            (bool ->
                                                               ((bool -> bool)
                                                               [@closure
                                                                 :bool]))
                                                            *
                                                            ('z129 option ->
                                                               (('s135 ->
                                                                   ('s135,
                                                                    'z129)
                                                                    result)
                                                               [@closure
                                                                 :'z129
                                                                    option]))
                                                            *
                                                            (int ->
                                                               ((int -> int)
                                                               [@closure
                                                                 :int])))]))]))]))
                                         [@closure
                                           :(((timestamp * (address * (dun *
                                                dun))) ->
                                                ((state ->
                                                    ((msg option ->
                                                        'n132 result)
                                                    [@closure
                                                      :((timestamp * (address
                                                         * (dun * dun))) *
                                                         nat * state *
                                                         (address ->
                                                            ((address ->
                                                                ((int ->
                                                                    ((
                                                                    state ->
                                                                    'o133
                                                                    result)
                                                                    [@closure
                                                                    :(int *
                                                                    address *
                                                                    address)]))
                                                                [@closure
                                                                  :(address *
                                                                    address)]))
                                                            [@closure
                                                              :address]))
                                                         *
                                                         ((address ->
                                                             ((address ->
                                                                 ((int ->
                                                                    ((
                                                                    state ->
                                                                    result)
                                                                    [@closure
                                                                    :(int *
                                                                    ((unit ->
                                                                    'f129
                                                                    result)
                                                                    [@closure
                                                                    :nat]) *
                                                                    address *
                                                                    (((address,
                                                                    int) map
                                                                    ->
                                                                    ((address
                                                                    ->
                                                                    ((int ->
                                                                    (address,
                                                                    int) map)
                                                                    [@closure
                                                                    :((int ->
                                                                    ((int ->
                                                                    int)[@closure
                                                                    :int])) *
                                                                    address *
                                                                    (address,
                                                                    int) map)]))
                                                                    [@closure
                                                                    :((int ->
                                                                    ((int ->
                                                                    int)[@closure
                                                                    :int])) *
                                                                    (address,
                                                                    int) map)]))
                                                                    [@closure
                                                                    :int ->
                                                                    ((int ->
                                                                    int)
                                                                    [@closure
                                                                    :int])])
                                                                    *
                                                                    (int ->
                                                                    ((int ->
                                                                    bool)
                                                                    [@closure
                                                                    :int])) *
                                                                    (int ->
                                                                    ((int ->
                                                                    int)
                                                                    [@closure
                                                                    :int])) *
                                                                    address)]))
                                                                 [@closure
                                                                   :(((
                                                                    unit ->
                                                                    'z134
                                                                    result)
                                                                    [@closure
                                                                    :nat]) *
                                                                    address *
                                                                    (((address,
                                                                    int) map
                                                                    ->
                                                                    ((address
                                                                    ->
                                                                    ((int ->
                                                                    (address,
                                                                    int) map)
                                                                    [@closure
                                                                    :((int ->
                                                                    ((int ->
                                                                    int)[@closure
                                                                    :int])) *
                                                                    address *
                                                                    (address,
                                                                    int) map)]))
                                                                    [@closure
                                                                    :((int ->
                                                                    ((int ->
                                                                    int)[@closure
                                                                    :int])) *
                                                                    (address,
                                                                    int) map)]))
                                                                    [@closure
                                                                    :int ->
                                                                    ((int ->
                                                                    int)
                                                                    [@closure
                                                                    :int])])
                                                                    *
                                                                    (int ->
                                                                    ((int ->
                                                                    bool)
                                                                    [@closure
                                                                    :int])) *
                                                                    (int ->
                                                                    ((int ->
                                                                    int)
                                                                    [@closure
                                                                    :int])) *
                                                                    address)]))
                                                             [@closure
                                                               :(((unit ->
                                                                    'm131
                                                                    result)
                                                                  [@closure
                                                                    :
                                                                    nat])
                                                                  * address *
                                                                  (((address,
                                                                    int) map
                                                                    ->
                                                                    ((address
                                                                    ->
                                                                    ((int ->
                                                                    (address,
                                                                    int) map)
                                                                    [@closure
                                                                    :((int ->
                                                                    ((int ->
                                                                    int)[@closure
                                                                    :int])) *
                                                                    address *
                                                                    (address,
                                                                    int) map)]))
                                                                    [@closure
                                                                    :((int ->
                                                                    ((int ->
                                                                    int)[@closure
                                                                    :int])) *
                                                                    (address,
                                                                    int) map)]))
                                                                  [@closure
                                                                    :
                                                                    int ->
                                                                    ((int ->
                                                                    int)
                                                                    [@closure
                                                                    :int])])
                                                                  *
                                                                  (int ->
                                                                    ((
                                                                    int ->
                                                                    bool)
                                                                    [@closure
                                                                    :int]))
                                                                  *
                                                                  (int ->
                                                                    ((
                                                                    int ->
                                                                    int)
                                                                    [@closure
                                                                    :int])))]))
                                                         [@closure
                                                           :(((unit ->
                                                                 'q127 result)
                                                              [@closure :
                                                                nat])
                                                              *
                                                              (((address,
                                                                  int) map ->
                                                                  ((address
                                                                    ->
                                                                    ((int ->
                                                                    (address,
                                                                    int) map)
                                                                    [@closure
                                                                    :((int ->
                                                                    ((int ->
                                                                    int)[@closure
                                                                    :int])) *
                                                                    address *
                                                                    (address,
                                                                    int) map)]))
                                                                  [@closure
                                                                    :
                                                                    ((int ->
                                                                    ((int ->
                                                                    int)[@closure
                                                                    :int])) *
                                                                    (address,
                                                                    int) map)]))
                                                              [@closure
                                                                :int ->
                                                                   ((
                                                                   int -> 
                                                                    int)
                                                                   [@closure
                                                                    :int])])
                                                              *
                                                              (int ->
                                                                 ((int ->
                                                                    bool)
                                                                 [@closure
                                                                   :int]))
                                                              *
                                                              (int ->
                                                                 ((int -> int)
                                                                 [@closure
                                                                   :int])))])
                                                         *
                                                         ((address ->
                                                             ((address ->
                                                                 ((address ->
                                                                    ((
                                                                    int ->
                                                                    ((state
                                                                    -> result)
                                                                    [@closure
                                                                    :(int *
                                                                    nat *
                                                                    address *
                                                                    ((unit ->
                                                                    's128
                                                                    result)
                                                                    [@closure
                                                                    :nat]) *
                                                                    address *
                                                                    (((address,
                                                                    int) map
                                                                    ->
                                                                    ((address
                                                                    ->
                                                                    ((int ->
                                                                    (address,
                                                                    int) map)
                                                                    [@closure
                                                                    :((int ->
                                                                    ((int ->
                                                                    int)[@closure
                                                                    :int])) *
                                                                    address *
                                                                    (address,
                                                                    int) map)]))
                                                                    [@closure
                                                                    :((int ->
                                                                    ((int ->
                                                                    int)[@closure
                                                                    :int])) *
                                                                    (address,
                                                                    int) map)]))
                                                                    [@closure
                                                                    :int ->
                                                                    ((int ->
                                                                    int)
                                                                    [@closure
                                                                    :int])])
                                                                    *
                                                                    (int ->
                                                                    ((int ->
                                                                    bool)
                                                                    [@closure
                                                                    :int])) *
                                                                    (bool ->
                                                                    ((bool ->
                                                                    bool)
                                                                    [@closure
                                                                    :bool]))
                                                                    *
                                                                    ('m126
                                                                    option ->
                                                                    (('m132
                                                                    ->
                                                                    ('m126,
                                                                    'm132)
                                                                    result)
                                                                    [@closure
                                                                    :'m126
                                                                    option]))
                                                                    *
                                                                    (int ->
                                                                    ((int ->
                                                                    int)
                                                                    [@closure
                                                                    :int])) *
                                                                    address)]))
                                                                    [@closure
                                                                    :(nat *
                                                                    address *
                                                                    ((unit ->
                                                                    'k135
                                                                    result)
                                                                    [@closure
                                                                    :nat]) *
                                                                    address *
                                                                    (((address,
                                                                    int) map
                                                                    ->
                                                                    ((address
                                                                    ->
                                                                    ((int ->
                                                                    (address,
                                                                    int) map)
                                                                    [@closure
                                                                    :((int ->
                                                                    ((int ->
                                                                    int)[@closure
                                                                    :int])) *
                                                                    address *
                                                                    (address,
                                                                    int) map)]))
                                                                    [@closure
                                                                    :((int ->
                                                                    ((int ->
                                                                    int)[@closure
                                                                    :int])) *
                                                                    (address,
                                                                    int) map)]))
                                                                    [@closure
                                                                    :int ->
                                                                    ((int ->
                                                                    int)
                                                                    [@closure
                                                                    :int])])
                                                                    *
                                                                    (int ->
                                                                    ((int ->
                                                                    bool)
                                                                    [@closure
                                                                    :int])) *
                                                                    (bool ->
                                                                    ((bool ->
                                                                    bool)
                                                                    [@closure
                                                                    :bool]))
                                                                    *
                                                                    ('e134
                                                                    option ->
                                                                    (('w128
                                                                    ->
                                                                    ('e134,
                                                                    'w128)
                                                                    result)
                                                                    [@closure
                                                                    :'e134
                                                                    option]))
                                                                    *
                                                                    (int ->
                                                                    ((int ->
                                                                    int)
                                                                    [@closure
                                                                    :int])) *
                                                                    address)]))
                                                                 [@closure
                                                                   :(nat *
                                                                    address *
                                                                    ((unit ->
                                                                    'u126
                                                                    result)
                                                                    [@closure
                                                                    :nat]) *
                                                                    address *
                                                                    (((address,
                                                                    int) map
                                                                    ->
                                                                    ((address
                                                                    ->
                                                                    ((int ->
                                                                    (address,
                                                                    int) map)
                                                                    [@closure
                                                                    :((int ->
                                                                    ((int ->
                                                                    int)[@closure
                                                                    :int])) *
                                                                    address *
                                                                    (address,
                                                                    int) map)]))
                                                                    [@closure
                                                                    :((int ->
                                                                    ((int ->
                                                                    int)[@closure
                                                                    :int])) *
                                                                    (address,
                                                                    int) map)]))
                                                                    [@closure
                                                                    :int ->
                                                                    ((int ->
                                                                    int)
                                                                    [@closure
                                                                    :int])])
                                                                    *
                                                                    (int ->
                                                                    ((int ->
                                                                    bool)
                                                                    [@closure
                                                                    :int])) *
                                                                    (bool ->
                                                                    ((bool ->
                                                                    bool)
                                                                    [@closure
                                                                    :bool]))
                                                                    *
                                                                    ('p132
                                                                    option ->
                                                                    (('v132
                                                                    ->
                                                                    ('p132,
                                                                    'v132)
                                                                    result)
                                                                    [@closure
                                                                    :'p132
                                                                    option]))
                                                                    *
                                                                    (int ->
                                                                    ((int ->
                                                                    int)
                                                                    [@closure
                                                                    :int])))]))
                                                             [@closure
                                                               :(nat *
                                                                  address *
                                                                  ((unit ->
                                                                    'p129
                                                                    result)
                                                                  [@closure
                                                                    :
                                                                    nat])
                                                                  *
                                                                  (((address,
                                                                    int) map
                                                                    ->
                                                                    ((address
                                                                    ->
                                                                    ((int ->
                                                                    (address,
                                                                    int) map)
                                                                    [@closure
                                                                    :((int ->
                                                                    ((int ->
                                                                    int)[@closure
                                                                    :int])) *
                                                                    address *
                                                                    (address,
                                                                    int) map)]))
                                                                    [@closure
                                                                    :((int ->
                                                                    ((int ->
                                                                    int)[@closure
                                                                    :int])) *
                                                                    (address,
                                                                    int) map)]))
                                                                  [@closure
                                                                    :
                                                                    int ->
                                                                    ((int ->
                                                                    int)
                                                                    [@closure
                                                                    :int])])
                                                                  *
                                                                  (int ->
                                                                    ((
                                                                    int ->
                                                                    bool)
                                                                    [@closure
                                                                    :int]))
                                                                  *
                                                                  (bool ->
                                                                    ((
                                                                    bool ->
                                                                    bool)
                                                                    [@closure
                                                                    :bool]))
                                                                  *
                                                                  ('g129
                                                                    option ->
                                                                    ((
                                                                    'i134 ->
                                                                    ('g129,
                                                                    'i134)
                                                                    result)
                                                                    [@closure
                                                                    :'g129
                                                                    option]))
                                                                  *
                                                                  (int ->
                                                                    ((
                                                                    int ->
                                                                    int)
                                                                    [@closure
                                                                    :int])))]))
                                                         [@closure
                                                           :(nat *
                                                              ((unit ->
                                                                  'e132
                                                                    result)
                                                              [@closure :
                                                                nat])
                                                              *
                                                              (((address,
                                                                  int) map ->
                                                                  ((address
                                                                    ->
                                                                    ((int ->
                                                                    (address,
                                                                    int) map)
                                                                    [@closure
                                                                    :((int ->
                                                                    ((int ->
                                                                    int)[@closure
                                                                    :int])) *
                                                                    address *
                                                                    (address,
                                                                    int) map)]))
                                                                  [@closure
                                                                    :
                                                                    ((int ->
                                                                    ((int ->
                                                                    int)[@closure
                                                                    :int])) *
                                                                    (address,
                                                                    int) map)]))
                                                              [@closure
                                                                :int ->
                                                                   ((
                                                                   int -> 
                                                                    int)
                                                                   [@closure
                                                                    :int])])
                                                              *
                                                              (int ->
                                                                 ((int ->
                                                                    bool)
                                                                 [@closure
                                                                   :int]))
                                                              *
                                                              (bool ->
                                                                 ((bool ->
                                                                    bool)
                                                                 [@closure
                                                                   :bool]))
                                                              *
                                                              ('p133 option
                                                                 ->
                                                                 (('a128 ->
                                                                    ('a128,
                                                                    'p133)
                                                                    result)
                                                                 [@closure
                                                                   :'p133
                                                                    option]))
                                                              *
                                                              (int ->
                                                                 ((int -> int)
                                                                 [@closure
                                                                   :int])))]))]))
                                                [@closure
                                                  :((timestamp * (address *
                                                     (dun * dun))) * nat *
                                                     (address ->
                                                        ((address ->
                                                            ((int ->
                                                                ((state ->
                                                                    'z133
                                                                    result)
                                                                [@closure
                                                                  :(int *
                                                                    address *
                                                                    address)]))
                                                            [@closure
                                                              :(address *
                                                                 address)]))
                                                        [@closure :address]))
                                                     *
                                                     ((address ->
                                                         ((address ->
                                                             ((int ->
                                                                 ((state ->
                                                                    result)
                                                                 [@closure
                                                                   :(int *
                                                                    ((unit ->
                                                                    'q130
                                                                    result)
                                                                    [@closure
                                                                    :nat]) *
                                                                    address *
                                                                    (((address,
                                                                    int) map
                                                                    ->
                                                                    ((address
                                                                    ->
                                                                    ((int ->
                                                                    (address,
                                                                    int) map)
                                                                    [@closure
                                                                    :((int ->
                                                                    ((int ->
                                                                    int)[@closure
                                                                    :int])) *
                                                                    address *
                                                                    (address,
                                                                    int) map)]))
                                                                    [@closure
                                                                    :((int ->
                                                                    ((int ->
                                                                    int)[@closure
                                                                    :int])) *
                                                                    (address,
                                                                    int) map)]))
                                                                    [@closure
                                                                    :int ->
                                                                    ((int ->
                                                                    int)
                                                                    [@closure
                                                                    :int])])
                                                                    *
                                                                    (int ->
                                                                    ((int ->
                                                                    bool)
                                                                    [@closure
                                                                    :int])) *
                                                                    (int ->
                                                                    ((int ->
                                                                    int)
                                                                    [@closure
                                                                    :int])) *
                                                                    address)]))
                                                             [@closure
                                                               :(((unit ->
                                                                    'l126
                                                                    result)
                                                                  [@closure
                                                                    :
                                                                    nat])
                                                                  * address *
                                                                  (((address,
                                                                    int) map
                                                                    ->
                                                                    ((address
                                                                    ->
                                                                    ((int ->
                                                                    (address,
                                                                    int) map)
                                                                    [@closure
                                                                    :((int ->
                                                                    ((int ->
                                                                    int)[@closure
                                                                    :int])) *
                                                                    address *
                                                                    (address,
                                                                    int) map)]))
                                                                    [@closure
                                                                    :((int ->
                                                                    ((int ->
                                                                    int)[@closure
                                                                    :int])) *
                                                                    (address,
                                                                    int) map)]))
                                                                  [@closure
                                                                    :
                                                                    int ->
                                                                    ((int ->
                                                                    int)
                                                                    [@closure
                                                                    :int])])
                                                                  *
                                                                  (int ->
                                                                    ((
                                                                    int ->
                                                                    bool)
                                                                    [@closure
                                                                    :int]))
                                                                  *
                                                                  (int ->
                                                                    ((
                                                                    int ->
                                                                    int)
                                                                    [@closure
                                                                    :int]))
                                                                  * address)]))
                                                         [@closure
                                                           :(((unit ->
                                                                 'k130 result)
                                                              [@closure :
                                                                nat])
                                                              * address *
                                                              (((address,
                                                                  int) map ->
                                                                  ((address
                                                                    ->
                                                                    ((int ->
                                                                    (address,
                                                                    int) map)
                                                                    [@closure
                                                                    :((int ->
                                                                    ((int ->
                                                                    int)[@closure
                                                                    :int])) *
                                                                    address *
                                                                    (address,
                                                                    int) map)]))
                                                                  [@closure
                                                                    :
                                                                    ((int ->
                                                                    ((int ->
                                                                    int)[@closure
                                                                    :int])) *
                                                                    (address,
                                                                    int) map)]))
                                                              [@closure
                                                                :int ->
                                                                   ((
                                                                   int -> 
                                                                    int)
                                                                   [@closure
                                                                    :int])])
                                                              *
                                                              (int ->
                                                                 ((int ->
                                                                    bool)
                                                                 [@closure
                                                                   :int]))
                                                              *
                                                              (int ->
                                                                 ((int -> int)
                                                                 [@closure
                                                                   :int])))]))
                                                     [@closure
                                                       :(((unit ->
                                                             'i127 result)
                                                          [@closure :
                                                            nat])
                                                          *
                                                          (((address, 
                                                              int) map ->
                                                              ((address ->
                                                                  ((int ->
                                                                    (address,
                                                                    int) map)
                                                                  [@closure
                                                                    :
                                                                    ((int ->
                                                                    ((int ->
                                                                    int)[@closure
                                                                    :int])) *
                                                                    address *
                                                                    (address,
                                                                    int) map)]))
                                                              [@closure
                                                                :((int ->
                                                                    ((
                                                                    int ->
                                                                    int)
                                                                    [@closure
                                                                    :int]))
                                                                   *
                                                                   (address,
                                                                   int) map)]))
                                                          [@closure
                                                            :int ->
                                                               ((int -> int)
                                                               [@closure
                                                                 :int])])
                                                          *
                                                          (int ->
                                                             ((int -> bool)
                                                             [@closure :
                                                               int]))
                                                          *
                                                          (int ->
                                                             ((int -> int)
                                                             [@closure :
                                                               int])))])
                                                     *
                                                     ((address ->
                                                         ((address ->
                                                             ((address ->
                                                                 ((int ->
                                                                    ((
                                                                    state ->
                                                                    result)
                                                                    [@closure
                                                                    :(int *
                                                                    nat *
                                                                    address *
                                                                    ((unit ->
                                                                    'r127
                                                                    result)
                                                                    [@closure
                                                                    :nat]) *
                                                                    address *
                                                                    (((address,
                                                                    int) map
                                                                    ->
                                                                    ((address
                                                                    ->
                                                                    ((int ->
                                                                    (address,
                                                                    int) map)
                                                                    [@closure
                                                                    :((int ->
                                                                    ((int ->
                                                                    int)[@closure
                                                                    :int])) *
                                                                    address *
                                                                    (address,
                                                                    int) map)]))
                                                                    [@closure
                                                                    :((int ->
                                                                    ((int ->
                                                                    int)[@closure
                                                                    :int])) *
                                                                    (address,
                                                                    int) map)]))
                                                                    [@closure
                                                                    :int ->
                                                                    ((int ->
                                                                    int)
                                                                    [@closure
                                                                    :int])])
                                                                    *
                                                                    (int ->
                                                                    ((int ->
                                                                    bool)
                                                                    [@closure
                                                                    :int])) *
                                                                    (bool ->
                                                                    ((bool ->
                                                                    bool)
                                                                    [@closure
                                                                    :bool]))
                                                                    *
                                                                    ('s127
                                                                    option ->
                                                                    (('y132
                                                                    ->
                                                                    ('s127,
                                                                    'y132)
                                                                    result)
                                                                    [@closure
                                                                    :'s127
                                                                    option]))
                                                                    *
                                                                    (int ->
                                                                    ((int ->
                                                                    int)
                                                                    [@closure
                                                                    :int])) *
                                                                    address)]))
                                                                 [@closure
                                                                   :(nat *
                                                                    address *
                                                                    ((unit ->
                                                                    'h130
                                                                    result)
                                                                    [@closure
                                                                    :nat]) *
                                                                    address *
                                                                    (((address,
                                                                    int) map
                                                                    ->
                                                                    ((address
                                                                    ->
                                                                    ((int ->
                                                                    (address,
                                                                    int) map)
                                                                    [@closure
                                                                    :((int ->
                                                                    ((int ->
                                                                    int)[@closure
                                                                    :int])) *
                                                                    address *
                                                                    (address,
                                                                    int) map)]))
                                                                    [@closure
                                                                    :((int ->
                                                                    ((int ->
                                                                    int)[@closure
                                                                    :int])) *
                                                                    (address,
                                                                    int) map)]))
                                                                    [@closure
                                                                    :int ->
                                                                    ((int ->
                                                                    int)
                                                                    [@closure
                                                                    :int])])
                                                                    *
                                                                    (int ->
                                                                    ((int ->
                                                                    bool)
                                                                    [@closure
                                                                    :int])) *
                                                                    (bool ->
                                                                    ((bool ->
                                                                    bool)
                                                                    [@closure
                                                                    :bool]))
                                                                    *
                                                                    ('w131
                                                                    option ->
                                                                    (('r135
                                                                    ->
                                                                    ('r135,
                                                                    'w131)
                                                                    result)
                                                                    [@closure
                                                                    :'w131
                                                                    option]))
                                                                    *
                                                                    (int ->
                                                                    ((int ->
                                                                    int)
                                                                    [@closure
                                                                    :int])) *
                                                                    address)]))
                                                             [@closure
                                                               :(nat *
                                                                  address *
                                                                  ((unit ->
                                                                    'q135
                                                                    result)
                                                                  [@closure
                                                                    :
                                                                    nat])
                                                                  * address *
                                                                  (((address,
                                                                    int) map
                                                                    ->
                                                                    ((address
                                                                    ->
                                                                    ((int ->
                                                                    (address,
                                                                    int) map)
                                                                    [@closure
                                                                    :((int ->
                                                                    ((int ->
                                                                    int)[@closure
                                                                    :int])) *
                                                                    address *
                                                                    (address,
                                                                    int) map)]))
                                                                    [@closure
                                                                    :((int ->
                                                                    ((int ->
                                                                    int)[@closure
                                                                    :int])) *
                                                                    (address,
                                                                    int) map)]))
                                                                  [@closure
                                                                    :
                                                                    int ->
                                                                    ((int ->
                                                                    int)
                                                                    [@closure
                                                                    :int])])
                                                                  *
                                                                  (int ->
                                                                    ((
                                                                    int ->
                                                                    bool)
                                                                    [@closure
                                                                    :int]))
                                                                  *
                                                                  (bool ->
                                                                    ((
                                                                    bool ->
                                                                    bool)
                                                                    [@closure
                                                                    :bool]))
                                                                  *
                                                                  ('f134
                                                                    option ->
                                                                    ((
                                                                    'x129 ->
                                                                    ('f134,
                                                                    'x129)
                                                                    result)
                                                                    [@closure
                                                                    :'f134
                                                                    option]))
                                                                  *
                                                                  (int ->
                                                                    ((
                                                                    int ->
                                                                    int)
                                                                    [@closure
                                                                    :int])))]))
                                                         [@closure
                                                           :(nat * address *
                                                              ((unit ->
                                                                  'r130
                                                                    result)
                                                              [@closure :
                                                                nat])
                                                              *
                                                              (((address,
                                                                  int) map ->
                                                                  ((address
                                                                    ->
                                                                    ((int ->
                                                                    (address,
                                                                    int) map)
                                                                    [@closure
                                                                    :((int ->
                                                                    ((int ->
                                                                    int)[@closure
                                                                    :int])) *
                                                                    address *
                                                                    (address,
                                                                    int) map)]))
                                                                  [@closure
                                                                    :
                                                                    ((int ->
                                                                    ((int ->
                                                                    int)[@closure
                                                                    :int])) *
                                                                    (address,
                                                                    int) map)]))
                                                              [@closure
                                                                :int ->
                                                                   ((
                                                                   int -> 
                                                                    int)
                                                                   [@closure
                                                                    :int])])
                                                              *
                                                              (int ->
                                                                 ((int ->
                                                                    bool)
                                                                 [@closure
                                                                   :int]))
                                                              *
                                                              (bool ->
                                                                 ((bool ->
                                                                    bool)
                                                                 [@closure
                                                                   :bool]))
                                                              *
                                                              ('d132 option
                                                                 ->
                                                                 (('i128 ->
                                                                    ('d132,
                                                                    'i128)
                                                                    result)
                                                                 [@closure
                                                                   :'d132
                                                                    option]))
                                                              *
                                                              (int ->
                                                                 ((int -> int)
                                                                 [@closure
                                                                   :int])))]))
                                                     [@closure
                                                       :(nat *
                                                          ((unit ->
                                                              'n134 result)
                                                          [@closure :
                                                            nat])
                                                          *
                                                          (((address, 
                                                              int) map ->
                                                              ((address ->
                                                                  ((int ->
                                                                    (address,
                                                                    int) map)
                                                                  [@closure
                                                                    :
                                                                    ((int ->
                                                                    ((int ->
                                                                    int)[@closure
                                                                    :int])) *
                                                                    address *
                                                                    (address,
                                                                    int) map)]))
                                                              [@closure
                                                                :((int ->
                                                                    ((
                                                                    int ->
                                                                    int)
                                                                    [@closure
                                                                    :int]))
                                                                   *
                                                                   (address,
                                                                   int) map)]))
                                                          [@closure
                                                            :int ->
                                                               ((int -> int)
                                                               [@closure
                                                                 :int])])
                                                          *
                                                          (int ->
                                                             ((int -> bool)
                                                             [@closure :
                                                               int]))
                                                          *
                                                          (bool ->
                                                             ((bool -> bool)
                                                             [@closure :
                                                               bool]))
                                                          *
                                                          ('v126 option ->
                                                             (('a131 ->
                                                                 ('a131,
                                                                   'v126)
                                                                   result)
                                                             [@closure
                                                               :'v126 option]))
                                                          *
                                                          (int ->
                                                             ((int -> int)
                                                             [@closure :
                                                               int])))]))]))
                                           [@closure
                                             :(nat *
                                                (address ->
                                                   ((address ->
                                                       ((int ->
                                                           ((state ->
                                                               'j128 result)
                                                           [@closure
                                                             :(int * address
                                                                * address)]))
                                                       [@closure
                                                         :(address * address)]))
                                                   [@closure :address]))
                                                *
                                                ((address ->
                                                    ((address ->
                                                        ((int ->
                                                            ((state -> result)
                                                            [@closure
                                                              :(int *
                                                                 ((unit ->
                                                                    'n131
                                                                    result)
                                                                 [@closure
                                                                   :nat])
                                                                 * address *
                                                                 (((address,
                                                                    int) map
                                                                    ->
                                                                    ((
                                                                    address
                                                                    ->
                                                                    ((int ->
                                                                    (address,
                                                                    int) map)
                                                                    [@closure
                                                                    :((int ->
                                                                    ((int ->
                                                                    int)[@closure
                                                                    :int])) *
                                                                    address *
                                                                    (address,
                                                                    int) map)]))
                                                                    [@closure
                                                                    :((int ->
                                                                    ((int ->
                                                                    int)[@closure
                                                                    :int])) *
                                                                    (address,
                                                                    int) map)]))
                                                                 [@closure
                                                                   :int ->
                                                                    ((int ->
                                                                    int)
                                                                    [@closure
                                                                    :int])])
                                                                 *
                                                                 (int ->
                                                                    ((
                                                                    int ->
                                                                    bool)
                                                                    [@closure
                                                                    :int]))
                                                                 *
                                                                 (int ->
                                                                    ((
                                                                    int ->
                                                                    int)
                                                                    [@closure
                                                                    :int]))
                                                                 * address)]))
                                                        [@closure
                                                          :(((unit ->
                                                                'j135 result)
                                                             [@closure :
                                                               nat])
                                                             * address *
                                                             (((address, 
                                                                 int) map ->
                                                                 ((address ->
                                                                    ((
                                                                    int ->
                                                                    (address,
                                                                    int) map)
                                                                    [@closure
                                                                    :((int ->
                                                                    ((int ->
                                                                    int)[@closure
                                                                    :int])) *
                                                                    address *
                                                                    (address,
                                                                    int) map)]))
                                                                 [@closure
                                                                   :((int ->
                                                                    ((int ->
                                                                    int)[@closure
                                                                    :int])) *
                                                                    (address,
                                                                    int) map)]))
                                                             [@closure
                                                               :int ->
                                                                  ((int ->
                                                                    int)
                                                                  [@closure
                                                                    :
                                                                    int])])
                                                             *
                                                             (int ->
                                                                ((int -> bool)
                                                                [@closure
                                                                  :int]))
                                                             *
                                                             (int ->
                                                                ((int -> int)
                                                                [@closure
                                                                  :int]))
                                                             * address)]))
                                                    [@closure
                                                      :(((unit ->
                                                            'y129 result)
                                                         [@closure :nat]) *
                                                         address *
                                                         (((address, 
                                                             int) map ->
                                                             ((address ->
                                                                 ((int ->
                                                                    (address,
                                                                    int) map)
                                                                 [@closure
                                                                   :((int ->
                                                                    ((int ->
                                                                    int)[@closure
                                                                    :int])) *
                                                                    address *
                                                                    (address,
                                                                    int) map)]))
                                                             [@closure
                                                               :((int ->
                                                                    ((
                                                                    int ->
                                                                    int)
                                                                    [@closure
                                                                    :int]))
                                                                  * (
                                                                  address,
                                                                  int) map)]))
                                                         [@closure
                                                           :int ->
                                                              ((int -> int)
                                                              [@closure :
                                                                int])])
                                                         *
                                                         (int ->
                                                            ((int -> bool)
                                                            [@closure :
                                                              int]))
                                                         *
                                                         (int ->
                                                            ((int -> int)
                                                            [@closure :
                                                              int])))]))
                                                [@closure
                                                  :(((unit -> 'x133 result)
                                                     [@closure :nat]) *
                                                     (((address, int) map ->
                                                         ((address ->
                                                             ((int ->
                                                                 (address,
                                                                   int) map)
                                                             [@closure
                                                               :((int ->
                                                                    ((
                                                                    int ->
                                                                    int)
                                                                    [@closure
                                                                    :int]))
                                                                  * address *
                                                                  (address,
                                                                  int) map)]))
                                                         [@closure
                                                           :((int ->
                                                                ((int -> int)
                                                                [@closure
                                                                  :int]))
                                                              * (address,
                                                              int) map)]))
                                                     [@closure
                                                       :int ->
                                                          ((int -> int)
                                                          [@closure :
                                                            int])])
                                                     *
                                                     (int ->
                                                        ((int -> bool)
                                                        [@closure :int]))
                                                     *
                                                     (int ->
                                                        ((int -> int)
                                                        [@closure :int])))])
                                                *
                                                ((address ->
                                                    ((address ->
                                                        ((address ->
                                                            ((int ->
                                                                ((state ->
                                                                    result)
                                                                [@closure
                                                                  :(int * nat
                                                                    * address
                                                                    *
                                                                    ((
                                                                    unit ->
                                                                    't128
                                                                    result)
                                                                    [@closure
                                                                    :nat]) *
                                                                    address *
                                                                    ((
                                                                    (address,
                                                                    int) map
                                                                    ->
                                                                    ((address
                                                                    ->
                                                                    ((int ->
                                                                    (address,
                                                                    int) map)
                                                                    [@closure
                                                                    :((int ->
                                                                    ((int ->
                                                                    int)[@closure
                                                                    :int])) *
                                                                    address *
                                                                    (address,
                                                                    int) map)]))
                                                                    [@closure
                                                                    :((int ->
                                                                    ((int ->
                                                                    int)[@closure
                                                                    :int])) *
                                                                    (address,
                                                                    int) map)]))
                                                                    [@closure
                                                                    :int ->
                                                                    ((int ->
                                                                    int)
                                                                    [@closure
                                                                    :int])])
                                                                    *
                                                                    (int ->
                                                                    ((int ->
                                                                    bool)
                                                                    [@closure
                                                                    :int])) *
                                                                    (bool ->
                                                                    ((bool ->
                                                                    bool)
                                                                    [@closure
                                                                    :bool]))
                                                                    *
                                                                    ('g130
                                                                    option ->
                                                                    (('p135
                                                                    ->
                                                                    ('g130,
                                                                    'p135)
                                                                    result)
                                                                    [@closure
                                                                    :'g130
                                                                    option]))
                                                                    *
                                                                    (int ->
                                                                    ((int ->
                                                                    int)
                                                                    [@closure
                                                                    :int])) *
                                                                    address)]))
                                                            [@closure
                                                              :(nat * address
                                                                 *
                                                                 ((unit ->
                                                                    'u130
                                                                    result)
                                                                 [@closure
                                                                   :nat])
                                                                 * address *
                                                                 (((address,
                                                                    int) map
                                                                    ->
                                                                    ((
                                                                    address
                                                                    ->
                                                                    ((int ->
                                                                    (address,
                                                                    int) map)
                                                                    [@closure
                                                                    :((int ->
                                                                    ((int ->
                                                                    int)[@closure
                                                                    :int])) *
                                                                    address *
                                                                    (address,
                                                                    int) map)]))
                                                                    [@closure
                                                                    :((int ->
                                                                    ((int ->
                                                                    int)[@closure
                                                                    :int])) *
                                                                    (address,
                                                                    int) map)]))
                                                                 [@closure
                                                                   :int ->
                                                                    ((int ->
                                                                    int)
                                                                    [@closure
                                                                    :int])])
                                                                 *
                                                                 (int ->
                                                                    ((
                                                                    int ->
                                                                    bool)
                                                                    [@closure
                                                                    :int]))
                                                                 *
                                                                 (bool ->
                                                                    ((
                                                                    bool ->
                                                                    bool)
                                                                    [@closure
                                                                    :bool]))
                                                                 *
                                                                 ('o134
                                                                    option ->
                                                                    ((
                                                                    'c129 ->
                                                                    ('c129,
                                                                    'o134)
                                                                    result)
                                                                    [@closure
                                                                    :'o134
                                                                    option]))
                                                                 *
                                                                 (int ->
                                                                    ((
                                                                    int ->
                                                                    int)
                                                                    [@closure
                                                                    :int]))
                                                                 * address)]))
                                                        [@closure
                                                          :(nat * address *
                                                             ((unit ->
                                                                 'h127 result)
                                                             [@closure :
                                                               nat])
                                                             * address *
                                                             (((address, 
                                                                 int) map ->
                                                                 ((address ->
                                                                    ((
                                                                    int ->
                                                                    (address,
                                                                    int) map)
                                                                    [@closure
                                                                    :((int ->
                                                                    ((int ->
                                                                    int)[@closure
                                                                    :int])) *
                                                                    address *
                                                                    (address,
                                                                    int) map)]))
                                                                 [@closure
                                                                   :((int ->
                                                                    ((int ->
                                                                    int)[@closure
                                                                    :int])) *
                                                                    (address,
                                                                    int) map)]))
                                                             [@closure
                                                               :int ->
                                                                  ((int ->
                                                                    int)
                                                                  [@closure
                                                                    :
                                                                    int])])
                                                             *
                                                             (int ->
                                                                ((int -> bool)
                                                                [@closure
                                                                  :int]))
                                                             *
                                                             (bool ->
                                                                ((bool ->
                                                                    bool)
                                                                [@closure
                                                                  :bool]))
                                                             *
                                                             ('t135 option ->
                                                                (('d131 ->
                                                                    ('d131,
                                                                    't135)
                                                                    result)
                                                                [@closure
                                                                  :'t135
                                                                    option]))
                                                             *
                                                             (int ->
                                                                ((int -> int)
                                                                [@closure
                                                                  :int])))]))
                                                    [@closure
                                                      :(nat * address *
                                                         ((unit ->
                                                             'i135 result)
                                                         [@closure :nat]) *
                                                         (((address, 
                                                             int) map ->
                                                             ((address ->
                                                                 ((int ->
                                                                    (address,
                                                                    int) map)
                                                                 [@closure
                                                                   :((int ->
                                                                    ((int ->
                                                                    int)[@closure
                                                                    :int])) *
                                                                    address *
                                                                    (address,
                                                                    int) map)]))
                                                             [@closure
                                                               :((int ->
                                                                    ((
                                                                    int ->
                                                                    int)
                                                                    [@closure
                                                                    :int]))
                                                                  * (
                                                                  address,
                                                                  int) map)]))
                                                         [@closure
                                                           :int ->
                                                              ((int -> int)
                                                              [@closure :
                                                                int])])
                                                         *
                                                         (int ->
                                                            ((int -> bool)
                                                            [@closure :
                                                              int]))
                                                         *
                                                         (bool ->
                                                            ((bool -> bool)
                                                            [@closure :
                                                              bool]))
                                                         *
                                                         ('g133 option ->
                                                            (('o129 ->
                                                                ('g133,
                                                                  'o129)
                                                                  result)
                                                            [@closure
                                                              :'g133 option]))
                                                         *
                                                         (int ->
                                                            ((int -> int)
                                                            [@closure :
                                                              int])))]))
                                                [@closure
                                                  :(nat *
                                                     ((unit -> 'w133 result)
                                                     [@closure :nat]) *
                                                     (((address, int) map ->
                                                         ((address ->
                                                             ((int ->
                                                                 (address,
                                                                   int) map)
                                                             [@closure
                                                               :((int ->
                                                                    ((
                                                                    int ->
                                                                    int)
                                                                    [@closure
                                                                    :int]))
                                                                  * address *
                                                                  (address,
                                                                  int) map)]))
                                                         [@closure
                                                           :((int ->
                                                                ((int -> int)
                                                                [@closure
                                                                  :int]))
                                                              * (address,
                                                              int) map)]))
                                                     [@closure
                                                       :int ->
                                                          ((int -> int)
                                                          [@closure :
                                                            int])])
                                                     *
                                                     (int ->
                                                        ((int -> bool)
                                                        [@closure :int]))
                                                     *
                                                     (bool ->
                                                        ((bool -> bool)
                                                        [@closure :bool]))
                                                     *
                                                     ('v131 option ->
                                                        (('z127 ->
                                                            ('v131, 'z127)
                                                              result)
                                                        [@closure
                                                          :'v131 option]))
                                                     *
                                                     (int ->
                                                        ((int -> int)
                                                        [@closure :int])))]))])]))]). Type variables 'a128, 'a130, 'a131, 'a135, 'b128, 'b131, 'c128, 'c129, 'c131, 'd129, 'd131, 'd132, 'e127, 'e129, 'e131, 'e132, 'e133, 'e134, 'f127, 'f129, 'f132, 'f133, 'f134, 'g127, 'g129, 'g130, 'g132, 'g133, 'g134, 'g135, 'h127, 'h130, 'h133, 'h134, 'h135, 'i127, 'i128, 'i130, 'i134, 'i135, 'j128, 'j130, 'j135, 'k128, 'k130, 'k131, 'k135, 'l126, 'l128, 'l131, 'm126, 'm128, 'm129, 'm131, 'm132, 'n126, 'n129, 'n131, 'n132, 'n133, 'n134, 'o126, 'o127, 'o129, 'o131, 'o132, 'o133, 'o134, 'p126, 'p127, 'p129, 'p132, 'p133, 'p134, 'p135, 'q127, 'q129, 'q130, 'q133, 'q134, 'q135, 'r127, 'r130, 'r134, 'r135, 's127, 's128, 's130, 's135, 't128, 't130, 't135, 'u126, 'u128, 'u130, 'u131, 'v126, 'v128, 'v131, 'v132, 'w126, 'w128, 'w129, 'w131, 'w132, 'w133, 'w134, 'x126, 'x129, 'x131, 'x132, 'x133, 'x134, 'y126, 'y127, 'y129, 'y132, 'y133, 'y134, 'z127, 'z129, 'z133, 'z134 were replaced by unit.
./tests/extracted-code/liquidity-extract/tests/liquidity_eip20token.liq:125.56-126.123: Warning: 
Unresolved type ((setup -> 'a136 result)[@closure :(timestamp * (address * (dun * dun)))]). Type variables 'a136 were replaced by unit.
./tests/extracted-code/liquidity-extract/tests/liquidity_eip20token.liq:125.74-126.123: Warning: 
Unresolved type 'a136 result. Type variables 'a136 were replaced by unit.
Storage initializer generated in "tests/extracted-code/liquidity-extract/tests/*.initializer.tz"
File "tests/extracted-code/liquidity-extract/tests/*.tz" generated
You may want to typecheck with:
  dune-client typecheck script tests/extracted-code/liquidity-extract/tests/*.tz
Main contract CounterCertifiedExtraction
./tests/extracted-code/liquidity-extract/tests/CounterCertifiedExtraction.liq: Warning: 
unused variable "powInt"
./tests/extracted-code/liquidity-extract/tests/CounterCertifiedExtraction.liq: Warning: 
unused variable "modInt"
./tests/extracted-code/liquidity-extract/tests/CounterCertifiedExtraction.liq: Warning: 
unused variable "eqInt"
./tests/extracted-code/liquidity-extract/tests/CounterCertifiedExtraction.liq: Warning: 
unused variable "ltInt"
./tests/extracted-code/liquidity-extract/tests/CounterCertifiedExtraction.liq: Warning: 
unused variable "mulInt"
./tests/extracted-code/liquidity-extract/tests/CounterCertifiedExtraction.liq: Warning: 
unused variable "snd"
./tests/extracted-code/liquidity-extract/tests/CounterCertifiedExtraction.liq: Warning: 
unused variable "fst"
./tests/extracted-code/liquidity-extract/tests/CounterCertifiedExtraction.liq:41.65-41.69: Warning: 
unused variable "ctx'"
./tests/extracted-code/liquidity-extract/tests/CounterCertifiedExtraction.liq:2.38-2.43: Warning: 
Unresolved type 'a. Type variables 'a were replaced by unit.
./tests/extracted-code/liquidity-extract/tests/CounterCertifiedExtraction.liq:2.18-2.19: Warning: 
Unresolved type ('a * 'b). Type variables 'a, 'b were replaced by unit.
./tests/extracted-code/liquidity-extract/tests/CounterCertifiedExtraction.liq:3.38-3.43: Warning: 
Unresolved type 'b. Type variables 'b were replaced by unit.
./tests/extracted-code/liquidity-extract/tests/CounterCertifiedExtraction.liq:3.18-3.19: Warning: 
Unresolved type ('a * 'b). Type variables 'a, 'b were replaced by unit.
./tests/extracted-code/liquidity-extract/tests/CounterCertifiedExtraction.liq:49.18-49.94: Warning: 
Unresolved type (((int * key_hash) -> (operation list * (int * key_hash)))[@closure
                                                            :(((msg ->
                                                                  (((int *
                                                                    key_hash)
                                                                    ->
                                                                    'e5
                                                                    result)
                                                                  [@closure
                                                                    :
                                                                    (((
                                                                    (int *
                                                                    key_hash)
                                                                    ->
                                                                    ((int ->
                                                                    (int *
                                                                    key_hash))
                                                                    [@closure
                                                                    :((int *
                                                                    key_hash)
                                                                    *
                                                                    (int ->
                                                                    ((int ->
                                                                    int)
                                                                    [@closure
                                                                    :int])))]))
                                                                    [@closure
                                                                    :int ->
                                                                    ((int ->
                                                                    int)
                                                                    [@closure
                                                                    :int])])
                                                                    * nat *
                                                                    (((int *
                                                                    key_hash)
                                                                    ->
                                                                    ((int ->
                                                                    (int *
                                                                    key_hash))
                                                                    [@closure
                                                                    :((int ->
                                                                    ((int ->
                                                                    int)[@closure
                                                                    :int])) *
                                                                    (int *
                                                                    key_hash))]))
                                                                    [@closure
                                                                    :int ->
                                                                    ((int ->
                                                                    int)
                                                                    [@closure
                                                                    :int])])
                                                                    *
                                                                    (int ->
                                                                    ((int ->
                                                                    bool)
                                                                    [@closure
                                                                    :int])) *
                                                                    msg)]))
                                                               [@closure
                                                                 :(((
                                                                    (int *
                                                                    key_hash)
                                                                    ->
                                                                    ((int ->
                                                                    (int *
                                                                    key_hash))
                                                                    [@closure
                                                                    :((int *
                                                                    key_hash)
                                                                    *
                                                                    (int ->
                                                                    ((int ->
                                                                    int)
                                                                    [@closure
                                                                    :int])))]))
                                                                    [@closure
                                                                    :int ->
                                                                    ((int ->
                                                                    int)
                                                                    [@closure
                                                                    :int])])
                                                                    * nat *
                                                                    ((
                                                                    (int *
                                                                    key_hash)
                                                                    ->
                                                                    ((int ->
                                                                    (int *
                                                                    key_hash))
                                                                    [@closure
                                                                    :((int ->
                                                                    ((int ->
                                                                    int)[@closure
                                                                    :int])) *
                                                                    (int *
                                                                    key_hash))]))
                                                                    [@closure
                                                                    :int ->
                                                                    ((int ->
                                                                    int)
                                                                    [@closure
                                                                    :int])])
                                                                    *
                                                                    (
                                                                    int ->
                                                                    ((int ->
                                                                    bool)
                                                                    [@closure
                                                                    :int])))])
                                                               * msg)]). Type variables 'e5 were replaced by unit.
./tests/extracted-code/liquidity-extract/tests/CounterCertifiedExtraction.liq:41.32-42.10: Warning: 
Unresolved type (((int * key_hash) -> 'm5 result)[@closure
                                   :(timestamp * (address * (dun * dun)))]). Type variables 'm5 were replaced by unit.
./tests/extracted-code/liquidity-extract/tests/CounterCertifiedExtraction.liq:41.61-42.10: Warning: 
Unresolved type 'm5 result. Type variables 'm5 were replaced by unit.
Storage initializer generated in "tests/extracted-code/liquidity-extract/tests/CounterCertifiedExtraction.initializer.tz"
File "tests/extracted-code/liquidity-extract/tests/CounterCertifiedExtraction.tz" generated
You may want to typecheck with:
  dune-client typecheck script tests/extracted-code/liquidity-extract/tests/CounterCertifiedExtraction.tz
Main contract CounterDepCertifiedExtraction
./tests/extracted-code/liquidity-extract/tests/CounterDepCertifiedExtraction.liq: Warning: 
unused variable "powInt"
./tests/extracted-code/liquidity-extract/tests/CounterDepCertifiedExtraction.liq: Warning: 
unused variable "modInt"
./tests/extracted-code/liquidity-extract/tests/CounterDepCertifiedExtraction.liq: Warning: 
unused variable "eqInt"
./tests/extracted-code/liquidity-extract/tests/CounterDepCertifiedExtraction.liq: Warning: 
unused variable "ltInt"
./tests/extracted-code/liquidity-extract/tests/CounterDepCertifiedExtraction.liq: Warning: 
unused variable "mulInt"
./tests/extracted-code/liquidity-extract/tests/CounterDepCertifiedExtraction.liq: Warning: 
unused variable "snd"
./tests/extracted-code/liquidity-extract/tests/CounterDepCertifiedExtraction.liq: Warning: 
unused variable "fst"
./tests/extracted-code/liquidity-extract/tests/CounterDepCertifiedExtraction.liq:52.69-52.73: Warning: 
unused variable "ctx'"
./tests/extracted-code/liquidity-extract/tests/CounterDepCertifiedExtraction.liq:2.38-2.43: Warning: 
Unresolved type 'a. Type variables 'a were replaced by unit.
./tests/extracted-code/liquidity-extract/tests/CounterDepCertifiedExtraction.liq:2.18-2.19: Warning: 
Unresolved type ('a * 'b). Type variables 'a, 'b were replaced by unit.
./tests/extracted-code/liquidity-extract/tests/CounterDepCertifiedExtraction.liq:3.38-3.43: Warning: 
Unresolved type 'b. Type variables 'b were replaced by unit.
./tests/extracted-code/liquidity-extract/tests/CounterDepCertifiedExtraction.liq:3.18-3.19: Warning: 
Unresolved type ('a * 'b). Type variables 'a, 'b were replaced by unit.
./tests/extracted-code/liquidity-extract/tests/CounterDepCertifiedExtraction.liq:60.18-60.98: Warning: 
Unresolved type (((int * key_hash) -> (operation list * (int * key_hash)))[@closure
                                                            :(((coq_msg ->
                                                                  (((int *
                                                                    key_hash)
                                                                    ->
                                                                    'm5
                                                                    result)
                                                                  [@closure
                                                                    :
                                                                    (((
                                                                    (int *
                                                                    key_hash)
                                                                    ->
                                                                    ((int ->
                                                                    (int *
                                                                    key_hash))
                                                                    [@closure
                                                                    :((int *
                                                                    key_hash)
                                                                    *
                                                                    (int ->
                                                                    ((int ->
                                                                    int)
                                                                    [@closure
                                                                    :int])))]))
                                                                    [@closure
                                                                    :int ->
                                                                    ((int ->
                                                                    int)
                                                                    [@closure
                                                                    :int])])
                                                                    * nat *
                                                                    (((int *
                                                                    key_hash)
                                                                    ->
                                                                    ((int ->
                                                                    (int *
                                                                    key_hash))
                                                                    [@closure
                                                                    :((int ->
                                                                    ((int ->
                                                                    int)[@closure
                                                                    :int])) *
                                                                    (int *
                                                                    key_hash))]))
                                                                    [@closure
                                                                    :int ->
                                                                    ((int ->
                                                                    int)
                                                                    [@closure
                                                                    :int])])
                                                                    *
                                                                    (bool ->
                                                                    ((bool ->
                                                                    coq_sumbool)
                                                                    [@closure
                                                                    :bool]))
                                                                    *
                                                                    (int ->
                                                                    ((int ->
                                                                    bool)
                                                                    [@closure
                                                                    :int])) *
                                                                    coq_msg)]))
                                                               [@closure
                                                                 :(((
                                                                    (int *
                                                                    key_hash)
                                                                    ->
                                                                    ((int ->
                                                                    (int *
                                                                    key_hash))
                                                                    [@closure
                                                                    :((int *
                                                                    key_hash)
                                                                    *
                                                                    (int ->
                                                                    ((int ->
                                                                    int)
                                                                    [@closure
                                                                    :int])))]))
                                                                    [@closure
                                                                    :int ->
                                                                    ((int ->
                                                                    int)
                                                                    [@closure
                                                                    :int])])
                                                                    * nat *
                                                                    ((
                                                                    (int *
                                                                    key_hash)
                                                                    ->
                                                                    ((int ->
                                                                    (int *
                                                                    key_hash))
                                                                    [@closure
                                                                    :((int ->
                                                                    ((int ->
                                                                    int)[@closure
                                                                    :int])) *
                                                                    (int *
                                                                    key_hash))]))
                                                                    [@closure
                                                                    :int ->
                                                                    ((int ->
                                                                    int)
                                                                    [@closure
                                                                    :int])])
                                                                    *
                                                                    (
                                                                    bool ->
                                                                    ((bool ->
                                                                    coq_sumbool)
                                                                    [@closure
                                                                    :bool]))
                                                                    *
                                                                    (
                                                                    int ->
                                                                    ((int ->
                                                                    bool)
                                                                    [@closure
                                                                    :int])))])
                                                               * coq_msg)]). Type variables 'm5 were replaced by unit.
./tests/extracted-code/liquidity-extract/tests/CounterDepCertifiedExtraction.liq:52.36-53.10: Warning: 
Unresolved type (((int * key_hash) -> 'u5 result)[@closure
                                   :(timestamp * (address * (dun * dun)))]). Type variables 'u5 were replaced by unit.
./tests/extracted-code/liquidity-extract/tests/CounterDepCertifiedExtraction.liq:52.65-53.10: Warning: 
Unresolved type 'u5 result. Type variables 'u5 were replaced by unit.
Storage initializer generated in "tests/extracted-code/liquidity-extract/tests/CounterDepCertifiedExtraction.initializer.tz"
File "tests/extracted-code/liquidity-extract/tests/CounterDepCertifiedExtraction.tz" generated
You may want to typecheck with:
  dune-client typecheck script tests/extracted-code/liquidity-extract/tests/CounterDepCertifiedExtraction.tz
Main contract CounterSubsetTypes
./tests/extracted-code/liquidity-extract/tests/CounterSubsetTypes.liq: Warning: 
unused variable "exist_"
./tests/extracted-code/liquidity-extract/tests/CounterSubsetTypes.liq: Warning: 
unused variable "powInt"
./tests/extracted-code/liquidity-extract/tests/CounterSubsetTypes.liq: Warning: 
unused variable "modInt"
./tests/extracted-code/liquidity-extract/tests/CounterSubsetTypes.liq: Warning: 
unused variable "eqInt"
./tests/extracted-code/liquidity-extract/tests/CounterSubsetTypes.liq: Warning: 
unused variable "leInt"
./tests/extracted-code/liquidity-extract/tests/CounterSubsetTypes.liq: Warning: 
unused variable "mulInt"
./tests/extracted-code/liquidity-extract/tests/CounterSubsetTypes.liq: Warning: 
unused variable "snd"
./tests/extracted-code/liquidity-extract/tests/CounterSubsetTypes.liq: Warning: 
unused variable "fst"
./tests/extracted-code/liquidity-extract/tests/CounterSubsetTypes.liq:54.56-54.60: Warning: 
unused variable "ctx_"
./tests/extracted-code/liquidity-extract/tests/CounterSubsetTypes.liq:2.38-2.43: Warning: 
Unresolved type 'a. Type variables 'a were replaced by unit.
./tests/extracted-code/liquidity-extract/tests/CounterSubsetTypes.liq:2.18-2.19: Warning: 
Unresolved type ('a * 'b). Type variables 'a, 'b were replaced by unit.
./tests/extracted-code/liquidity-extract/tests/CounterSubsetTypes.liq:3.38-3.43: Warning: 
Unresolved type 'b. Type variables 'b were replaced by unit.
./tests/extracted-code/liquidity-extract/tests/CounterSubsetTypes.liq:3.18-3.19: Warning: 
Unresolved type ('a * 'b). Type variables 'a, 'b were replaced by unit.
./tests/extracted-code/liquidity-extract/tests/CounterSubsetTypes.liq:16.15-16.16: Warning: 
Unresolved type 'o1. Type variables 'o1 were replaced by unit.
./tests/extracted-code/liquidity-extract/tests/CounterSubsetTypes.liq:16.11-16.12: Warning: 
Unresolved type 'o1. Type variables 'o1 were replaced by unit.
./tests/extracted-code/liquidity-extract/tests/CounterSubsetTypes.liq:62.18-62.98: Warning: 
Unresolved type ((int -> (operation list * int))[@closure
                                  :(((coq_msg ->
                                        ((int -> 'w5 result)[@closure
                                                              :((bool ->
                                                                   ((
                                                                   bool ->
                                                                    coq_sumbool)
                                                                   [@closure
                                                                    :bool]))
                                                                 *
                                                                 ((int ->
                                                                    ((
                                                                    int ->
                                                                    int)
                                                                    [@closure
                                                                    :(int *
                                                                    (int ->
                                                                    ((int ->
                                                                    int)
                                                                    [@closure
                                                                    :int])))]))
                                                                 [@closure
                                                                   :int ->
                                                                    ((int ->
                                                                    int)
                                                                    [@closure
                                                                    :int])])
                                                                 * nat *
                                                                 ((int ->
                                                                    ((
                                                                    int ->
                                                                    int)
                                                                    [@closure
                                                                    :((int ->
                                                                    ((int ->
                                                                    int)[@closure
                                                                    :int])) *
                                                                    int)]))
                                                                 [@closure
                                                                   :int ->
                                                                    ((int ->
                                                                    int)
                                                                    [@closure
                                                                    :int])])
                                                                 *
                                                                 (int ->
                                                                    ((
                                                                    int ->
                                                                    bool)
                                                                    [@closure
                                                                    :int]))
                                                                 * coq_msg)]))
                                     [@closure
                                       :((bool ->
                                            ((bool -> coq_sumbool)[@closure
                                                                    :
                                                                    bool]))
                                          *
                                          ((int ->
                                              ((int -> int)[@closure
                                                             :(int *
                                                                (int ->
                                                                   ((
                                                                   int -> 
                                                                    int)
                                                                   [@closure
                                                                    :int])))]))
                                          [@closure
                                            :int ->
                                               ((int -> int)[@closure :int])])
                                          * nat *
                                          ((int ->
                                              ((int -> int)[@closure
                                                             :((int ->
                                                                  ((int ->
                                                                    int)
                                                                  [@closure
                                                                    :
                                                                    int]))
                                                                * int)]))
                                          [@closure
                                            :int ->
                                               ((int -> int)[@closure :int])])
                                          *
                                          (int ->
                                             ((int -> bool)[@closure :int])))])
                                     * coq_msg)]). Type variables 'w5 were replaced by unit.
./tests/extracted-code/liquidity-extract/tests/CounterSubsetTypes.liq:54.36-55.10: Warning: 
Unresolved type ((int -> 'e6 result)[@closure :(timestamp * (address * (dun * dun)))]). Type variables 'e6 were replaced by unit.
./tests/extracted-code/liquidity-extract/tests/CounterSubsetTypes.liq:54.52-55.10: Warning: 
Unresolved type 'e6 result. Type variables 'e6 were replaced by unit.
Storage initializer generated in "tests/extracted-code/liquidity-extract/tests/CounterSubsetTypes.initializer.tz"
File "tests/extracted-code/liquidity-extract/tests/CounterSubsetTypes.tz" generated
You may want to typecheck with:
  dune-client typecheck script tests/extracted-code/liquidity-extract/tests/CounterSubsetTypes.tz
Main contract CrowdfundingCertifiedExtraction
./tests/extracted-code/liquidity-extract/tests/CrowdfundingCertifiedExtraction.liq: Warning: 
unused variable "eqb_time"
./tests/extracted-code/liquidity-extract/tests/CrowdfundingCertifiedExtraction.liq: Warning: 
unused variable "orb"
./tests/extracted-code/liquidity-extract/tests/CrowdfundingCertifiedExtraction.liq: Warning: 
unused variable "eqNat"
./tests/extracted-code/liquidity-extract/tests/CrowdfundingCertifiedExtraction.liq: Warning: 
unused variable "lxorNat"
./tests/extracted-code/liquidity-extract/tests/CrowdfundingCertifiedExtraction.liq: Warning: 
unused variable "ltNat"
./tests/extracted-code/liquidity-extract/tests/CrowdfundingCertifiedExtraction.liq: Warning: 
unused variable "leNat"
./tests/extracted-code/liquidity-extract/tests/CrowdfundingCertifiedExtraction.liq: Warning: 
unused variable "subNat"
./tests/extracted-code/liquidity-extract/tests/CrowdfundingCertifiedExtraction.liq: Warning: 
unused variable "mulNat"
./tests/extracted-code/liquidity-extract/tests/CrowdfundingCertifiedExtraction.liq: Warning: 
unused variable "addNat"
./tests/extracted-code/liquidity-extract/tests/CrowdfundingCertifiedExtraction.liq: Warning: 
unused variable "multTez"
./tests/extracted-code/liquidity-extract/tests/CrowdfundingCertifiedExtraction.liq: Warning: 
unused variable "divTez"
./tests/extracted-code/liquidity-extract/tests/CrowdfundingCertifiedExtraction.liq: Warning: 
unused variable "evenTez"
./tests/extracted-code/liquidity-extract/tests/CrowdfundingCertifiedExtraction.liq: Warning: 
unused variable "gtTez"
./tests/extracted-code/liquidity-extract/tests/CrowdfundingCertifiedExtraction.liq: Warning: 
unused variable "subTez"
./tests/extracted-code/liquidity-extract/tests/CrowdfundingCertifiedExtraction.liq: Warning: 
unused variable "powInt"
./tests/extracted-code/liquidity-extract/tests/CrowdfundingCertifiedExtraction.liq: Warning: 
unused variable "modInt"
./tests/extracted-code/liquidity-extract/tests/CrowdfundingCertifiedExtraction.liq: Warning: 
unused variable "eqInt"
./tests/extracted-code/liquidity-extract/tests/CrowdfundingCertifiedExtraction.liq: Warning: 
unused variable "ltInt"
./tests/extracted-code/liquidity-extract/tests/CrowdfundingCertifiedExtraction.liq: Warning: 
unused variable "leInt"
./tests/extracted-code/liquidity-extract/tests/CrowdfundingCertifiedExtraction.liq: Warning: 
unused variable "subInt"
./tests/extracted-code/liquidity-extract/tests/CrowdfundingCertifiedExtraction.liq: Warning: 
unused variable "mulInt"
./tests/extracted-code/liquidity-extract/tests/CrowdfundingCertifiedExtraction.liq: Warning: 
unused variable "addInt"
./tests/extracted-code/liquidity-extract/tests/CrowdfundingCertifiedExtraction.liq: Warning: 
unused variable "snd"
./tests/extracted-code/liquidity-extract/tests/CrowdfundingCertifiedExtraction.liq: Warning: 
unused variable "fst"
./tests/extracted-code/liquidity-extract/tests/CrowdfundingCertifiedExtraction.liq:92.4-92.7: Warning: 
unused variable "snd"
./tests/extracted-code/liquidity-extract/tests/CrowdfundingCertifiedExtraction.liq:91.63-91.66: Warning: 
unused variable "fst"
./tests/extracted-code/liquidity-extract/tests/CrowdfundingCertifiedExtraction.liq:2.38-2.43: Warning: 
Unresolved type 'a. Type variables 'a were replaced by unit.
./tests/extracted-code/liquidity-extract/tests/CrowdfundingCertifiedExtraction.liq:2.18-2.19: Warning: 
Unresolved type ('a * 'b). Type variables 'a, 'b were replaced by unit.
./tests/extracted-code/liquidity-extract/tests/CrowdfundingCertifiedExtraction.liq:3.38-3.43: Warning: 
Unresolved type 'b. Type variables 'b were replaced by unit.
./tests/extracted-code/liquidity-extract/tests/CrowdfundingCertifiedExtraction.liq:3.18-3.19: Warning: 
Unresolved type ('a * 'b). Type variables 'a, 'b were replaced by unit.
./tests/extracted-code/liquidity-extract/tests/CrowdfundingCertifiedExtraction.liq:92.29-92.34: Warning: 
Unresolved type 'b. Type variables 'b were replaced by unit.
./tests/extracted-code/liquidity-extract/tests/CrowdfundingCertifiedExtraction.liq:92.9-92.10: Warning: 
Unresolved type ('a * 'b). Type variables 'a, 'b were replaced by unit.
./tests/extracted-code/liquidity-extract/tests/CrowdfundingCertifiedExtraction.liq:91.88-91.93: Warning: 
Unresolved type 'a. Type variables 'a were replaced by unit.
./tests/extracted-code/liquidity-extract/tests/CrowdfundingCertifiedExtraction.liq:91.68-91.69: Warning: 
Unresolved type ('a * 'b). Type variables 'a, 'b were replaced by unit.
Storage initializer generated in "tests/extracted-code/liquidity-extract/tests/CrowdfundingCertifiedExtraction.initializer.tz"
File "tests/extracted-code/liquidity-extract/tests/CrowdfundingCertifiedExtraction.tz" generated
You may want to typecheck with:
  dune-client typecheck script tests/extracted-code/liquidity-extract/tests/CrowdfundingCertifiedExtraction.tz
Main contract StackInterpreter
./tests/extracted-code/liquidity-extract/tests/StackInterpreter.liq:74.16-76.38: Warning: 
unused variable "z0"
./tests/extracted-code/liquidity-extract/tests/StackInterpreter.liq:82.15-88.78: Warning: 
unused variable "b0"
./tests/extracted-code/liquidity-extract/tests/StackInterpreter.liq:86.17-88.76: Warning: 
unused variable "b0"
./tests/extracted-code/liquidity-extract/tests/StackInterpreter.liq:91.15-97.78: Warning: 
unused variable "b0"
./tests/extracted-code/liquidity-extract/tests/StackInterpreter.liq:95.17-97.76: Warning: 
unused variable "b0"
./tests/extracted-code/liquidity-extract/tests/StackInterpreter.liq:100.15-106.78: Warning: 
unused variable "b0"
./tests/extracted-code/liquidity-extract/tests/StackInterpreter.liq:104.17-106.76: Warning: 
unused variable "b0"
./tests/extracted-code/liquidity-extract/tests/StackInterpreter.liq:109.15-115.77: Warning: 
unused variable "b0"
./tests/extracted-code/liquidity-extract/tests/StackInterpreter.liq:113.17-115.75: Warning: 
unused variable "b0"
./tests/extracted-code/liquidity-extract/tests/StackInterpreter.liq:118.15-124.77: Warning: 
unused variable "b0"
./tests/extracted-code/liquidity-extract/tests/StackInterpreter.liq:122.17-124.75: Warning: 
unused variable "b0"
./tests/extracted-code/liquidity-extract/tests/StackInterpreter.liq:127.15-133.77: Warning: 
unused variable "b0"
./tests/extracted-code/liquidity-extract/tests/StackInterpreter.liq:131.17-133.75: Warning: 
unused variable "b0"
./tests/extracted-code/liquidity-extract/tests/StackInterpreter.liq:136.45-136.47: Warning: 
unused variable "s0"
./tests/extracted-code/liquidity-extract/tests/StackInterpreter.liq: Warning: 
unused variable "orb"
./tests/extracted-code/liquidity-extract/tests/StackInterpreter.liq: Warning: 
unused variable "andb"
./tests/extracted-code/liquidity-extract/tests/StackInterpreter.liq: Warning: 
unused variable "powInt"
./tests/extracted-code/liquidity-extract/tests/StackInterpreter.liq: Warning: 
unused variable "modInt"
./tests/extracted-code/liquidity-extract/tests/StackInterpreter.liq: Warning: 
unused variable "snd"
./tests/extracted-code/liquidity-extract/tests/StackInterpreter.liq: Warning: 
unused variable "fst"
./tests/extracted-code/liquidity-extract/tests/StackInterpreter.liq:143.4-143.10: Warning: 
unused variable "setup0"
./tests/extracted-code/liquidity-extract/tests/StackInterpreter.liq:142.53-142.57: Warning: 
unused variable "ctx0"
./tests/extracted-code/liquidity-extract/tests/StackInterpreter.liq:2.38-2.43: Warning: 
Unresolved type 'a. Type variables 'a were replaced by unit.
./tests/extracted-code/liquidity-extract/tests/StackInterpreter.liq:2.18-2.19: Warning: 
Unresolved type ('a * 'b). Type variables 'a, 'b were replaced by unit.
./tests/extracted-code/liquidity-extract/tests/StackInterpreter.liq:3.38-3.43: Warning: 
Unresolved type 'b. Type variables 'b were replaced by unit.
./tests/extracted-code/liquidity-extract/tests/StackInterpreter.liq:3.18-3.19: Warning: 
Unresolved type ('a * 'b). Type variables 'a, 'b were replaced by unit.
./tests/extracted-code/liquidity-extract/tests/StackInterpreter.liq:151.18-151.94: Warning: 
Unresolved type ((value list -> (operation list * value list))[@closure
                                                :((instruction list *
                                                   ((string * int), value)
                                                   map) *
                                                   (((instruction list *
                                                       ((string * int),
                                                       value) map) ->
                                                       ((value list ->
                                                           'h19 result)
                                                       [@closure
                                                         :(((((string * int),
                                                               value) map ->
                                                               ((instruction
                                                                   list ->
                                                                   ((
                                                                   value list
                                                                    ->
                                                                    ((
                                                                    int ->
                                                                    result)
                                                                    [@closure
                                                                    :(((string
                                                                    * int),
                                                                    value)
                                                                    map *
                                                                    instruction
                                                                    list *
                                                                    (((((string
                                                                    * int),
                                                                    value)
                                                                    map *
                                                                    instruction
                                                                    list *
                                                                    value
                                                                    list *
                                                                    int) ->
                                                                    result)
                                                                    [@closure
                                                                    :((int ->
                                                                    ((int ->
                                                                    int)[@closure
                                                                    :int])) *
                                                                    (bool ->
                                                                    int) *
                                                                    ((int ->
                                                                    bool)
                                                                    [@closure
                                                                    :int ->
                                                                    ((int ->
                                                                    bool)
                                                                    [@closure
                                                                    :int])])
                                                                    * nat *
                                                                    (int ->
                                                                    ((int ->
                                                                    bool)
                                                                    [@closure
                                                                    :int])) *
                                                                    ((int ->
                                                                    int)
                                                                    [@closure
                                                                    :int ->
                                                                    ((int ->
                                                                    bool)
                                                                    [@closure
                                                                    :int])])
                                                                    *
                                                                    (int ->
                                                                    ((int ->
                                                                    bool)
                                                                    [@closure
                                                                    :int])) *
                                                                    (int ->
                                                                    ((int ->
                                                                    bool)
                                                                    [@closure
                                                                    :int])) *
                                                                    (int ->
                                                                    ((int ->
                                                                    int)
                                                                    [@closure
                                                                    :int])) *
                                                                    ((int ->
                                                                    int)
                                                                    [@closure
                                                                    :((int ->
                                                                    ((int ->
                                                                    bool)[@closure
                                                                    :int])) *
                                                                    (int ->
                                                                    ((int ->
                                                                    int)
                                                                    [@closure
                                                                    :int])))])
                                                                    *
                                                                    (int ->
                                                                    ((int ->
                                                                    int)
                                                                    [@closure
                                                                    :int])))])
                                                                    * value
                                                                    list)]))
                                                                   [@closure
                                                                    :(((string
                                                                    * int),
                                                                    value)
                                                                    map *
                                                                    instruction
                                                                    list *
                                                                    (((((string
                                                                    * int),
                                                                    value)
                                                                    map *
                                                                    instruction
                                                                    list *
                                                                    value
                                                                    list *
                                                                    int) ->
                                                                    result)
                                                                    [@closure
                                                                    :((int ->
                                                                    ((int ->
                                                                    int)[@closure
                                                                    :int])) *
                                                                    (bool ->
                                                                    int) *
                                                                    ((int ->
                                                                    bool)
                                                                    [@closure
                                                                    :int ->
                                                                    ((int ->
                                                                    bool)
                                                                    [@closure
                                                                    :int])])
                                                                    * nat *
                                                                    (int ->
                                                                    ((int ->
                                                                    bool)
                                                                    [@closure
                                                                    :int])) *
                                                                    ((int ->
                                                                    int)
                                                                    [@closure
                                                                    :int ->
                                                                    ((int ->
                                                                    bool)
                                                                    [@closure
                                                                    :int])])
                                                                    *
                                                                    (int ->
                                                                    ((int ->
                                                                    bool)
                                                                    [@closure
                                                                    :int])) *
                                                                    (int ->
                                                                    ((int ->
                                                                    bool)
                                                                    [@closure
                                                                    :int])) *
                                                                    (int ->
                                                                    ((int ->
                                                                    int)
                                                                    [@closure
                                                                    :int])) *
                                                                    ((int ->
                                                                    int)
                                                                    [@closure
                                                                    :((int ->
                                                                    ((int ->
                                                                    bool)[@closure
                                                                    :int])) *
                                                                    (int ->
                                                                    ((int ->
                                                                    int)
                                                                    [@closure
                                                                    :int])))])
                                                                    *
                                                                    (int ->
                                                                    ((int ->
                                                                    int)
                                                                    [@closure
                                                                    :int])))]))]))
                                                               [@closure
                                                                 :(((string *
                                                                    int),
                                                                    value)
                                                                    map *
                                                                    ((
                                                                    (((string
                                                                    * int),
                                                                    value)
                                                                    map *
                                                                    instruction
                                                                    list *
                                                                    value
                                                                    list *
                                                                    int) ->
                                                                    result)
                                                                    [@closure
                                                                    :((int ->
                                                                    ((int ->
                                                                    int)[@closure
                                                                    :int])) *
                                                                    (bool ->
                                                                    int) *
                                                                    ((int ->
                                                                    bool)
                                                                    [@closure
                                                                    :int ->
                                                                    ((int ->
                                                                    bool)
                                                                    [@closure
                                                                    :int])])
                                                                    * nat *
                                                                    (int ->
                                                                    ((int ->
                                                                    bool)
                                                                    [@closure
                                                                    :int])) *
                                                                    ((int ->
                                                                    int)
                                                                    [@closure
                                                                    :int ->
                                                                    ((int ->
                                                                    bool)
                                                                    [@closure
                                                                    :int])])
                                                                    *
                                                                    (int ->
                                                                    ((int ->
                                                                    bool)
                                                                    [@closure
                                                                    :int])) *
                                                                    (int ->
                                                                    ((int ->
                                                                    bool)
                                                                    [@closure
                                                                    :int])) *
                                                                    (int ->
                                                                    ((int ->
                                                                    int)
                                                                    [@closure
                                                                    :int])) *
                                                                    ((int ->
                                                                    int)
                                                                    [@closure
                                                                    :((int ->
                                                                    ((int ->
                                                                    bool)[@closure
                                                                    :int])) *
                                                                    (int ->
                                                                    ((int ->
                                                                    int)
                                                                    [@closure
                                                                    :int])))])
                                                                    *
                                                                    (int ->
                                                                    ((int ->
                                                                    int)
                                                                    [@closure
                                                                    :int])))]))]))
                                                            [@closure
                                                              :(((((string *
                                                                    int),
                                                                   value) map
                                                                   *
                                                                   instruction
                                                                   list *
                                                                   value list
                                                                   * int) ->
                                                                   result)
                                                              [@closure
                                                                :((int ->
                                                                    ((
                                                                    int ->
                                                                    int)
                                                                    [@closure
                                                                    :int]))
                                                                   *
                                                                   (bool ->
                                                                    int)
                                                                   *
                                                                   ((
                                                                   int ->
                                                                    bool)
                                                                   [@closure
                                                                    :int ->
                                                                    ((int ->
                                                                    bool)
                                                                    [@closure
                                                                    :int])])
                                                                   * nat *
                                                                   (int ->
                                                                    ((int ->
                                                                    bool)
                                                                    [@closure
                                                                    :int]))
                                                                   *
                                                                   ((
                                                                   int -> 
                                                                    int)
                                                                   [@closure
                                                                    :int ->
                                                                    ((int ->
                                                                    bool)
                                                                    [@closure
                                                                    :int])])
                                                                   *
                                                                   (int ->
                                                                    ((int ->
                                                                    bool)
                                                                    [@closure
                                                                    :int]))
                                                                   *
                                                                   (int ->
                                                                    ((int ->
                                                                    bool)
                                                                    [@closure
                                                                    :int]))
                                                                   *
                                                                   (int ->
                                                                    ((int ->
                                                                    int)
                                                                    [@closure
                                                                    :int]))
                                                                   *
                                                                   ((
                                                                   int -> 
                                                                    int)
                                                                   [@closure
                                                                    :((int ->
                                                                    ((int ->
                                                                    bool)[@closure
                                                                    :int])) *
                                                                    (int ->
                                                                    ((int ->
                                                                    int)
                                                                    [@closure
                                                                    :int])))])
                                                                   *
                                                                   (int ->
                                                                    ((int ->
                                                                    int)
                                                                    [@closure
                                                                    :int])))])])
                                                            * (instruction
                                                            list *
                                                            ((string * int),
                                                            value) map))]))
                                                   [@closure
                                                     :((((string * int),
                                                          value) map ->
                                                          ((instruction list
                                                              ->
                                                              ((value list ->
                                                                  ((int ->
                                                                    result)
                                                                  [@closure
                                                                    :
                                                                    (((string
                                                                    * int),
                                                                    value)
                                                                    map *
                                                                    instruction
                                                                    list *
                                                                    (((((string
                                                                    * int),
                                                                    value)
                                                                    map *
                                                                    instruction
                                                                    list *
                                                                    value
                                                                    list *
                                                                    int) ->
                                                                    result)
                                                                    [@closure
                                                                    :((int ->
                                                                    ((int ->
                                                                    int)[@closure
                                                                    :int])) *
                                                                    (bool ->
                                                                    int) *
                                                                    ((int ->
                                                                    bool)
                                                                    [@closure
                                                                    :int ->
                                                                    ((int ->
                                                                    bool)
                                                                    [@closure
                                                                    :int])])
                                                                    * nat *
                                                                    (int ->
                                                                    ((int ->
                                                                    bool)
                                                                    [@closure
                                                                    :int])) *
                                                                    ((int ->
                                                                    int)
                                                                    [@closure
                                                                    :int ->
                                                                    ((int ->
                                                                    bool)
                                                                    [@closure
                                                                    :int])])
                                                                    *
                                                                    (int ->
                                                                    ((int ->
                                                                    bool)
                                                                    [@closure
                                                                    :int])) *
                                                                    (int ->
                                                                    ((int ->
                                                                    bool)
                                                                    [@closure
                                                                    :int])) *
                                                                    (int ->
                                                                    ((int ->
                                                                    int)
                                                                    [@closure
                                                                    :int])) *
                                                                    ((int ->
                                                                    int)
                                                                    [@closure
                                                                    :((int ->
                                                                    ((int ->
                                                                    bool)[@closure
                                                                    :int])) *
                                                                    (int ->
                                                                    ((int ->
                                                                    int)
                                                                    [@closure
                                                                    :int])))])
                                                                    *
                                                                    (int ->
                                                                    ((int ->
                                                                    int)
                                                                    [@closure
                                                                    :int])))])
                                                                    * value
                                                                    list)]))
                                                              [@closure
                                                                :(((string *
                                                                    int),
                                                                   value) map
                                                                   *
                                                                   instruction
                                                                   list *
                                                                   ((
                                                                   (((string
                                                                    * int),
                                                                    value)
                                                                    map *
                                                                    instruction
                                                                    list *
                                                                    value
                                                                    list *
                                                                    int) ->
                                                                    result)
                                                                   [@closure
                                                                    :((int ->
                                                                    ((int ->
                                                                    int)[@closure
                                                                    :int])) *
                                                                    (bool ->
                                                                    int) *
                                                                    ((int ->
                                                                    bool)
                                                                    [@closure
                                                                    :int ->
                                                                    ((int ->
                                                                    bool)
                                                                    [@closure
                                                                    :int])])
                                                                    * nat *
                                                                    (int ->
                                                                    ((int ->
                                                                    bool)
                                                                    [@closure
                                                                    :int])) *
                                                                    ((int ->
                                                                    int)
                                                                    [@closure
                                                                    :int ->
                                                                    ((int ->
                                                                    bool)
                                                                    [@closure
                                                                    :int])])
                                                                    *
                                                                    (int ->
                                                                    ((int ->
                                                                    bool)
                                                                    [@closure
                                                                    :int])) *
                                                                    (int ->
                                                                    ((int ->
                                                                    bool)
                                                                    [@closure
                                                                    :int])) *
                                                                    (int ->
                                                                    ((int ->
                                                                    int)
                                                                    [@closure
                                                                    :int])) *
                                                                    ((int ->
                                                                    int)
                                                                    [@closure
                                                                    :((int ->
                                                                    ((int ->
                                                                    bool)[@closure
                                                                    :int])) *
                                                                    (int ->
                                                                    ((int ->
                                                                    int)
                                                                    [@closure
                                                                    :int])))])
                                                                    *
                                                                    (int ->
                                                                    ((int ->
                                                                    int)
                                                                    [@closure
                                                                    :int])))]))]))
                                                          [@closure
                                                            :(((string * int),
                                                               value) map *
                                                               (((((string *
                                                                    int),
                                                                   value) map
                                                                   *
                                                                   instruction
                                                                   list *
                                                                   value list
                                                                   * int) ->
                                                                   result)
                                                               [@closure
                                                                 :((int ->
                                                                    ((int ->
                                                                    int)
                                                                    [@closure
                                                                    :int])) *
                                                                    (
                                                                    bool ->
                                                                    int) *
                                                                    ((
                                                                    int ->
                                                                    bool)
                                                                    [@closure
                                                                    :int ->
                                                                    ((int ->
                                                                    bool)
                                                                    [@closure
                                                                    :int])])
                                                                    * nat *
                                                                    (
                                                                    int ->
                                                                    ((int ->
                                                                    bool)
                                                                    [@closure
                                                                    :int])) *
                                                                    ((
                                                                    int ->
                                                                    int)
                                                                    [@closure
                                                                    :int ->
                                                                    ((int ->
                                                                    bool)
                                                                    [@closure
                                                                    :int])])
                                                                    *
                                                                    (
                                                                    int ->
                                                                    ((int ->
                                                                    bool)
                                                                    [@closure
                                                                    :int])) *
                                                                    (
                                                                    int ->
                                                                    ((int ->
                                                                    bool)
                                                                    [@closure
                                                                    :int])) *
                                                                    (
                                                                    int ->
                                                                    ((int ->
                                                                    int)
                                                                    [@closure
                                                                    :int])) *
                                                                    ((
                                                                    int ->
                                                                    int)
                                                                    [@closure
                                                                    :((int ->
                                                                    ((int ->
                                                                    bool)[@closure
                                                                    :int])) *
                                                                    (int ->
                                                                    ((int ->
                                                                    int)
                                                                    [@closure
                                                                    :int])))])
                                                                    *
                                                                    (
                                                                    int ->
                                                                    ((int ->
                                                                    int)
                                                                    [@closure
                                                                    :int])))]))]))
                                                     [@closure
                                                       :(((((string * int),
                                                            value) map *
                                                            instruction list
                                                            * value list *
                                                            int) -> result)
                                                       [@closure
                                                         :((int ->
                                                              ((int -> int)
                                                              [@closure :
                                                                int]))
                                                            * (bool -> int) *
                                                            ((int -> bool)
                                                            [@closure
                                                              :int ->
                                                                 ((int ->
                                                                    bool)
                                                                 [@closure
                                                                   :int])])
                                                            * nat *
                                                            (int ->
                                                               ((int -> bool)
                                                               [@closure
                                                                 :int]))
                                                            *
                                                            ((int -> int)
                                                            [@closure
                                                              :int ->
                                                                 ((int ->
                                                                    bool)
                                                                 [@closure
                                                                   :int])])
                                                            *
                                                            (int ->
                                                               ((int -> bool)
                                                               [@closure
                                                                 :int]))
                                                            *
                                                            (int ->
                                                               ((int -> bool)
                                                               [@closure
                                                                 :int]))
                                                            *
                                                            (int ->
                                                               ((int -> int)
                                                               [@closure
                                                                 :int]))
                                                            *
                                                            ((int -> int)
                                                            [@closure
                                                              :((int ->
                                                                   ((
                                                                   int ->
                                                                    bool)
                                                                   [@closure
                                                                    :int]))
                                                                 *
                                                                 (int ->
                                                                    ((
                                                                    int ->
                                                                    int)
                                                                    [@closure
                                                                    :int])))])
                                                            *
                                                            (int ->
                                                               ((int -> int)
                                                               [@closure
                                                                 :int])))])])]))]). Type variables 'h19 were replaced by unit.
./tests/extracted-code/liquidity-extract/tests/StackInterpreter.liq:142.32-144.7: Warning: 
Unresolved type ((unit -> 'k19 result)[@closure :(timestamp * (address * (dun * dun)))]). Type variables 'k19 were replaced by unit.
./tests/extracted-code/liquidity-extract/tests/StackInterpreter.liq:142.49-144.7: Warning: 
Unresolved type 'k19 result. Type variables 'k19 were replaced by unit.
./tests/extracted-code/liquidity-extract/tests/StackInterpreter.liq:144.0-144.7: Warning: 
Unresolved type 'k19 result. Type variables 'k19 were replaced by unit.
Storage initializer generated in "tests/extracted-code/liquidity-extract/tests/StackInterpreter.initializer.tz"
File "tests/extracted-code/liquidity-extract/tests/StackInterpreter.tz" generated
You may want to typecheck with:
  dune-client typecheck script tests/extracted-code/liquidity-extract/tests/StackInterpreter.tz
Main contract Escrow
./tests/extracted-code/liquidity-extract/tests/escrow.liq:98.11-100.26: Warning: 
unused variable "t2"
./tests/extracted-code/liquidity-extract/tests/escrow.liq:97.0-101.25: Warning: 
unused variable "t1"
./tests/extracted-code/liquidity-extract/tests/escrow.liq:110.11-113.26: Warning: 
unused variable "t1"
./tests/extracted-code/liquidity-extract/tests/escrow.liq:109.0-114.25: Warning: 
unused variable "t0"
./tests/extracted-code/liquidity-extract/tests/escrow.liq:120.11-123.26: Warning: 
unused variable "t2"
./tests/extracted-code/liquidity-extract/tests/escrow.liq:119.11-124.26: Warning: 
unused variable "t1"
./tests/extracted-code/liquidity-extract/tests/escrow.liq:118.17-125.26: Warning: 
unused variable "t0"
./tests/extracted-code/liquidity-extract/tests/escrow.liq:130.45-133.26: Warning: 
unused variable "t2"
./tests/extracted-code/liquidity-extract/tests/escrow.liq:127.19-135.26: Warning: 
unused variable "t0"
./tests/extracted-code/liquidity-extract/tests/escrow.liq: Warning: unused variable "ltb_time"
./tests/extracted-code/liquidity-extract/tests/escrow.liq: Warning: unused variable "leb_time"
./tests/extracted-code/liquidity-extract/tests/escrow.liq: Warning: unused variable "eqb_time"
./tests/extracted-code/liquidity-extract/tests/escrow.liq: Warning: unused variable "orb"
./tests/extracted-code/liquidity-extract/tests/escrow.liq: Warning: unused variable "eqNat"
./tests/extracted-code/liquidity-extract/tests/escrow.liq: Warning: unused variable "lxorNat"
./tests/extracted-code/liquidity-extract/tests/escrow.liq: Warning: unused variable "leNat"
./tests/extracted-code/liquidity-extract/tests/escrow.liq: Warning: unused variable "subNat"
./tests/extracted-code/liquidity-extract/tests/escrow.liq: Warning: unused variable "mulNat"
./tests/extracted-code/liquidity-extract/tests/escrow.liq: Warning: unused variable "evenTez"
./tests/extracted-code/liquidity-extract/tests/escrow.liq: Warning: unused variable "leTez"
./tests/extracted-code/liquidity-extract/tests/escrow.liq: Warning: unused variable "addTez"
./tests/extracted-code/liquidity-extract/tests/escrow.liq: Warning: unused variable "powInt"
./tests/extracted-code/liquidity-extract/tests/escrow.liq: Warning: unused variable "modInt"
./tests/extracted-code/liquidity-extract/tests/escrow.liq: Warning: unused variable "eqInt"
./tests/extracted-code/liquidity-extract/tests/escrow.liq: Warning: unused variable "ltInt"
./tests/extracted-code/liquidity-extract/tests/escrow.liq: Warning: unused variable "leInt"
./tests/extracted-code/liquidity-extract/tests/escrow.liq: Warning: unused variable "subInt"
./tests/extracted-code/liquidity-extract/tests/escrow.liq: Warning: unused variable "mulInt"
./tests/extracted-code/liquidity-extract/tests/escrow.liq: Warning: unused variable "addInt"
./tests/extracted-code/liquidity-extract/tests/escrow.liq: Warning: unused variable "snd"
./tests/extracted-code/liquidity-extract/tests/escrow.liq: Warning: unused variable "fst"
./tests/extracted-code/liquidity-extract/tests/escrow.liq:154.11-156.26: Warning: 
unused variable "t2"
./tests/extracted-code/liquidity-extract/tests/escrow.liq:153.11-157.26: Warning: 
unused variable "t1"
./tests/extracted-code/liquidity-extract/tests/escrow.liq:152.0-158.25: Warning: 
unused variable "t0"
./tests/extracted-code/liquidity-extract/tests/escrow.liq:147.4-147.8: Warning: 
unused variable "andb"
./tests/extracted-code/liquidity-extract/tests/escrow.liq:2.38-2.43: Warning: 
Unresolved type 'a. Type variables 'a were replaced by unit.
./tests/extracted-code/liquidity-extract/tests/escrow.liq:2.18-2.19: Warning: 
Unresolved type ('a * 'b). Type variables 'a, 'b were replaced by unit.
./tests/extracted-code/liquidity-extract/tests/escrow.liq:3.38-3.43: Warning: 
Unresolved type 'b. Type variables 'b were replaced by unit.
./tests/extracted-code/liquidity-extract/tests/escrow.liq:3.18-3.19: Warning: 
Unresolved type ('a * 'b). Type variables 'a, 'b were replaced by unit.
./tests/extracted-code/liquidity-extract/tests/escrow.liq:91.28-137.33: Warning: 
Unresolved type (((timestamp * (address * (dun * dun))) ->
    ((state ->
        ((msg option -> result)[@closure
                                 :((nat -> ((nat -> nat)[@closure :nat])) *
                                    (bool -> ((bool -> bool)[@closure :bool]))
                                    * (nat * (nat * nat)) * (timestamp *
                                    (address * (dun * dun))) * nat *
                                    ((dun ->
                                        ((dun -> dun)[@closure
                                                       :(dun * (dun -> nat))]))
                                    [@closure :dun -> nat]) *
                                    (dun -> ((dun -> bool)[@closure :dun])) *
                                    (address ->
                                       ((address -> bool)[@closure :address]))
                                    * (dun -> ((dun -> bool)[@closure :dun]))
                                    * (nat -> ((nat -> bool)[@closure :nat]))
                                    *
                                    ((dun ->
                                        ((dun -> dun)[@closure
                                                       :(dun * (dun -> nat))]))
                                    [@closure :dun -> nat]) *
                                    ('r33 option ->
                                       (('q33 -> ('q33, 'r33) result)
                                       [@closure :'r33 option]))
                                    * state *
                                    ((dun ->
                                        ((dun -> dun option)[@closure
                                                              :((dun ->
                                                                   ((
                                                                   dun ->
                                                                    bool)
                                                                   [@closure
                                                                    :dun]))
                                                                 * dun *
                                                                 (dun ->
                                                                    ((
                                                                    dun ->
                                                                    dun)
                                                                    [@closure
                                                                    :dun])))]))
                                    [@closure
                                      :((dun ->
                                           ((dun -> bool)[@closure :dun]))
                                         *
                                         (dun ->
                                            ((dun -> dun)[@closure :dun])))]))]))
    [@closure
      :((nat -> ((nat -> nat)[@closure :nat])) *
         (bool -> ((bool -> bool)[@closure :bool])) * (nat * (nat * nat)) *
         (timestamp * (address * (dun * dun))) * nat *
         ((dun -> ((dun -> dun)[@closure :(dun * (dun -> nat))]))[@closure
                                                                   :dun ->
                                                                    nat])
         * (dun -> ((dun -> bool)[@closure :dun])) *
         (address -> ((address -> bool)[@closure :address])) *
         (dun -> ((dun -> bool)[@closure :dun])) *
         (nat -> ((nat -> bool)[@closure :nat])) *
         ((dun -> ((dun -> dun)[@closure :(dun * (dun -> nat))]))[@closure
                                                                   :dun ->
                                                                    nat])
         *
         ('p33 option ->
            (('o33 -> ('o33, 'p33) result)[@closure :'p33 option]))
         *
         ((dun ->
             ((dun -> dun option)[@closure
                                   :((dun -> ((dun -> bool)[@closure :dun]))
                                      * dun *
                                      (dun -> ((dun -> dun)[@closure :dun])))]))
         [@closure
           :((dun -> ((dun -> bool)[@closure :dun])) *
              (dun -> ((dun -> dun)[@closure :dun])))]))]))[@closure
                                                             :((nat ->
                                                                  ((nat ->
                                                                    nat)
                                                                  [@closure
                                                                    :
                                                                    nat]))
                                                                *
                                                                (bool ->
                                                                   ((
                                                                   bool ->
                                                                    bool)
                                                                   [@closure
                                                                    :bool]))
                                                                * (nat * (nat
                                                                * nat)) * nat
                                                                *
                                                                ((dun ->
                                                                    ((
                                                                    dun ->
                                                                    dun)
                                                                    [@closure
                                                                    :(dun *
                                                                    (dun ->
                                                                    nat))]))
                                                                [@closure
                                                                  :dun -> nat])
                                                                *
                                                                (dun ->
                                                                   ((
                                                                   dun ->
                                                                    bool)
                                                                   [@closure
                                                                    :dun]))
                                                                *
                                                                (address ->
                                                                   ((
                                                                   address ->
                                                                    bool)
                                                                   [@closure
                                                                    :address]))
                                                                *
                                                                (dun ->
                                                                   ((
                                                                   dun ->
                                                                    bool)
                                                                   [@closure
                                                                    :dun]))
                                                                *
                                                                (nat ->
                                                                   ((
                                                                   nat ->
                                                                    bool)
                                                                   [@closure
                                                                    :nat]))
                                                                *
                                                                ((dun ->
                                                                    ((
                                                                    dun ->
                                                                    dun)
                                                                    [@closure
                                                                    :(dun *
                                                                    (dun ->
                                                                    nat))]))
                                                                [@closure
                                                                  :dun -> nat])
                                                                *
                                                                ('n33 option
                                                                   ->
                                                                   ((
                                                                   'm33 ->
                                                                    ('m33,
                                                                    'n33)
                                                                    result)
                                                                   [@closure
                                                                    :'n33
                                                                    option]))
                                                                *
                                                                ((dun ->
                                                                    ((
                                                                    dun ->
                                                                    dun
                                                                    option)
                                                                    [@closure
                                                                    :((dun ->
                                                                    ((dun ->
                                                                    bool)[@closure
                                                                    :dun])) *
                                                                    dun *
                                                                    (dun ->
                                                                    ((dun ->
                                                                    dun)
                                                                    [@closure
                                                                    :dun])))]))
                                                                [@closure
                                                                  :((dun ->
                                                                    ((dun ->
                                                                    bool)
                                                                    [@closure
                                                                    :dun])) *
                                                                    (dun ->
                                                                    ((dun ->
                                                                    dun)
                                                                    [@closure
                                                                    :dun])))]))]). Type variables 'm33, 'n33, 'o33, 'p33, 'q33, 'r33 were replaced by unit.
./tests/extracted-code/liquidity-extract/tests/escrow.liq:91.41-137.33: Warning: 
Unresolved type ((state ->
    ((msg option -> result)[@closure
                             :((nat -> ((nat -> nat)[@closure :nat])) *
                                (bool -> ((bool -> bool)[@closure :bool])) *
                                (nat * (nat * nat)) * (timestamp * (address *
                                (dun * dun))) * nat *
                                ((dun ->
                                    ((dun -> dun)[@closure
                                                   :(dun * (dun -> nat))]))
                                [@closure :dun -> nat]) *
                                (dun -> ((dun -> bool)[@closure :dun])) *
                                (address ->
                                   ((address -> bool)[@closure :address]))
                                * (dun -> ((dun -> bool)[@closure :dun])) *
                                (nat -> ((nat -> bool)[@closure :nat])) *
                                ((dun ->
                                    ((dun -> dun)[@closure
                                                   :(dun * (dun -> nat))]))
                                [@closure :dun -> nat]) *
                                ('r33 option ->
                                   (('q33 -> ('q33, 'r33) result)[@closure
                                                                   :'r33
                                                                    option]))
                                * state *
                                ((dun ->
                                    ((dun -> dun option)[@closure
                                                          :((dun ->
                                                               ((dun -> bool)
                                                               [@closure
                                                                 :dun]))
                                                             * dun *
                                                             (dun ->
                                                                ((dun -> dun)
                                                                [@closure
                                                                  :dun])))]))
                                [@closure
                                  :((dun -> ((dun -> bool)[@closure :dun])) *
                                     (dun -> ((dun -> dun)[@closure :dun])))]))]))
[@closure
  :((nat -> ((nat -> nat)[@closure :nat])) *
     (bool -> ((bool -> bool)[@closure :bool])) * (nat * (nat * nat)) *
     (timestamp * (address * (dun * dun))) * nat *
     ((dun -> ((dun -> dun)[@closure :(dun * (dun -> nat))]))[@closure
                                                               :dun -> nat])
     * (dun -> ((dun -> bool)[@closure :dun])) *
     (address -> ((address -> bool)[@closure :address])) *
     (dun -> ((dun -> bool)[@closure :dun])) *
     (nat -> ((nat -> bool)[@closure :nat])) *
     ((dun -> ((dun -> dun)[@closure :(dun * (dun -> nat))]))[@closure
                                                               :dun -> nat])
     *
     ('p33 option -> (('o33 -> ('o33, 'p33) result)[@closure :'p33 option]))
     *
     ((dun ->
         ((dun -> dun option)[@closure
                               :((dun -> ((dun -> bool)[@closure :dun])) *
                                  dun *
                                  (dun -> ((dun -> dun)[@closure :dun])))]))
     [@closure
       :((dun -> ((dun -> bool)[@closure :dun])) *
          (dun -> ((dun -> dun)[@closure :dun])))]))]). Type variables 'o33, 'p33, 'q33, 'r33 were replaced by unit.
./tests/extracted-code/liquidity-extract/tests/escrow.liq:91.57-137.33: Warning: 
Unresolved type ((msg option -> result)[@closure
                         :((nat -> ((nat -> nat)[@closure :nat])) *
                            (bool -> ((bool -> bool)[@closure :bool])) * (nat
                            * (nat * nat)) * (timestamp * (address * (dun *
                            dun))) * nat *
                            ((dun ->
                                ((dun -> dun)[@closure :(dun * (dun -> nat))]))
                            [@closure :dun -> nat]) *
                            (dun -> ((dun -> bool)[@closure :dun])) *
                            (address ->
                               ((address -> bool)[@closure :address]))
                            * (dun -> ((dun -> bool)[@closure :dun])) *
                            (nat -> ((nat -> bool)[@closure :nat])) *
                            ((dun ->
                                ((dun -> dun)[@closure :(dun * (dun -> nat))]))
                            [@closure :dun -> nat]) *
                            ('r33 option ->
                               (('q33 -> ('q33, 'r33) result)[@closure
                                                               :'r33 option]))
                            * state *
                            ((dun ->
                                ((dun -> dun option)[@closure
                                                      :((dun ->
                                                           ((dun -> bool)
                                                           [@closure :
                                                             dun]))
                                                         * dun *
                                                         (dun ->
                                                            ((dun -> dun)
                                                            [@closure :
                                                              dun])))]))
                            [@closure
                              :((dun -> ((dun -> bool)[@closure :dun])) *
                                 (dun -> ((dun -> dun)[@closure :dun])))]))]). Type variables 'q33, 'r33 were replaced by unit.
./tests/extracted-code/liquidity-extract/tests/escrow.liq:139.58-141.25: Warning: 
Unresolved type ((state -> result)[@closure
                    :(((msg * (timestamp * (address * (dun * dun)))) * (nat *
                       (nat * nat))) *
                       (((nat * (nat * nat)) ->
                           (((timestamp * (address * (dun * dun))) ->
                               ((state ->
                                   ((msg option -> result)[@closure
                                                            :((nat ->
                                                                 ((nat -> nat)
                                                                 [@closure
                                                                   :nat]))
                                                               *
                                                               (bool ->
                                                                  ((bool ->
                                                                    bool)
                                                                  [@closure
                                                                    :
                                                                    bool]))
                                                               * (nat * (nat
                                                               * nat)) *
                                                               (timestamp *
                                                               (address *
                                                               (dun * dun)))
                                                               * nat *
                                                               ((dun ->
                                                                   ((
                                                                   dun -> 
                                                                    dun)
                                                                   [@closure
                                                                    :(dun *
                                                                    (dun ->
                                                                    nat))]))
                                                               [@closure
                                                                 :dun -> nat])
                                                               *
                                                               (dun ->
                                                                  ((dun ->
                                                                    bool)
                                                                  [@closure
                                                                    :
                                                                    dun]))
                                                               *
                                                               (address ->
                                                                  ((address
                                                                    -> 
                                                                    bool)
                                                                  [@closure
                                                                    :
                                                                    address]))
                                                               *
                                                               (dun ->
                                                                  ((dun ->
                                                                    bool)
                                                                  [@closure
                                                                    :
                                                                    dun]))
                                                               *
                                                               (nat ->
                                                                  ((nat ->
                                                                    bool)
                                                                  [@closure
                                                                    :
                                                                    nat]))
                                                               *
                                                               ((dun ->
                                                                   ((
                                                                   dun -> 
                                                                    dun)
                                                                   [@closure
                                                                    :(dun *
                                                                    (dun ->
                                                                    nat))]))
                                                               [@closure
                                                                 :dun -> nat])
                                                               *
                                                               ('t35 option
                                                                  ->
                                                                  (('s35 ->
                                                                    ('s35,
                                                                    't35)
                                                                    result)
                                                                  [@closure
                                                                    :
                                                                    't35
                                                                    option]))
                                                               * state *
                                                               ((dun ->
                                                                   ((
                                                                   dun ->
                                                                    dun
                                                                    option)
                                                                   [@closure
                                                                    :((dun ->
                                                                    ((dun ->
                                                                    bool)[@closure
                                                                    :dun])) *
                                                                    dun *
                                                                    (dun ->
                                                                    ((dun ->
                                                                    dun)
                                                                    [@closure
                                                                    :dun])))]))
                                                               [@closure
                                                                 :((dun ->
                                                                    ((dun ->
                                                                    bool)
                                                                    [@closure
                                                                    :dun])) *
                                                                    (
                                                                    dun ->
                                                                    ((dun ->
                                                                    dun)
                                                                    [@closure
                                                                    :dun])))]))]))
                               [@closure
                                 :((nat -> ((nat -> nat)[@closure :nat])) *
                                    (bool -> ((bool -> bool)[@closure :bool]))
                                    * (nat * (nat * nat)) * (timestamp *
                                    (address * (dun * dun))) * nat *
                                    ((dun ->
                                        ((dun -> dun)[@closure
                                                       :(dun * (dun -> nat))]))
                                    [@closure :dun -> nat]) *
                                    (dun -> ((dun -> bool)[@closure :dun])) *
                                    (address ->
                                       ((address -> bool)[@closure :address]))
                                    * (dun -> ((dun -> bool)[@closure :dun]))
                                    * (nat -> ((nat -> bool)[@closure :nat]))
                                    *
                                    ((dun ->
                                        ((dun -> dun)[@closure
                                                       :(dun * (dun -> nat))]))
                                    [@closure :dun -> nat]) *
                                    ('r35 option ->
                                       (('q35 -> ('q35, 'r35) result)
                                       [@closure :'r35 option]))
                                    *
                                    ((dun ->
                                        ((dun -> dun option)[@closure
                                                              :((dun ->
                                                                   ((
                                                                   dun ->
                                                                    bool)
                                                                   [@closure
                                                                    :dun]))
                                                                 * dun *
                                                                 (dun ->
                                                                    ((
                                                                    dun ->
                                                                    dun)
                                                                    [@closure
                                                                    :dun])))]))
                                    [@closure
                                      :((dun ->
                                           ((dun -> bool)[@closure :dun]))
                                         *
                                         (dun ->
                                            ((dun -> dun)[@closure :dun])))]))]))
                           [@closure
                             :((nat -> ((nat -> nat)[@closure :nat])) *
                                (bool -> ((bool -> bool)[@closure :bool])) *
                                (nat * (nat * nat)) * nat *
                                ((dun ->
                                    ((dun -> dun)[@closure
                                                   :(dun * (dun -> nat))]))
                                [@closure :dun -> nat]) *
                                (dun -> ((dun -> bool)[@closure :dun])) *
                                (address ->
                                   ((address -> bool)[@closure :address]))
                                * (dun -> ((dun -> bool)[@closure :dun])) *
                                (nat -> ((nat -> bool)[@closure :nat])) *
                                ((dun ->
                                    ((dun -> dun)[@closure
                                                   :(dun * (dun -> nat))]))
                                [@closure :dun -> nat]) *
                                ('p35 option ->
                                   (('o35 -> ('o35, 'p35) result)[@closure
                                                                   :'p35
                                                                    option]))
                                *
                                ((dun ->
                                    ((dun -> dun option)[@closure
                                                          :((dun ->
                                                               ((dun -> bool)
                                                               [@closure
                                                                 :dun]))
                                                             * dun *
                                                             (dun ->
                                                                ((dun -> dun)
                                                                [@closure
                                                                  :dun])))]))
                                [@closure
                                  :((dun -> ((dun -> bool)[@closure :dun])) *
                                     (dun -> ((dun -> dun)[@closure :dun])))]))]))
                       [@closure
                         :((nat -> ((nat -> nat)[@closure :nat])) *
                            (bool -> ((bool -> bool)[@closure :bool])) * nat
                            *
                            ((dun ->
                                ((dun -> dun)[@closure :(dun * (dun -> nat))]))
                            [@closure :dun -> nat]) *
                            (dun -> ((dun -> bool)[@closure :dun])) *
                            (address ->
                               ((address -> bool)[@closure :address]))
                            * (dun -> ((dun -> bool)[@closure :dun])) *
                            (nat -> ((nat -> bool)[@closure :nat])) *
                            ((dun ->
                                ((dun -> dun)[@closure :(dun * (dun -> nat))]))
                            [@closure :dun -> nat]) *
                            ('n35 option ->
                               (('m35 -> ('m35, 'n35) result)[@closure
                                                               :'n35 option]))
                            *
                            ((dun ->
                                ((dun -> dun option)[@closure
                                                      :((dun ->
                                                           ((dun -> bool)
                                                           [@closure :
                                                             dun]))
                                                         * dun *
                                                         (dun ->
                                                            ((dun -> dun)
                                                            [@closure :
                                                              dun])))]))
                            [@closure
                              :((dun -> ((dun -> bool)[@closure :dun])) *
                                 (dun -> ((dun -> dun)[@closure :dun])))]))]))]). Type variables 'm35, 'n35, 'o35, 'p35, 'q35, 'r35, 's35, 't35 were replaced by unit.
./tests/extracted-code/liquidity-extract/tests/escrow.liq:166.18-166.111: Warning: 
Unresolved type ((state -> (operation list * state))[@closure
                                      :(((((msg * (timestamp * (address *
                                            (dun * dun)))) * (nat * (nat *
                                            nat))) ->
                                            ((state -> result)[@closure
                                                                :(((msg *
                                                                   (timestamp
                                                                   * (address
                                                                   * (dun *
                                                                   dun)))) *
                                                                   (nat *
                                                                   (nat *
                                                                   nat))) *
                                                                   ((
                                                                   (nat *
                                                                    (nat *
                                                                    nat)) ->
                                                                    ((
                                                                    (timestamp
                                                                    *
                                                                    (address
                                                                    * (dun *
                                                                    dun))) ->
                                                                    ((state
                                                                    ->
                                                                    ((msg
                                                                    option ->
                                                                    result)
                                                                    [@closure
                                                                    :((nat ->
                                                                    ((nat ->
                                                                    nat)[@closure
                                                                    :nat])) *
                                                                    (bool ->
                                                                    ((bool ->
                                                                    bool)
                                                                    [@closure
                                                                    :bool]))
                                                                    * (nat *
                                                                    (nat *
                                                                    nat)) *
                                                                    (timestamp
                                                                    *
                                                                    (address
                                                                    * (dun *
                                                                    dun))) *
                                                                    nat *
                                                                    ((dun ->
                                                                    ((dun ->
                                                                    dun)[@closure
                                                                    :(dun *
                                                                    (dun ->
                                                                    nat))]))
                                                                    [@closure
                                                                    :dun ->
                                                                    nat]) *
                                                                    (dun ->
                                                                    ((dun ->
                                                                    bool)
                                                                    [@closure
                                                                    :dun])) *
                                                                    (address
                                                                    ->
                                                                    ((address
                                                                    -> bool)
                                                                    [@closure
                                                                    :address]))
                                                                    *
                                                                    (dun ->
                                                                    ((dun ->
                                                                    bool)
                                                                    [@closure
                                                                    :dun])) *
                                                                    (nat ->
                                                                    ((nat ->
                                                                    bool)
                                                                    [@closure
                                                                    :nat])) *
                                                                    ((dun ->
                                                                    ((dun ->
                                                                    dun)[@closure
                                                                    :(dun *
                                                                    (dun ->
                                                                    nat))]))
                                                                    [@closure
                                                                    :dun ->
                                                                    nat]) *
                                                                    ('d36
                                                                    option ->
                                                                    (('c36 ->
                                                                    ('c36,
                                                                    'd36)
                                                                    result)
                                                                    [@closure
                                                                    :'d36
                                                                    option]))
                                                                    * state *
                                                                    ((dun ->
                                                                    ((dun ->
                                                                    dun
                                                                    option)
                                                                    [@closure
                                                                    :((dun ->
                                                                    ((dun ->
                                                                    bool)[@closure
                                                                    :dun])) *
                                                                    dun *
                                                                    (dun ->
                                                                    ((dun ->
                                                                    dun)
                                                                    [@closure
                                                                    :dun])))]))
                                                                    [@closure
                                                                    :((dun ->
                                                                    ((dun ->
                                                                    bool)[@closure
                                                                    :dun])) *
                                                                    (dun ->
                                                                    ((dun ->
                                                                    dun)
                                                                    [@closure
                                                                    :dun])))]))]))
                                                                    [@closure
                                                                    :((nat ->
                                                                    ((nat ->
                                                                    nat)[@closure
                                                                    :nat])) *
                                                                    (bool ->
                                                                    ((bool ->
                                                                    bool)
                                                                    [@closure
                                                                    :bool]))
                                                                    * (nat *
                                                                    (nat *
                                                                    nat)) *
                                                                    (timestamp
                                                                    *
                                                                    (address
                                                                    * (dun *
                                                                    dun))) *
                                                                    nat *
                                                                    ((dun ->
                                                                    ((dun ->
                                                                    dun)[@closure
                                                                    :(dun *
                                                                    (dun ->
                                                                    nat))]))
                                                                    [@closure
                                                                    :dun ->
                                                                    nat]) *
                                                                    (dun ->
                                                                    ((dun ->
                                                                    bool)
                                                                    [@closure
                                                                    :dun])) *
                                                                    (address
                                                                    ->
                                                                    ((address
                                                                    -> bool)
                                                                    [@closure
                                                                    :address]))
                                                                    *
                                                                    (dun ->
                                                                    ((dun ->
                                                                    bool)
                                                                    [@closure
                                                                    :dun])) *
                                                                    (nat ->
                                                                    ((nat ->
                                                                    bool)
                                                                    [@closure
                                                                    :nat])) *
                                                                    ((dun ->
                                                                    ((dun ->
                                                                    dun)[@closure
                                                                    :(dun *
                                                                    (dun ->
                                                                    nat))]))
                                                                    [@closure
                                                                    :dun ->
                                                                    nat]) *
                                                                    ('b36
                                                                    option ->
                                                                    (('a36 ->
                                                                    ('a36,
                                                                    'b36)
                                                                    result)
                                                                    [@closure
                                                                    :'b36
                                                                    option]))
                                                                    *
                                                                    ((dun ->
                                                                    ((dun ->
                                                                    dun
                                                                    option)
                                                                    [@closure
                                                                    :((dun ->
                                                                    ((dun ->
                                                                    bool)[@closure
                                                                    :dun])) *
                                                                    dun *
                                                                    (dun ->
                                                                    ((dun ->
                                                                    dun)
                                                                    [@closure
                                                                    :dun])))]))
                                                                    [@closure
                                                                    :((dun ->
                                                                    ((dun ->
                                                                    bool)[@closure
                                                                    :dun])) *
                                                                    (dun ->
                                                                    ((dun ->
                                                                    dun)
                                                                    [@closure
                                                                    :dun])))]))]))
                                                                    [@closure
                                                                    :((nat ->
                                                                    ((nat ->
                                                                    nat)[@closure
                                                                    :nat])) *
                                                                    (bool ->
                                                                    ((bool ->
                                                                    bool)
                                                                    [@closure
                                                                    :bool]))
                                                                    * (nat *
                                                                    (nat *
                                                                    nat)) *
                                                                    nat *
                                                                    ((dun ->
                                                                    ((dun ->
                                                                    dun)[@closure
                                                                    :(dun *
                                                                    (dun ->
                                                                    nat))]))
                                                                    [@closure
                                                                    :dun ->
                                                                    nat]) *
                                                                    (dun ->
                                                                    ((dun ->
                                                                    bool)
                                                                    [@closure
                                                                    :dun])) *
                                                                    (address
                                                                    ->
                                                                    ((address
                                                                    -> bool)
                                                                    [@closure
                                                                    :address]))
                                                                    *
                                                                    (dun ->
                                                                    ((dun ->
                                                                    bool)
                                                                    [@closure
                                                                    :dun])) *
                                                                    (nat ->
                                                                    ((nat ->
                                                                    bool)
                                                                    [@closure
                                                                    :nat])) *
                                                                    ((dun ->
                                                                    ((dun ->
                                                                    dun)[@closure
                                                                    :(dun *
                                                                    (dun ->
                                                                    nat))]))
                                                                    [@closure
                                                                    :dun ->
                                                                    nat]) *
                                                                    ('f37
                                                                    option ->
                                                                    (('e37 ->
                                                                    ('e37,
                                                                    'f37)
                                                                    result)
                                                                    [@closure
                                                                    :'f37
                                                                    option]))
                                                                    *
                                                                    ((dun ->
                                                                    ((dun ->
                                                                    dun
                                                                    option)
                                                                    [@closure
                                                                    :((dun ->
                                                                    ((dun ->
                                                                    bool)[@closure
                                                                    :dun])) *
                                                                    dun *
                                                                    (dun ->
                                                                    ((dun ->
                                                                    dun)
                                                                    [@closure
                                                                    :dun])))]))
                                                                    [@closure
                                                                    :((dun ->
                                                                    ((dun ->
                                                                    bool)[@closure
                                                                    :dun])) *
                                                                    (dun ->
                                                                    ((dun ->
                                                                    dun)
                                                                    [@closure
                                                                    :dun])))]))]))
                                                                   [@closure
                                                                    :((nat ->
                                                                    ((nat ->
                                                                    nat)[@closure
                                                                    :nat])) *
                                                                    (bool ->
                                                                    ((bool ->
                                                                    bool)
                                                                    [@closure
                                                                    :bool]))
                                                                    * nat *
                                                                    ((dun ->
                                                                    ((dun ->
                                                                    dun)[@closure
                                                                    :(dun *
                                                                    (dun ->
                                                                    nat))]))
                                                                    [@closure
                                                                    :dun ->
                                                                    nat]) *
                                                                    (dun ->
                                                                    ((dun ->
                                                                    bool)
                                                                    [@closure
                                                                    :dun])) *
                                                                    (address
                                                                    ->
                                                                    ((address
                                                                    -> bool)
                                                                    [@closure
                                                                    :address]))
                                                                    *
                                                                    (dun ->
                                                                    ((dun ->
                                                                    bool)
                                                                    [@closure
                                                                    :dun])) *
                                                                    (nat ->
                                                                    ((nat ->
                                                                    bool)
                                                                    [@closure
                                                                    :nat])) *
                                                                    ((dun ->
                                                                    ((dun ->
                                                                    dun)[@closure
                                                                    :(dun *
                                                                    (dun ->
                                                                    nat))]))
                                                                    [@closure
                                                                    :dun ->
                                                                    nat]) *
                                                                    ('d37
                                                                    option ->
                                                                    (('c37 ->
                                                                    ('c37,
                                                                    'd37)
                                                                    result)
                                                                    [@closure
                                                                    :'d37
                                                                    option]))
                                                                    *
                                                                    ((dun ->
                                                                    ((dun ->
                                                                    dun
                                                                    option)
                                                                    [@closure
                                                                    :((dun ->
                                                                    ((dun ->
                                                                    bool)[@closure
                                                                    :dun])) *
                                                                    dun *
                                                                    (dun ->
                                                                    ((dun ->
                                                                    dun)
                                                                    [@closure
                                                                    :dun])))]))
                                                                    [@closure
                                                                    :((dun ->
                                                                    ((dun ->
                                                                    bool)[@closure
                                                                    :dun])) *
                                                                    (dun ->
                                                                    ((dun ->
                                                                    dun)
                                                                    [@closure
                                                                    :dun])))]))]))]))
                                         [@closure
                                           :(((nat * (nat * nat)) ->
                                                (((timestamp * (address *
                                                    (dun * dun))) ->
                                                    ((state ->
                                                        ((msg option ->
                                                            result)[@closure
                                                                    :((nat ->
                                                                    ((nat ->
                                                                    nat)[@closure
                                                                    :nat])) *
                                                                    (bool ->
                                                                    ((bool ->
                                                                    bool)
                                                                    [@closure
                                                                    :bool]))
                                                                    * (nat *
                                                                    (nat *
                                                                    nat)) *
                                                                    (timestamp
                                                                    *
                                                                    (address
                                                                    * (dun *
                                                                    dun))) *
                                                                    nat *
                                                                    ((dun ->
                                                                    ((dun ->
                                                                    dun)[@closure
                                                                    :(dun *
                                                                    (dun ->
                                                                    nat))]))
                                                                    [@closure
                                                                    :dun ->
                                                                    nat]) *
                                                                    (dun ->
                                                                    ((dun ->
                                                                    bool)
                                                                    [@closure
                                                                    :dun])) *
                                                                    (address
                                                                    ->
                                                                    ((address
                                                                    -> bool)
                                                                    [@closure
                                                                    :address]))
                                                                    *
                                                                    (dun ->
                                                                    ((dun ->
                                                                    bool)
                                                                    [@closure
                                                                    :dun])) *
                                                                    (nat ->
                                                                    ((nat ->
                                                                    bool)
                                                                    [@closure
                                                                    :nat])) *
                                                                    ((dun ->
                                                                    ((dun ->
                                                                    dun)[@closure
                                                                    :(dun *
                                                                    (dun ->
                                                                    nat))]))
                                                                    [@closure
                                                                    :dun ->
                                                                    nat]) *
                                                                    ('b37
                                                                    option ->
                                                                    (('a37 ->
                                                                    ('a37,
                                                                    'b37)
                                                                    result)
                                                                    [@closure
                                                                    :'b37
                                                                    option]))
                                                                    * state *
                                                                    ((dun ->
                                                                    ((dun ->
                                                                    dun
                                                                    option)
                                                                    [@closure
                                                                    :((dun ->
                                                                    ((dun ->
                                                                    bool)[@closure
                                                                    :dun])) *
                                                                    dun *
                                                                    (dun ->
                                                                    ((dun ->
                                                                    dun)
                                                                    [@closure
                                                                    :dun])))]))
                                                                    [@closure
                                                                    :((dun ->
                                                                    ((dun ->
                                                                    bool)[@closure
                                                                    :dun])) *
                                                                    (dun ->
                                                                    ((dun ->
                                                                    dun)
                                                                    [@closure
                                                                    :dun])))]))]))
                                                    [@closure
                                                      :((nat ->
                                                           ((nat -> nat)
                                                           [@closure :
                                                             nat]))
                                                         *
                                                         (bool ->
                                                            ((bool -> bool)
                                                            [@closure :
                                                              bool]))
                                                         * (nat * (nat *
                                                         nat)) * (timestamp *
                                                         (address * (dun *
                                                         dun))) * nat *
                                                         ((dun ->
                                                             ((dun -> dun)
                                                             [@closure
                                                               :(dun *
                                                                  (dun -> nat))]))
                                                         [@closure
                                                           :dun -> nat])
                                                         *
                                                         (dun ->
                                                            ((dun -> bool)
                                                            [@closure :
                                                              dun]))
                                                         *
                                                         (address ->
                                                            ((address -> bool)
                                                            [@closure
                                                              :address]))
                                                         *
                                                         (dun ->
                                                            ((dun -> bool)
                                                            [@closure :
                                                              dun]))
                                                         *
                                                         (nat ->
                                                            ((nat -> bool)
                                                            [@closure :
                                                              nat]))
                                                         *
                                                         ((dun ->
                                                             ((dun -> dun)
                                                             [@closure
                                                               :(dun *
                                                                  (dun -> nat))]))
                                                         [@closure
                                                           :dun -> nat])
                                                         *
                                                         ('p36 option ->
                                                            (('n36 ->
                                                                ('n36, 
                                                                  'p36)
                                                                  result)
                                                            [@closure
                                                              :'p36 option]))
                                                         *
                                                         ((dun ->
                                                             ((dun ->
                                                                 dun option)
                                                             [@closure
                                                               :((dun ->
                                                                    ((
                                                                    dun ->
                                                                    bool)
                                                                    [@closure
                                                                    :dun]))
                                                                  * dun *
                                                                  (dun ->
                                                                    ((
                                                                    dun ->
                                                                    dun)
                                                                    [@closure
                                                                    :dun])))]))
                                                         [@closure
                                                           :((dun ->
                                                                ((dun -> bool)
                                                                [@closure
                                                                  :dun]))
                                                              *
                                                              (dun ->
                                                                 ((dun -> dun)
                                                                 [@closure
                                                                   :dun])))]))]))
                                                [@closure
                                                  :((nat ->
                                                       ((nat -> nat)[@closure
                                                                    :nat]))
                                                     *
                                                     (bool ->
                                                        ((bool -> bool)
                                                        [@closure :bool]))
                                                     * (nat * (nat * nat)) *
                                                     nat *
                                                     ((dun ->
                                                         ((dun -> dun)
                                                         [@closure
                                                           :(dun *
                                                              (dun -> nat))]))
                                                     [@closure :dun -> nat])
                                                     *
                                                     (dun ->
                                                        ((dun -> bool)
                                                        [@closure :dun]))
                                                     *
                                                     (address ->
                                                        ((address -> bool)
                                                        [@closure :address]))
                                                     *
                                                     (dun ->
                                                        ((dun -> bool)
                                                        [@closure :dun]))
                                                     *
                                                     (nat ->
                                                        ((nat -> bool)
                                                        [@closure :nat]))
                                                     *
                                                     ((dun ->
                                                         ((dun -> dun)
                                                         [@closure
                                                           :(dun *
                                                              (dun -> nat))]))
                                                     [@closure :dun -> nat])
                                                     *
                                                     ('l36 option ->
                                                        (('j36 ->
                                                            ('j36, 'l36)
                                                              result)
                                                        [@closure
                                                          :'l36 option]))
                                                     *
                                                     ((dun ->
                                                         ((dun -> dun option)
                                                         [@closure
                                                           :((dun ->
                                                                ((dun -> bool)
                                                                [@closure
                                                                  :dun]))
                                                              * dun *
                                                              (dun ->
                                                                 ((dun -> dun)
                                                                 [@closure
                                                                   :dun])))]))
                                                     [@closure
                                                       :((dun ->
                                                            ((dun -> bool)
                                                            [@closure :
                                                              dun]))
                                                          *
                                                          (dun ->
                                                             ((dun -> dun)
                                                             [@closure :
                                                               dun])))]))]))
                                           [@closure
                                             :((nat ->
                                                  ((nat -> nat)[@closure
                                                                 :nat]))
                                                *
                                                (bool ->
                                                   ((bool -> bool)[@closure
                                                                    :
                                                                    bool]))
                                                * nat *
                                                ((dun ->
                                                    ((dun -> dun)[@closure
                                                                   :(dun *
                                                                    (dun ->
                                                                    nat))]))
                                                [@closure :dun -> nat]) *
                                                (dun ->
                                                   ((dun -> bool)[@closure
                                                                   :dun]))
                                                *
                                                (address ->
                                                   ((address -> bool)
                                                   [@closure :address]))
                                                *
                                                (dun ->
                                                   ((dun -> bool)[@closure
                                                                   :dun]))
                                                *
                                                (nat ->
                                                   ((nat -> bool)[@closure
                                                                   :nat]))
                                                *
                                                ((dun ->
                                                    ((dun -> dun)[@closure
                                                                   :(dun *
                                                                    (dun ->
                                                                    nat))]))
                                                [@closure :dun -> nat]) *
                                                ('h36 option ->
                                                   (('f36 ->
                                                       ('f36, 'h36) result)
                                                   [@closure :'h36 option]))
                                                *
                                                ((dun ->
                                                    ((dun -> dun option)
                                                    [@closure
                                                      :((dun ->
                                                           ((dun -> bool)
                                                           [@closure :
                                                             dun]))
                                                         * dun *
                                                         (dun ->
                                                            ((dun -> dun)
                                                            [@closure :
                                                              dun])))]))
                                                [@closure
                                                  :((dun ->
                                                       ((dun -> bool)
                                                       [@closure :dun]))
                                                     *
                                                     (dun ->
                                                        ((dun -> dun)
                                                        [@closure :dun])))]))])])
                                         * ((msg * (timestamp * (address *
                                         (dun * dun)))) * (nat * (nat *
                                         nat))))]). Type variables 'a36, 'a37, 'b36, 'b37, 'c36, 'c37, 'd36, 'd37, 'e37, 'f36, 'f37, 'h36, 'j36, 'l36, 'n36, 'p36 were replaced by unit.
Storage initializer generated in "tests/extracted-code/liquidity-extract/tests/escrow.initializer.tz"
File "tests/extracted-code/liquidity-extract/tests/escrow.tz" generated
You may want to typecheck with:
  dune-client typecheck script tests/extracted-code/liquidity-extract/tests/escrow.tz
Main contract Liquidity_eip20token
./tests/extracted-code/liquidity-extract/tests/liquidity_eip20token.liq:78.11-78.12: Warning: 
unused variable "t"
./tests/extracted-code/liquidity-extract/tests/liquidity_eip20token.liq: Warning: 
unused variable "eq_addr"
./tests/extracted-code/liquidity-extract/tests/liquidity_eip20token.liq: Warning: 
unused variable "ltb_time"
./tests/extracted-code/liquidity-extract/tests/liquidity_eip20token.liq: Warning: 
unused variable "leb_time"
./tests/extracted-code/liquidity-extract/tests/liquidity_eip20token.liq: Warning: 
unused variable "eqb_time"
./tests/extracted-code/liquidity-extract/tests/liquidity_eip20token.liq: Warning: 
unused variable "andb"
./tests/extracted-code/liquidity-extract/tests/liquidity_eip20token.liq: Warning: 
unused variable "eqNat"
./tests/extracted-code/liquidity-extract/tests/liquidity_eip20token.liq: Warning: 
unused variable "lxorNat"
./tests/extracted-code/liquidity-extract/tests/liquidity_eip20token.liq: Warning: 
unused variable "ltNat"
./tests/extracted-code/liquidity-extract/tests/liquidity_eip20token.liq: Warning: 
unused variable "leNat"
./tests/extracted-code/liquidity-extract/tests/liquidity_eip20token.liq: Warning: 
unused variable "subNat"
./tests/extracted-code/liquidity-extract/tests/liquidity_eip20token.liq: Warning: 
unused variable "mulNat"
./tests/extracted-code/liquidity-extract/tests/liquidity_eip20token.liq: Warning: 
unused variable "addNat"
./tests/extracted-code/liquidity-extract/tests/liquidity_eip20token.liq: Warning: 
unused variable "multTez"
./tests/extracted-code/liquidity-extract/tests/liquidity_eip20token.liq: Warning: 
unused variable "divTez"
./tests/extracted-code/liquidity-extract/tests/liquidity_eip20token.liq: Warning: 
unused variable "evenTez"
./tests/extracted-code/liquidity-extract/tests/liquidity_eip20token.liq: Warning: 
unused variable "eqTez"
./tests/extracted-code/liquidity-extract/tests/liquidity_eip20token.liq: Warning: 
unused variable "gtTez"
./tests/extracted-code/liquidity-extract/tests/liquidity_eip20token.liq: Warning: 
unused variable "ltTez"
./tests/extracted-code/liquidity-extract/tests/liquidity_eip20token.liq: Warning: 
unused variable "leTez"
./tests/extracted-code/liquidity-extract/tests/liquidity_eip20token.liq: Warning: 
unused variable "subTez"
./tests/extracted-code/liquidity-extract/tests/liquidity_eip20token.liq: Warning: 
unused variable "addTez"
./tests/extracted-code/liquidity-extract/tests/liquidity_eip20token.liq: Warning: 
unused variable "powInt"
./tests/extracted-code/liquidity-extract/tests/liquidity_eip20token.liq: Warning: 
unused variable "modInt"
./tests/extracted-code/liquidity-extract/tests/liquidity_eip20token.liq: Warning: 
unused variable "eqInt"
./tests/extracted-code/liquidity-extract/tests/liquidity_eip20token.liq: Warning: 
unused variable "leInt"
./tests/extracted-code/liquidity-extract/tests/liquidity_eip20token.liq: Warning: 
unused variable "mulInt"
./tests/extracted-code/liquidity-extract/tests/liquidity_eip20token.liq: Warning: 
unused variable "snd"
./tests/extracted-code/liquidity-extract/tests/liquidity_eip20token.liq: Warning: 
unused variable "fst"
./tests/extracted-code/liquidity-extract/tests/liquidity_eip20token.liq:125.78-125.82: Warning: 
unused variable "ctx_"
./tests/extracted-code/liquidity-extract/tests/liquidity_eip20token.liq:2.38-2.43: Warning: 
Unresolved type 'a. Type variables 'a were replaced by unit.
./tests/extracted-code/liquidity-extract/tests/liquidity_eip20token.liq:2.18-2.19: Warning: 
Unresolved type ('a * 'b). Type variables 'a, 'b were replaced by unit.
./tests/extracted-code/liquidity-extract/tests/liquidity_eip20token.liq:3.38-3.43: Warning: 
Unresolved type 'b. Type variables 'b were replaced by unit.
./tests/extracted-code/liquidity-extract/tests/liquidity_eip20token.liq:3.18-3.19: Warning: 
Unresolved type ('a * 'b). Type variables 'a, 'b were replaced by unit.
./tests/extracted-code/liquidity-extract/tests/liquidity_eip20token.liq:84.35-89.97: Warning: 
Unresolved type ((address ->
    ((int ->
        ((state -> result)[@closure
                            :(int * ((unit -> 's18 result)[@closure :nat]) *
                               address *
                               (((address, int) map ->
                                   ((address ->
                                       ((int -> (address, int) map)[@closure
                                                                    :((int ->
                                                                    ((int ->
                                                                    int)[@closure
                                                                    :int])) *
                                                                    address *
                                                                    (address,
                                                                    int) map)]))
                                   [@closure
                                     :((int -> ((int -> int)[@closure :int]))
                                        * (address, int) map)]))[@closure
                                                                  :int ->
                                                                    ((
                                                                    int ->
                                                                    int)
                                                                    [@closure
                                                                    :int])])
                               * (int -> ((int -> bool)[@closure :int])) *
                               (int -> ((int -> int)[@closure :int])) *
                               address)]))[@closure
                                            :(((unit -> 'r18 result)[@closure
                                                                    :nat])
                                               * address *
                                               (((address, int) map ->
                                                   ((address ->
                                                       ((int ->
                                                           (address, int) map)
                                                       [@closure
                                                         :((int ->
                                                              ((int -> int)
                                                              [@closure :
                                                                int]))
                                                            * address *
                                                            (address, 
                                                            int) map)]))
                                                   [@closure
                                                     :((int ->
                                                          ((int -> int)
                                                          [@closure :
                                                            int]))
                                                        * (address, int) map)]))
                                               [@closure
                                                 :int ->
                                                    ((int -> int)[@closure
                                                                   :int])])
                                               *
                                               (int ->
                                                  ((int -> bool)[@closure
                                                                  :int]))
                                               *
                                               (int ->
                                                  ((int -> int)[@closure
                                                                 :int]))
                                               * address)]))[@closure
                                                              :(((unit ->
                                                                    'q18
                                                                    result)
                                                                 [@closure
                                                                   :nat])
                                                                 * address *
                                                                 (((address,
                                                                    int) map
                                                                    ->
                                                                    ((
                                                                    address
                                                                    ->
                                                                    ((int ->
                                                                    (address,
                                                                    int) map)
                                                                    [@closure
                                                                    :((int ->
                                                                    ((int ->
                                                                    int)[@closure
                                                                    :int])) *
                                                                    address *
                                                                    (address,
                                                                    int) map)]))
                                                                    [@closure
                                                                    :((int ->
                                                                    ((int ->
                                                                    int)[@closure
                                                                    :int])) *
                                                                    (address,
                                                                    int) map)]))
                                                                 [@closure
                                                                   :int ->
                                                                    ((int ->
                                                                    int)
                                                                    [@closure
                                                                    :int])])
                                                                 *
                                                                 (int ->
                                                                    ((
                                                                    int ->
                                                                    bool)
                                                                    [@closure
                                                                    :int]))
                                                                 *
                                                                 (int ->
                                                                    ((
                                                                    int ->
                                                                    int)
                                                                    [@closure
                                                                    :int])))]). Type variables 'q18, 'r18, 's18 were replaced by unit.
./tests/extracted-code/liquidity-extract/tests/liquidity_eip20token.liq:84.51-89.97: Warning: 
Unresolved type ((int ->
    ((state -> result)[@closure
                        :(int * ((unit -> 's18 result)[@closure :nat]) *
                           address *
                           (((address, int) map ->
                               ((address ->
                                   ((int -> (address, int) map)[@closure
                                                                 :((int ->
                                                                    ((int ->
                                                                    int)
                                                                    [@closure
                                                                    :int])) *
                                                                    address *
                                                                    (
                                                                    address,
                                                                    int) map)]))
                               [@closure
                                 :((int -> ((int -> int)[@closure :int])) *
                                    (address, int) map)]))[@closure
                                                            :int ->
                                                               ((int -> int)
                                                               [@closure
                                                                 :int])])
                           * (int -> ((int -> bool)[@closure :int])) *
                           (int -> ((int -> int)[@closure :int])) * address)]))
[@closure
  :(((unit -> 'r18 result)[@closure :nat]) * address *
     (((address, int) map ->
         ((address ->
             ((int -> (address, int) map)[@closure
                                           :((int ->
                                                ((int -> int)[@closure :int]))
                                              * address * (address, int) map)]))
         [@closure
           :((int -> ((int -> int)[@closure :int])) * (address, int) map)]))
     [@closure :int -> ((int -> int)[@closure :int])]) *
     (int -> ((int -> bool)[@closure :int])) *
     (int -> ((int -> int)[@closure :int])) * address)]). Type variables 'r18, 's18 were replaced by unit.
./tests/extracted-code/liquidity-extract/tests/liquidity_eip20token.liq:84.73-89.97: Warning: 
Unresolved type ((state -> result)[@closure
                    :(int * ((unit -> 's18 result)[@closure :nat]) * address
                       *
                       (((address, int) map ->
                           ((address ->
                               ((int -> (address, int) map)[@closure
                                                             :((int ->
                                                                  ((int ->
                                                                    int)
                                                                  [@closure
                                                                    :
                                                                    int]))
                                                                * address *
                                                                (address,
                                                                int) map)]))
                           [@closure
                             :((int -> ((int -> int)[@closure :int])) *
                                (address, int) map)]))[@closure
                                                        :int ->
                                                           ((int -> int)
                                                           [@closure :
                                                             int])])
                       * (int -> ((int -> bool)[@closure :int])) *
                       (int -> ((int -> int)[@closure :int])) * address)]). Type variables 's18 were replaced by unit.
./tests/extracted-code/liquidity-extract/tests/liquidity_eip20token.liq:95.43-105.25: Warning: 
Unresolved type ((address ->
    ((address ->
        ((int ->
            ((state -> result)[@closure
                                :(int * nat * address *
                                   ((unit -> 'i19 result)[@closure :nat]) *
                                   address *
                                   (((address, int) map ->
                                       ((address ->
                                           ((int -> (address, int) map)
                                           [@closure
                                             :((int ->
                                                  ((int -> int)[@closure
                                                                 :int]))
                                                * address * (address, 
                                                int) map)]))[@closure
                                                              :((int ->
                                                                   ((
                                                                   int -> 
                                                                    int)
                                                                   [@closure
                                                                    :int]))
                                                                 * (address,
                                                                 int) map)]))
                                   [@closure
                                     :int -> ((int -> int)[@closure :int])])
                                   * (int -> ((int -> bool)[@closure :int]))
                                   *
                                   (bool -> ((bool -> bool)[@closure :bool]))
                                   *
                                   ('k19 option ->
                                      (('j19 -> ('j19, 'k19) result)[@closure
                                                                    :'k19
                                                                    option]))
                                   * (int -> ((int -> int)[@closure :int])) *
                                   address)]))[@closure
                                                :(nat * address *
                                                   ((unit -> 'f19 result)
                                                   [@closure :nat]) * address
                                                   *
                                                   (((address, int) map ->
                                                       ((address ->
                                                           ((int ->
                                                               (address, 
                                                                 int) map)
                                                           [@closure
                                                             :((int ->
                                                                  ((int ->
                                                                    int)
                                                                  [@closure
                                                                    :
                                                                    int]))
                                                                * address *
                                                                (address,
                                                                int) map)]))
                                                       [@closure
                                                         :((int ->
                                                              ((int -> int)
                                                              [@closure :
                                                                int]))
                                                            * (address, 
                                                            int) map)]))
                                                   [@closure
                                                     :int ->
                                                        ((int -> int)
                                                        [@closure :int])])
                                                   *
                                                   (int ->
                                                      ((int -> bool)[@closure
                                                                    :int]))
                                                   *
                                                   (bool ->
                                                      ((bool -> bool)
                                                      [@closure :bool]))
                                                   *
                                                   ('h19 option ->
                                                      (('g19 ->
                                                          ('g19, 'h19) result)
                                                      [@closure :'h19 option]))
                                                   *
                                                   (int ->
                                                      ((int -> int)[@closure
                                                                    :int]))
                                                   * address)]))[@closure
                                                                  :(nat *
                                                                    address *
                                                                    ((
                                                                    unit ->
                                                                    'c19
                                                                    result)
                                                                    [@closure
                                                                    :nat]) *
                                                                    address *
                                                                    ((
                                                                    (address,
                                                                    int) map
                                                                    ->
                                                                    ((address
                                                                    ->
                                                                    ((int ->
                                                                    (address,
                                                                    int) map)
                                                                    [@closure
                                                                    :((int ->
                                                                    ((int ->
                                                                    int)[@closure
                                                                    :int])) *
                                                                    address *
                                                                    (address,
                                                                    int) map)]))
                                                                    [@closure
                                                                    :((int ->
                                                                    ((int ->
                                                                    int)[@closure
                                                                    :int])) *
                                                                    (address,
                                                                    int) map)]))
                                                                    [@closure
                                                                    :int ->
                                                                    ((int ->
                                                                    int)
                                                                    [@closure
                                                                    :int])])
                                                                    *
                                                                    (int ->
                                                                    ((int ->
                                                                    bool)
                                                                    [@closure
                                                                    :int])) *
                                                                    (bool ->
                                                                    ((bool ->
                                                                    bool)
                                                                    [@closure
                                                                    :bool]))
                                                                    *
                                                                    ('e19
                                                                    option ->
                                                                    (('d19 ->
                                                                    ('d19,
                                                                    'e19)
                                                                    result)
                                                                    [@closure
                                                                    :'e19
                                                                    option]))
                                                                    *
                                                                    (int ->
                                                                    ((int ->
                                                                    int)
                                                                    [@closure
                                                                    :int])))]))
[@closure
  :(nat * address * ((unit -> 'z18 result)[@closure :nat]) *
     (((address, int) map ->
         ((address ->
             ((int -> (address, int) map)[@closure
                                           :((int ->
                                                ((int -> int)[@closure :int]))
                                              * address * (address, int) map)]))
         [@closure
           :((int -> ((int -> int)[@closure :int])) * (address, int) map)]))
     [@closure :int -> ((int -> int)[@closure :int])]) *
     (int -> ((int -> bool)[@closure :int])) *
     (bool -> ((bool -> bool)[@closure :bool])) *
     ('b19 option -> (('a19 -> ('a19, 'b19) result)[@closure :'b19 option]))
     * (int -> ((int -> int)[@closure :int])))]). Type variables 'a19, 'b19, 'c19, 'd19, 'e19, 'f19, 'g19, 'h19, 'i19, 'j19, 'k19, 'z18 were replaced by unit.
./tests/extracted-code/liquidity-extract/tests/liquidity_eip20token.liq:95.61-105.25: Warning: 
Unresolved type ((address ->
    ((int ->
        ((state -> result)[@closure
                            :(int * nat * address *
                               ((unit -> 'i19 result)[@closure :nat]) *
                               address *
                               (((address, int) map ->
                                   ((address ->
                                       ((int -> (address, int) map)[@closure
                                                                    :((int ->
                                                                    ((int ->
                                                                    int)[@closure
                                                                    :int])) *
                                                                    address *
                                                                    (address,
                                                                    int) map)]))
                                   [@closure
                                     :((int -> ((int -> int)[@closure :int]))
                                        * (address, int) map)]))[@closure
                                                                  :int ->
                                                                    ((
                                                                    int ->
                                                                    int)
                                                                    [@closure
                                                                    :int])])
                               * (int -> ((int -> bool)[@closure :int])) *
                               (bool -> ((bool -> bool)[@closure :bool])) *
                               ('k19 option ->
                                  (('j19 -> ('j19, 'k19) result)[@closure
                                                                  :'k19
                                                                    option]))
                               * (int -> ((int -> int)[@closure :int])) *
                               address)]))[@closure
                                            :(nat * address *
                                               ((unit -> 'f19 result)
                                               [@closure :nat]) * address *
                                               (((address, int) map ->
                                                   ((address ->
                                                       ((int ->
                                                           (address, int) map)
                                                       [@closure
                                                         :((int ->
                                                              ((int -> int)
                                                              [@closure :
                                                                int]))
                                                            * address *
                                                            (address, 
                                                            int) map)]))
                                                   [@closure
                                                     :((int ->
                                                          ((int -> int)
                                                          [@closure :
                                                            int]))
                                                        * (address, int) map)]))
                                               [@closure
                                                 :int ->
                                                    ((int -> int)[@closure
                                                                   :int])])
                                               *
                                               (int ->
                                                  ((int -> bool)[@closure
                                                                  :int]))
                                               *
                                               (bool ->
                                                  ((bool -> bool)[@closure
                                                                   :bool]))
                                               *
                                               ('h19 option ->
                                                  (('g19 ->
                                                      ('g19, 'h19) result)
                                                  [@closure :'h19 option]))
                                               *
                                               (int ->
                                                  ((int -> int)[@closure
                                                                 :int]))
                                               * address)]))[@closure
                                                              :(nat * address
                                                                 *
                                                                 ((unit ->
                                                                    'c19
                                                                    result)
                                                                 [@closure
                                                                   :nat])
                                                                 * address *
                                                                 (((address,
                                                                    int) map
                                                                    ->
                                                                    ((
                                                                    address
                                                                    ->
                                                                    ((int ->
                                                                    (address,
                                                                    int) map)
                                                                    [@closure
                                                                    :((int ->
                                                                    ((int ->
                                                                    int)[@closure
                                                                    :int])) *
                                                                    address *
                                                                    (address,
                                                                    int) map)]))
                                                                    [@closure
                                                                    :((int ->
                                                                    ((int ->
                                                                    int)[@closure
                                                                    :int])) *
                                                                    (address,
                                                                    int) map)]))
                                                                 [@closure
                                                                   :int ->
                                                                    ((int ->
                                                                    int)
                                                                    [@closure
                                                                    :int])])
                                                                 *
                                                                 (int ->
                                                                    ((
                                                                    int ->
                                                                    bool)
                                                                    [@closure
                                                                    :int]))
                                                                 *
                                                                 (bool ->
                                                                    ((
                                                                    bool ->
                                                                    bool)
                                                                    [@closure
                                                                    :bool]))
                                                                 *
                                                                 ('e19 option
                                                                    ->
                                                                    ((
                                                                    'd19 ->
                                                                    ('d19,
                                                                    'e19)
                                                                    result)
                                                                    [@closure
                                                                    :'e19
                                                                    option]))
                                                                 *
                                                                 (int ->
                                                                    ((
                                                                    int ->
                                                                    int)
                                                                    [@closure
                                                                    :int])))]). Type variables 'c19, 'd19, 'e19, 'f19, 'g19, 'h19, 'i19, 'j19, 'k19 were replaced by unit.
./tests/extracted-code/liquidity-extract/tests/liquidity_eip20token.liq:95.77-105.25: Warning: 
Unresolved type ((int ->
    ((state -> result)[@closure
                        :(int * nat * address *
                           ((unit -> 'i19 result)[@closure :nat]) * address *
                           (((address, int) map ->
                               ((address ->
                                   ((int -> (address, int) map)[@closure
                                                                 :((int ->
                                                                    ((int ->
                                                                    int)
                                                                    [@closure
                                                                    :int])) *
                                                                    address *
                                                                    (
                                                                    address,
                                                                    int) map)]))
                               [@closure
                                 :((int -> ((int -> int)[@closure :int])) *
                                    (address, int) map)]))[@closure
                                                            :int ->
                                                               ((int -> int)
                                                               [@closure
                                                                 :int])])
                           * (int -> ((int -> bool)[@closure :int])) *
                           (bool -> ((bool -> bool)[@closure :bool])) *
                           ('k19 option ->
                              (('j19 -> ('j19, 'k19) result)[@closure
                                                              :'k19 option]))
                           * (int -> ((int -> int)[@closure :int])) *
                           address)]))[@closure
                                        :(nat * address *
                                           ((unit -> 'f19 result)[@closure
                                                                   :nat])
                                           * address *
                                           (((address, int) map ->
                                               ((address ->
                                                   ((int ->
                                                       (address, int) map)
                                                   [@closure
                                                     :((int ->
                                                          ((int -> int)
                                                          [@closure :
                                                            int]))
                                                        * address * (
                                                        address, int) map)]))
                                               [@closure
                                                 :((int ->
                                                      ((int -> int)[@closure
                                                                    :int]))
                                                    * (address, int) map)]))
                                           [@closure
                                             :int ->
                                                ((int -> int)[@closure :int])])
                                           *
                                           (int ->
                                              ((int -> bool)[@closure :int]))
                                           *
                                           (bool ->
                                              ((bool -> bool)[@closure :bool]))
                                           *
                                           ('h19 option ->
                                              (('g19 -> ('g19, 'h19) result)
                                              [@closure :'h19 option]))
                                           *
                                           (int ->
                                              ((int -> int)[@closure :int]))
                                           * address)]). Type variables 'f19, 'g19, 'h19, 'i19, 'j19, 'k19 were replaced by unit.
./tests/extracted-code/liquidity-extract/tests/liquidity_eip20token.liq:95.99-105.25: Warning: 
Unresolved type ((state -> result)[@closure
                    :(int * nat * address *
                       ((unit -> 'i19 result)[@closure :nat]) * address *
                       (((address, int) map ->
                           ((address ->
                               ((int -> (address, int) map)[@closure
                                                             :((int ->
                                                                  ((int ->
                                                                    int)
                                                                  [@closure
                                                                    :
                                                                    int]))
                                                                * address *
                                                                (address,
                                                                int) map)]))
                           [@closure
                             :((int -> ((int -> int)[@closure :int])) *
                                (address, int) map)]))[@closure
                                                        :int ->
                                                           ((int -> int)
                                                           [@closure :
                                                             int])])
                       * (int -> ((int -> bool)[@closure :int])) *
                       (bool -> ((bool -> bool)[@closure :bool])) *
                       ('k19 option ->
                          (('j19 -> ('j19, 'k19) result)[@closure
                                                          :'k19 option]))
                       * (int -> ((int -> int)[@closure :int])) * address)]). Type variables 'i19, 'j19, 'k19 were replaced by unit.
./tests/extracted-code/liquidity-extract/tests/liquidity_eip20token.liq:111.63-120.33: Warning: 
Unresolved type ((state ->
    ((msg option -> result)[@closure
                             :((timestamp * (address * (dun * dun))) * nat *
                                state *
                                (address ->
                                   ((address ->
                                       ((int ->
                                           ((state -> 'b26 result)[@closure
                                                                    :
                                                                    (int *
                                                                    address *
                                                                    address)]))
                                       [@closure :(address * address)]))
                                   [@closure :address]))
                                *
                                ((address ->
                                    ((address ->
                                        ((int ->
                                            ((state -> result)[@closure
                                                                :(int *
                                                                   ((
                                                                   unit ->
                                                                    'j26
                                                                    result)
                                                                   [@closure
                                                                    :nat])
                                                                   * address
                                                                   *
                                                                   ((
                                                                   (address,
                                                                    int) map
                                                                    ->
                                                                    ((
                                                                    address
                                                                    ->
                                                                    ((int ->
                                                                    (address,
                                                                    int) map)
                                                                    [@closure
                                                                    :((int ->
                                                                    ((int ->
                                                                    int)[@closure
                                                                    :int])) *
                                                                    address *
                                                                    (address,
                                                                    int) map)]))
                                                                    [@closure
                                                                    :((int ->
                                                                    ((int ->
                                                                    int)[@closure
                                                                    :int])) *
                                                                    (address,
                                                                    int) map)]))
                                                                   [@closure
                                                                    :int ->
                                                                    ((int ->
                                                                    int)
                                                                    [@closure
                                                                    :int])])
                                                                   *
                                                                   (int ->
                                                                    ((int ->
                                                                    bool)
                                                                    [@closure
                                                                    :int]))
                                                                   *
                                                                   (int ->
                                                                    ((int ->
                                                                    int)
                                                                    [@closure
                                                                    :int]))
                                                                   * address)]))
                                        [@closure
                                          :(((unit -> 'h26 result)[@closure
                                                                    :
                                                                    nat])
                                             * address *
                                             (((address, int) map ->
                                                 ((address ->
                                                     ((int ->
                                                         (address, int) map)
                                                     [@closure
                                                       :((int ->
                                                            ((int -> int)
                                                            [@closure :
                                                              int]))
                                                          * address *
                                                          (address, int) map)]))
                                                 [@closure
                                                   :((int ->
                                                        ((int -> int)
                                                        [@closure :int]))
                                                      * (address, int) map)]))
                                             [@closure
                                               :int ->
                                                  ((int -> int)[@closure
                                                                 :int])])
                                             *
                                             (int ->
                                                ((int -> bool)[@closure :int]))
                                             *
                                             (int ->
                                                ((int -> int)[@closure :int]))
                                             * address)]))[@closure
                                                            :(((unit ->
                                                                  'f26 result)
                                                               [@closure
                                                                 :nat])
                                                               * address *
                                                               (((address,
                                                                   int) map
                                                                   ->
                                                                   ((
                                                                   address ->
                                                                    ((
                                                                    int ->
                                                                    (address,
                                                                    int) map)
                                                                    [@closure
                                                                    :((int ->
                                                                    ((int ->
                                                                    int)[@closure
                                                                    :int])) *
                                                                    address *
                                                                    (address,
                                                                    int) map)]))
                                                                   [@closure
                                                                    :((int ->
                                                                    ((int ->
                                                                    int)[@closure
                                                                    :int])) *
                                                                    (address,
                                                                    int) map)]))
                                                               [@closure
                                                                 :int ->
                                                                    ((
                                                                    int ->
                                                                    int)
                                                                    [@closure
                                                                    :int])])
                                                               *
                                                               (int ->
                                                                  ((int ->
                                                                    bool)
                                                                  [@closure
                                                                    :
                                                                    int]))
                                                               *
                                                               (int ->
                                                                  ((int ->
                                                                    int)
                                                                  [@closure
                                                                    :
                                                                    int])))]))
                                [@closure
                                  :(((unit -> 'd26 result)[@closure :nat]) *
                                     (((address, int) map ->
                                         ((address ->
                                             ((int -> (address, int) map)
                                             [@closure
                                               :((int ->
                                                    ((int -> int)[@closure
                                                                   :int]))
                                                  * address * (address, 
                                                  int) map)]))[@closure
                                                                :((int ->
                                                                    ((
                                                                    int ->
                                                                    int)
                                                                    [@closure
                                                                    :int]))
                                                                   *
                                                                   (address,
                                                                   int) map)]))
                                     [@closure
                                       :int -> ((int -> int)[@closure :int])])
                                     *
                                     (int -> ((int -> bool)[@closure :int]))
                                     *
                                     (int -> ((int -> int)[@closure :int])))])
                                *
                                ((address ->
                                    ((address ->
                                        ((address ->
                                            ((int ->
                                                ((state -> result)[@closure
                                                                    :
                                                                    (int *
                                                                    nat *
                                                                    address *
                                                                    ((unit ->
                                                                    'g25
                                                                    result)
                                                                    [@closure
                                                                    :nat]) *
                                                                    address *
                                                                    (((address,
                                                                    int) map
                                                                    ->
                                                                    ((address
                                                                    ->
                                                                    ((int ->
                                                                    (address,
                                                                    int) map)
                                                                    [@closure
                                                                    :((int ->
                                                                    ((int ->
                                                                    int)[@closure
                                                                    :int])) *
                                                                    address *
                                                                    (address,
                                                                    int) map)]))
                                                                    [@closure
                                                                    :((int ->
                                                                    ((int ->
                                                                    int)[@closure
                                                                    :int])) *
                                                                    (address,
                                                                    int) map)]))
                                                                    [@closure
                                                                    :int ->
                                                                    ((int ->
                                                                    int)
                                                                    [@closure
                                                                    :int])])
                                                                    *
                                                                    (int ->
                                                                    ((int ->
                                                                    bool)
                                                                    [@closure
                                                                    :int])) *
                                                                    (bool ->
                                                                    ((bool ->
                                                                    bool)
                                                                    [@closure
                                                                    :bool]))
                                                                    *
                                                                    ('m25
                                                                    option ->
                                                                    (('j25 ->
                                                                    ('j25,
                                                                    'm25)
                                                                    result)
                                                                    [@closure
                                                                    :'m25
                                                                    option]))
                                                                    *
                                                                    (int ->
                                                                    ((int ->
                                                                    int)
                                                                    [@closure
                                                                    :int])) *
                                                                    address)]))
                                            [@closure
                                              :(nat * address *
                                                 ((unit -> 'x24 result)
                                                 [@closure :nat]) * address *
                                                 (((address, int) map ->
                                                     ((address ->
                                                         ((int ->
                                                             (address, 
                                                               int) map)
                                                         [@closure
                                                           :((int ->
                                                                ((int -> int)
                                                                [@closure
                                                                  :int]))
                                                              * address *
                                                              (address, 
                                                              int) map)]))
                                                     [@closure
                                                       :((int ->
                                                            ((int -> int)
                                                            [@closure :
                                                              int]))
                                                          * (address, 
                                                          int) map)]))
                                                 [@closure
                                                   :int ->
                                                      ((int -> int)[@closure
                                                                    :int])])
                                                 *
                                                 (int ->
                                                    ((int -> bool)[@closure
                                                                    :
                                                                    int]))
                                                 *
                                                 (bool ->
                                                    ((bool -> bool)[@closure
                                                                    :bool]))
                                                 *
                                                 ('d25 option ->
                                                    (('a25 ->
                                                        ('a25, 'd25) result)
                                                    [@closure :'d25 option]))
                                                 *
                                                 (int ->
                                                    ((int -> int)[@closure
                                                                   :int]))
                                                 * address)]))[@closure
                                                                :(nat *
                                                                   address *
                                                                   ((
                                                                   unit ->
                                                                    'o24
                                                                    result)
                                                                   [@closure
                                                                    :nat])
                                                                   * address
                                                                   *
                                                                   ((
                                                                   (address,
                                                                    int) map
                                                                    ->
                                                                    ((
                                                                    address
                                                                    ->
                                                                    ((int ->
                                                                    (address,
                                                                    int) map)
                                                                    [@closure
                                                                    :((int ->
                                                                    ((int ->
                                                                    int)[@closure
                                                                    :int])) *
                                                                    address *
                                                                    (address,
                                                                    int) map)]))
                                                                    [@closure
                                                                    :((int ->
                                                                    ((int ->
                                                                    int)[@closure
                                                                    :int])) *
                                                                    (address,
                                                                    int) map)]))
                                                                   [@closure
                                                                    :int ->
                                                                    ((int ->
                                                                    int)
                                                                    [@closure
                                                                    :int])])
                                                                   *
                                                                   (int ->
                                                                    ((int ->
                                                                    bool)
                                                                    [@closure
                                                                    :int]))
                                                                   *
                                                                   (bool ->
                                                                    ((bool ->
                                                                    bool)
                                                                    [@closure
                                                                    :bool]))
                                                                   *
                                                                   ('u24
                                                                    option ->
                                                                    (('r24 ->
                                                                    ('r24,
                                                                    'u24)
                                                                    result)
                                                                    [@closure
                                                                    :'u24
                                                                    option]))
                                                                   *
                                                                   (int ->
                                                                    ((int ->
                                                                    int)
                                                                    [@closure
                                                                    :int])))]))
                                    [@closure
                                      :(nat * address *
                                         ((unit -> 'i24 result)[@closure
                                                                 :nat])
                                         *
                                         (((address, int) map ->
                                             ((address ->
                                                 ((int -> (address, int) map)
                                                 [@closure
                                                   :((int ->
                                                        ((int -> int)
                                                        [@closure :int]))
                                                      * address * (address,
                                                      int) map)]))[@closure
                                                                    :
                                                                    ((int ->
                                                                    ((int ->
                                                                    int)[@closure
                                                                    :int])) *
                                                                    (address,
                                                                    int) map)]))
                                         [@closure
                                           :int ->
                                              ((int -> int)[@closure :int])])
                                         *
                                         (int ->
                                            ((int -> bool)[@closure :int]))
                                         *
                                         (bool ->
                                            ((bool -> bool)[@closure :bool]))
                                         *
                                         ('m24 option ->
                                            (('k24 -> ('k24, 'm24) result)
                                            [@closure :'m24 option]))
                                         *
                                         (int ->
                                            ((int -> int)[@closure :int])))]))
                                [@closure
                                  :(nat *
                                     ((unit -> 'l26 result)[@closure :nat]) *
                                     (((address, int) map ->
                                         ((address ->
                                             ((int -> (address, int) map)
                                             [@closure
                                               :((int ->
                                                    ((int -> int)[@closure
                                                                   :int]))
                                                  * address * (address, 
                                                  int) map)]))[@closure
                                                                :((int ->
                                                                    ((
                                                                    int ->
                                                                    int)
                                                                    [@closure
                                                                    :int]))
                                                                   *
                                                                   (address,
                                                                   int) map)]))
                                     [@closure
                                       :int -> ((int -> int)[@closure :int])])
                                     *
                                     (int -> ((int -> bool)[@closure :int]))
                                     *
                                     (bool ->
                                        ((bool -> bool)[@closure :bool]))
                                     *
                                     ('p26 option ->
                                        (('n26 -> ('n26, 'p26) result)
                                        [@closure :'p26 option]))
                                     *
                                     (int -> ((int -> int)[@closure :int])))]))]))
[@closure
  :((timestamp * (address * (dun * dun))) * nat *
     (address ->
        ((address ->
            ((int ->
                ((state -> 'm26 result)[@closure :(int * address * address)]))
            [@closure :(address * address)]))[@closure :address]))
     *
     ((address ->
         ((address ->
             ((int ->
                 ((state -> result)[@closure
                                     :(int *
                                        ((unit -> 'l24 result)[@closure :nat])
                                        * address *
                                        (((address, int) map ->
                                            ((address ->
                                                ((int -> (address, int) map)
                                                [@closure
                                                  :((int ->
                                                       ((int -> int)[@closure
                                                                    :int]))
                                                     * address * (address,
                                                     int) map)]))[@closure
                                                                   :((int ->
                                                                    ((int ->
                                                                    int)[@closure
                                                                    :int])) *
                                                                    (address,
                                                                    int) map)]))
                                        [@closure
                                          :int ->
                                             ((int -> int)[@closure :int])])
                                        *
                                        (int ->
                                           ((int -> bool)[@closure :int]))
                                        *
                                        (int -> ((int -> int)[@closure :int]))
                                        * address)]))[@closure
                                                       :(((unit ->
                                                             'j24 result)
                                                          [@closure :
                                                            nat])
                                                          * address *
                                                          (((address, 
                                                              int) map ->
                                                              ((address ->
                                                                  ((int ->
                                                                    (address,
                                                                    int) map)
                                                                  [@closure
                                                                    :
                                                                    ((int ->
                                                                    ((int ->
                                                                    int)[@closure
                                                                    :int])) *
                                                                    address *
                                                                    (address,
                                                                    int) map)]))
                                                              [@closure
                                                                :((int ->
                                                                    ((
                                                                    int ->
                                                                    int)
                                                                    [@closure
                                                                    :int]))
                                                                   *
                                                                   (address,
                                                                   int) map)]))
                                                          [@closure
                                                            :int ->
                                                               ((int -> int)
                                                               [@closure
                                                                 :int])])
                                                          *
                                                          (int ->
                                                             ((int -> bool)
                                                             [@closure :
                                                               int]))
                                                          *
                                                          (int ->
                                                             ((int -> int)
                                                             [@closure :
                                                               int]))
                                                          * address)]))
         [@closure
           :(((unit -> 'h24 result)[@closure :nat]) * address *
              (((address, int) map ->
                  ((address ->
                      ((int -> (address, int) map)[@closure
                                                    :((int ->
                                                         ((int -> int)
                                                         [@closure :int]))
                                                       * address * (address,
                                                       int) map)]))[@closure
                                                                    :((int ->
                                                                    ((int ->
                                                                    int)[@closure
                                                                    :int])) *
                                                                    (address,
                                                                    int) map)]))
              [@closure :int -> ((int -> int)[@closure :int])]) *
              (int -> ((int -> bool)[@closure :int])) *
              (int -> ((int -> int)[@closure :int])))]))[@closure
                                                          :(((unit ->
                                                                'o26 result)
                                                             [@closure :
                                                               nat])
                                                             *
                                                             (((address, 
                                                                 int) map ->
                                                                 ((address ->
                                                                    ((
                                                                    int ->
                                                                    (address,
                                                                    int) map)
                                                                    [@closure
                                                                    :((int ->
                                                                    ((int ->
                                                                    int)[@closure
                                                                    :int])) *
                                                                    address *
                                                                    (address,
                                                                    int) map)]))
                                                                 [@closure
                                                                   :((int ->
                                                                    ((int ->
                                                                    int)[@closure
                                                                    :int])) *
                                                                    (address,
                                                                    int) map)]))
                                                             [@closure
                                                               :int ->
                                                                  ((int ->
                                                                    int)
                                                                  [@closure
                                                                    :
                                                                    int])])
                                                             *
                                                             (int ->
                                                                ((int -> bool)
                                                                [@closure
                                                                  :int]))
                                                             *
                                                             (int ->
                                                                ((int -> int)
                                                                [@closure
                                                                  :int])))])
     *
     ((address ->
         ((address ->
             ((address ->
                 ((int ->
                     ((state -> result)[@closure
                                         :(int * nat * address *
                                            ((unit -> 'v25 result)[@closure
                                                                    :
                                                                    nat])
                                            * address *
                                            (((address, int) map ->
                                                ((address ->
                                                    ((int ->
                                                        (address, int) map)
                                                    [@closure
                                                      :((int ->
                                                           ((int -> int)
                                                           [@closure :
                                                             int]))
                                                         * address *
                                                         (address, int) map)]))
                                                [@closure
                                                  :((int ->
                                                       ((int -> int)[@closure
                                                                    :int]))
                                                     * (address, int) map)]))
                                            [@closure
                                              :int ->
                                                 ((int -> int)[@closure :int])])
                                            *
                                            (int ->
                                               ((int -> bool)[@closure :int]))
                                            *
                                            (bool ->
                                               ((bool -> bool)[@closure
                                                                :bool]))
                                            *
                                            ('z25 option ->
                                               (('x25 -> ('x25, 'z25) result)
                                               [@closure :'z25 option]))
                                            *
                                            (int ->
                                               ((int -> int)[@closure :int]))
                                            * address)]))[@closure
                                                           :(nat * address *
                                                              ((unit ->
                                                                  'o25 result)
                                                              [@closure :
                                                                nat])
                                                              * address *
                                                              (((address,
                                                                  int) map ->
                                                                  ((address
                                                                    ->
                                                                    ((int ->
                                                                    (address,
                                                                    int) map)
                                                                    [@closure
                                                                    :((int ->
                                                                    ((int ->
                                                                    int)[@closure
                                                                    :int])) *
                                                                    address *
                                                                    (address,
                                                                    int) map)]))
                                                                  [@closure
                                                                    :
                                                                    ((int ->
                                                                    ((int ->
                                                                    int)[@closure
                                                                    :int])) *
                                                                    (address,
                                                                    int) map)]))
                                                              [@closure
                                                                :int ->
                                                                   ((
                                                                   int -> 
                                                                    int)
                                                                   [@closure
                                                                    :int])])
                                                              *
                                                              (int ->
                                                                 ((int ->
                                                                    bool)
                                                                 [@closure
                                                                   :int]))
                                                              *
                                                              (bool ->
                                                                 ((bool ->
                                                                    bool)
                                                                 [@closure
                                                                   :bool]))
                                                              *
                                                              ('t25 option ->
                                                                 (('q25 ->
                                                                    ('q25,
                                                                    't25)
                                                                    result)
                                                                 [@closure
                                                                   :'t25
                                                                    option]))
                                                              *
                                                              (int ->
                                                                 ((int -> int)
                                                                 [@closure
                                                                   :int]))
                                                              * address)]))
             [@closure
               :(nat * address * ((unit -> 'f25 result)[@closure :nat]) *
                  address *
                  (((address, int) map ->
                      ((address ->
                          ((int -> (address, int) map)[@closure
                                                        :((int ->
                                                             ((int -> int)
                                                             [@closure :
                                                               int]))
                                                           * address *
                                                           (address, 
                                                           int) map)]))
                      [@closure
                        :((int -> ((int -> int)[@closure :int])) * (address,
                           int) map)]))[@closure
                                         :int ->
                                            ((int -> int)[@closure :int])])
                  * (int -> ((int -> bool)[@closure :int])) *
                  (bool -> ((bool -> bool)[@closure :bool])) *
                  ('l25 option ->
                     (('i25 -> ('i25, 'l25) result)[@closure :'l25 option]))
                  * (int -> ((int -> int)[@closure :int])))]))[@closure
                                                                :(nat *
                                                                   address *
                                                                   ((
                                                                   unit ->
                                                                    'w24
                                                                    result)
                                                                   [@closure
                                                                    :nat])
                                                                   *
                                                                   ((
                                                                   (address,
                                                                    int) map
                                                                    ->
                                                                    ((
                                                                    address
                                                                    ->
                                                                    ((int ->
                                                                    (address,
                                                                    int) map)
                                                                    [@closure
                                                                    :((int ->
                                                                    ((int ->
                                                                    int)[@closure
                                                                    :int])) *
                                                                    address *
                                                                    (address,
                                                                    int) map)]))
                                                                    [@closure
                                                                    :((int ->
                                                                    ((int ->
                                                                    int)[@closure
                                                                    :int])) *
                                                                    (address,
                                                                    int) map)]))
                                                                   [@closure
                                                                    :int ->
                                                                    ((int ->
                                                                    int)
                                                                    [@closure
                                                                    :int])])
                                                                   *
                                                                   (int ->
                                                                    ((int ->
                                                                    bool)
                                                                    [@closure
                                                                    :int]))
                                                                   *
                                                                   (bool ->
                                                                    ((bool ->
                                                                    bool)
                                                                    [@closure
                                                                    :bool]))
                                                                   *
                                                                   ('c25
                                                                    option ->
                                                                    (('z24 ->
                                                                    ('c25,
                                                                    'z24)
                                                                    result)
                                                                    [@closure
                                                                    :'c25
                                                                    option]))
                                                                   *
                                                                   (int ->
                                                                    ((int ->
                                                                    int)
                                                                    [@closure
                                                                    :int])))]))
     [@closure
       :(nat * ((unit -> 'n24 result)[@closure :nat]) *
          (((address, int) map ->
              ((address ->
                  ((int -> (address, int) map)[@closure
                                                :((int ->
                                                     ((int -> int)[@closure
                                                                    :
                                                                    int]))
                                                   * address * (address, 
                                                   int) map)]))[@closure
                                                                 :((int ->
                                                                    ((int ->
                                                                    int)
                                                                    [@closure
                                                                    :int])) *
                                                                    (
                                                                    address,
                                                                    int) map)]))
          [@closure :int -> ((int -> int)[@closure :int])]) *
          (int -> ((int -> bool)[@closure :int])) *
          (bool -> ((bool -> bool)[@closure :bool])) *
          ('t24 option ->
             (('q24 -> ('q24, 't24) result)[@closure :'t24 option]))
          * (int -> ((int -> int)[@closure :int])))]))]). Type variables 'a25, 'b26, 'c25, 'd25, 'd26, 'f25, 'f26, 'g25, 'h24, 'h26, 'i24, 'i25, 'j24, 'j25, 'j26, 'k24, 'l24, 'l25, 'l26, 'm24, 'm25, 'm26, 'n24, 'n26, 'o24, 'o25, 'o26, 'p26, 'q24, 'q25, 'r24, 't24, 't25, 'u24, 'v25, 'w24, 'x24, 'x25, 'z24, 'z25 were replaced by unit.
./tests/extracted-code/liquidity-extract/tests/liquidity_eip20token.liq:111.79-120.33: Warning: 
Unresolved type ((msg option -> result)[@closure
                         :((timestamp * (address * (dun * dun))) * nat *
                            state *
                            (address ->
                               ((address ->
                                   ((int ->
                                       ((state -> 'b26 result)[@closure
                                                                :(int *
                                                                   address *
                                                                   address)]))
                                   [@closure :(address * address)]))[@closure
                                                                    :address]))
                            *
                            ((address ->
                                ((address ->
                                    ((int ->
                                        ((state -> result)[@closure
                                                            :(int *
                                                               ((unit ->
                                                                   'j26
                                                                    result)
                                                               [@closure
                                                                 :nat])
                                                               * address *
                                                               (((address,
                                                                   int) map
                                                                   ->
                                                                   ((
                                                                   address ->
                                                                    ((
                                                                    int ->
                                                                    (address,
                                                                    int) map)
                                                                    [@closure
                                                                    :((int ->
                                                                    ((int ->
                                                                    int)[@closure
                                                                    :int])) *
                                                                    address *
                                                                    (address,
                                                                    int) map)]))
                                                                   [@closure
                                                                    :((int ->
                                                                    ((int ->
                                                                    int)[@closure
                                                                    :int])) *
                                                                    (address,
                                                                    int) map)]))
                                                               [@closure
                                                                 :int ->
                                                                    ((
                                                                    int ->
                                                                    int)
                                                                    [@closure
                                                                    :int])])
                                                               *
                                                               (int ->
                                                                  ((int ->
                                                                    bool)
                                                                  [@closure
                                                                    :
                                                                    int]))
                                                               *
                                                               (int ->
                                                                  ((int ->
                                                                    int)
                                                                  [@closure
                                                                    :
                                                                    int]))
                                                               * address)]))
                                    [@closure
                                      :(((unit -> 'h26 result)[@closure :nat])
                                         * address *
                                         (((address, int) map ->
                                             ((address ->
                                                 ((int -> (address, int) map)
                                                 [@closure
                                                   :((int ->
                                                        ((int -> int)
                                                        [@closure :int]))
                                                      * address * (address,
                                                      int) map)]))[@closure
                                                                    :
                                                                    ((int ->
                                                                    ((int ->
                                                                    int)[@closure
                                                                    :int])) *
                                                                    (address,
                                                                    int) map)]))
                                         [@closure
                                           :int ->
                                              ((int -> int)[@closure :int])])
                                         *
                                         (int ->
                                            ((int -> bool)[@closure :int]))
                                         *
                                         (int ->
                                            ((int -> int)[@closure :int]))
                                         * address)]))[@closure
                                                        :(((unit ->
                                                              'f26 result)
                                                           [@closure :
                                                             nat])
                                                           * address *
                                                           (((address, 
                                                               int) map ->
                                                               ((address ->
                                                                   ((
                                                                   int ->
                                                                    (address,
                                                                    int) map)
                                                                   [@closure
                                                                    :((int ->
                                                                    ((int ->
                                                                    int)[@closure
                                                                    :int])) *
                                                                    address *
                                                                    (address,
                                                                    int) map)]))
                                                               [@closure
                                                                 :((int ->
                                                                    ((int ->
                                                                    int)
                                                                    [@closure
                                                                    :int])) *
                                                                    (
                                                                    address,
                                                                    int) map)]))
                                                           [@closure
                                                             :int ->
                                                                ((int -> int)
                                                                [@closure
                                                                  :int])])
                                                           *
                                                           (int ->
                                                              ((int -> bool)
                                                              [@closure :
                                                                int]))
                                                           *
                                                           (int ->
                                                              ((int -> int)
                                                              [@closure :
                                                                int])))]))
                            [@closure
                              :(((unit -> 'd26 result)[@closure :nat]) *
                                 (((address, int) map ->
                                     ((address ->
                                         ((int -> (address, int) map)
                                         [@closure
                                           :((int ->
                                                ((int -> int)[@closure :int]))
                                              * address * (address, int) map)]))
                                     [@closure
                                       :((int ->
                                            ((int -> int)[@closure :int]))
                                          * (address, int) map)]))[@closure
                                                                    :
                                                                    int ->
                                                                    ((int ->
                                                                    int)
                                                                    [@closure
                                                                    :int])])
                                 * (int -> ((int -> bool)[@closure :int])) *
                                 (int -> ((int -> int)[@closure :int])))])
                            *
                            ((address ->
                                ((address ->
                                    ((address ->
                                        ((int ->
                                            ((state -> result)[@closure
                                                                :(int * nat *
                                                                   address *
                                                                   ((
                                                                   unit ->
                                                                    'g25
                                                                    result)
                                                                   [@closure
                                                                    :nat])
                                                                   * address
                                                                   *
                                                                   ((
                                                                   (address,
                                                                    int) map
                                                                    ->
                                                                    ((
                                                                    address
                                                                    ->
                                                                    ((int ->
                                                                    (address,
                                                                    int) map)
                                                                    [@closure
                                                                    :((int ->
                                                                    ((int ->
                                                                    int)[@closure
                                                                    :int])) *
                                                                    address *
                                                                    (address,
                                                                    int) map)]))
                                                                    [@closure
                                                                    :((int ->
                                                                    ((int ->
                                                                    int)[@closure
                                                                    :int])) *
                                                                    (address,
                                                                    int) map)]))
                                                                   [@closure
                                                                    :int ->
                                                                    ((int ->
                                                                    int)
                                                                    [@closure
                                                                    :int])])
                                                                   *
                                                                   (int ->
                                                                    ((int ->
                                                                    bool)
                                                                    [@closure
                                                                    :int]))
                                                                   *
                                                                   (bool ->
                                                                    ((bool ->
                                                                    bool)
                                                                    [@closure
                                                                    :bool]))
                                                                   *
                                                                   ('m25
                                                                    option ->
                                                                    (('j25 ->
                                                                    ('j25,
                                                                    'm25)
                                                                    result)
                                                                    [@closure
                                                                    :'m25
                                                                    option]))
                                                                   *
                                                                   (int ->
                                                                    ((int ->
                                                                    int)
                                                                    [@closure
                                                                    :int]))
                                                                   * address)]))
                                        [@closure
                                          :(nat * address *
                                             ((unit -> 'x24 result)[@closure
                                                                    :nat])
                                             * address *
                                             (((address, int) map ->
                                                 ((address ->
                                                     ((int ->
                                                         (address, int) map)
                                                     [@closure
                                                       :((int ->
                                                            ((int -> int)
                                                            [@closure :
                                                              int]))
                                                          * address *
                                                          (address, int) map)]))
                                                 [@closure
                                                   :((int ->
                                                        ((int -> int)
                                                        [@closure :int]))
                                                      * (address, int) map)]))
                                             [@closure
                                               :int ->
                                                  ((int -> int)[@closure
                                                                 :int])])
                                             *
                                             (int ->
                                                ((int -> bool)[@closure :int]))
                                             *
                                             (bool ->
                                                ((bool -> bool)[@closure
                                                                 :bool]))
                                             *
                                             ('d25 option ->
                                                (('a25 -> ('a25, 'd25) result)
                                                [@closure :'d25 option]))
                                             *
                                             (int ->
                                                ((int -> int)[@closure :int]))
                                             * address)]))[@closure
                                                            :(nat * address *
                                                               ((unit ->
                                                                   'o24
                                                                    result)
                                                               [@closure
                                                                 :nat])
                                                               * address *
                                                               (((address,
                                                                   int) map
                                                                   ->
                                                                   ((
                                                                   address ->
                                                                    ((
                                                                    int ->
                                                                    (address,
                                                                    int) map)
                                                                    [@closure
                                                                    :((int ->
                                                                    ((int ->
                                                                    int)[@closure
                                                                    :int])) *
                                                                    address *
                                                                    (address,
                                                                    int) map)]))
                                                                   [@closure
                                                                    :((int ->
                                                                    ((int ->
                                                                    int)[@closure
                                                                    :int])) *
                                                                    (address,
                                                                    int) map)]))
                                                               [@closure
                                                                 :int ->
                                                                    ((
                                                                    int ->
                                                                    int)
                                                                    [@closure
                                                                    :int])])
                                                               *
                                                               (int ->
                                                                  ((int ->
                                                                    bool)
                                                                  [@closure
                                                                    :
                                                                    int]))
                                                               *
                                                               (bool ->
                                                                  ((bool ->
                                                                    bool)
                                                                  [@closure
                                                                    :
                                                                    bool]))
                                                               *
                                                               ('u24 option
                                                                  ->
                                                                  (('r24 ->
                                                                    ('r24,
                                                                    'u24)
                                                                    result)
                                                                  [@closure
                                                                    :
                                                                    'u24
                                                                    option]))
                                                               *
                                                               (int ->
                                                                  ((int ->
                                                                    int)
                                                                  [@closure
                                                                    :
                                                                    int])))]))
                                [@closure
                                  :(nat * address *
                                     ((unit -> 'i24 result)[@closure :nat]) *
                                     (((address, int) map ->
                                         ((address ->
                                             ((int -> (address, int) map)
                                             [@closure
                                               :((int ->
                                                    ((int -> int)[@closure
                                                                   :int]))
                                                  * address * (address, 
                                                  int) map)]))[@closure
                                                                :((int ->
                                                                    ((
                                                                    int ->
                                                                    int)
                                                                    [@closure
                                                                    :int]))
                                                                   *
                                                                   (address,
                                                                   int) map)]))
                                     [@closure
                                       :int -> ((int -> int)[@closure :int])])
                                     *
                                     (int -> ((int -> bool)[@closure :int]))
                                     *
                                     (bool ->
                                        ((bool -> bool)[@closure :bool]))
                                     *
                                     ('m24 option ->
                                        (('k24 -> ('k24, 'm24) result)
                                        [@closure :'m24 option]))
                                     *
                                     (int -> ((int -> int)[@closure :int])))]))
                            [@closure
                              :(nat * ((unit -> 'l26 result)[@closure :nat])
                                 *
                                 (((address, int) map ->
                                     ((address ->
                                         ((int -> (address, int) map)
                                         [@closure
                                           :((int ->
                                                ((int -> int)[@closure :int]))
                                              * address * (address, int) map)]))
                                     [@closure
                                       :((int ->
                                            ((int -> int)[@closure :int]))
                                          * (address, int) map)]))[@closure
                                                                    :
                                                                    int ->
                                                                    ((int ->
                                                                    int)
                                                                    [@closure
                                                                    :int])])
                                 * (int -> ((int -> bool)[@closure :int])) *
                                 (bool -> ((bool -> bool)[@closure :bool])) *
                                 ('p26 option ->
                                    (('n26 -> ('n26, 'p26) result)[@closure
                                                                    :
                                                                    'p26
                                                                    option]))
                                 * (int -> ((int -> int)[@closure :int])))]))]). Type variables 'a25, 'b26, 'd25, 'd26, 'f26, 'g25, 'h26, 'i24, 'j25, 'j26, 'k24, 'l26, 'm24, 'm25, 'n26, 'o24, 'p26, 'r24, 'u24, 'x24 were replaced by unit.
./tests/extracted-code/liquidity-extract/tests/liquidity_eip20token.liq:122.89-122.141: Warning: 
Unresolved type ((state -> result)[@closure
                    :(((timestamp * (address * (dun * dun))) * msg option) *
                       (((timestamp * (address * (dun * dun))) ->
                           ((state ->
                               ((msg option -> 's37 result)[@closure
                                                             :((timestamp *
                                                                (address *
                                                                (dun * dun)))
                                                                * nat * state
                                                                *
                                                                (address ->
                                                                   ((
                                                                   address ->
                                                                    ((
                                                                    int ->
                                                                    ((state
                                                                    ->
                                                                    'l39
                                                                    result)
                                                                    [@closure
                                                                    :(int *
                                                                    address *
                                                                    address)]))
                                                                    [@closure
                                                                    :(address
                                                                    *
                                                                    address)]))
                                                                   [@closure
                                                                    :address]))
                                                                *
                                                                ((address ->
                                                                    ((
                                                                    address
                                                                    ->
                                                                    ((int ->
                                                                    ((state
                                                                    -> result)
                                                                    [@closure
                                                                    :(int *
                                                                    ((unit ->
                                                                    'g36
                                                                    result)
                                                                    [@closure
                                                                    :nat]) *
                                                                    address *
                                                                    (((address,
                                                                    int) map
                                                                    ->
                                                                    ((address
                                                                    ->
                                                                    ((int ->
                                                                    (address,
                                                                    int) map)
                                                                    [@closure
                                                                    :((int ->
                                                                    ((int ->
                                                                    int)[@closure
                                                                    :int])) *
                                                                    address *
                                                                    (address,
                                                                    int) map)]))
                                                                    [@closure
                                                                    :((int ->
                                                                    ((int ->
                                                                    int)[@closure
                                                                    :int])) *
                                                                    (address,
                                                                    int) map)]))
                                                                    [@closure
                                                                    :int ->
                                                                    ((int ->
                                                                    int)
                                                                    [@closure
                                                                    :int])])
                                                                    *
                                                                    (int ->
                                                                    ((int ->
                                                                    bool)
                                                                    [@closure
                                                                    :int])) *
                                                                    (int ->
                                                                    ((int ->
                                                                    int)
                                                                    [@closure
                                                                    :int])) *
                                                                    address)]))
                                                                    [@closure
                                                                    :(((
                                                                    unit ->
                                                                    'p40
                                                                    result)
                                                                    [@closure
                                                                    :nat]) *
                                                                    address *
                                                                    (((address,
                                                                    int) map
                                                                    ->
                                                                    ((address
                                                                    ->
                                                                    ((int ->
                                                                    (address,
                                                                    int) map)
                                                                    [@closure
                                                                    :((int ->
                                                                    ((int ->
                                                                    int)[@closure
                                                                    :int])) *
                                                                    address *
                                                                    (address,
                                                                    int) map)]))
                                                                    [@closure
                                                                    :((int ->
                                                                    ((int ->
                                                                    int)[@closure
                                                                    :int])) *
                                                                    (address,
                                                                    int) map)]))
                                                                    [@closure
                                                                    :int ->
                                                                    ((int ->
                                                                    int)
                                                                    [@closure
                                                                    :int])])
                                                                    *
                                                                    (int ->
                                                                    ((int ->
                                                                    bool)
                                                                    [@closure
                                                                    :int])) *
                                                                    (int ->
                                                                    ((int ->
                                                                    int)
                                                                    [@closure
                                                                    :int])) *
                                                                    address)]))
                                                                    [@closure
                                                                    :(((
                                                                    unit ->
                                                                    'f40
                                                                    result)
                                                                    [@closure
                                                                    :nat]) *
                                                                    address *
                                                                    (((address,
                                                                    int) map
                                                                    ->
                                                                    ((address
                                                                    ->
                                                                    ((int ->
                                                                    (address,
                                                                    int) map)
                                                                    [@closure
                                                                    :((int ->
                                                                    ((int ->
                                                                    int)[@closure
                                                                    :int])) *
                                                                    address *
                                                                    (address,
                                                                    int) map)]))
                                                                    [@closure
                                                                    :((int ->
                                                                    ((int ->
                                                                    int)[@closure
                                                                    :int])) *
                                                                    (address,
                                                                    int) map)]))
                                                                    [@closure
                                                                    :int ->
                                                                    ((int ->
                                                                    int)
                                                                    [@closure
                                                                    :int])])
                                                                    *
                                                                    (int ->
                                                                    ((int ->
                                                                    bool)
                                                                    [@closure
                                                                    :int])) *
                                                                    (int ->
                                                                    ((int ->
                                                                    int)
                                                                    [@closure
                                                                    :int])))]))
                                                                [@closure
                                                                  :(((
                                                                    unit ->
                                                                    'v39
                                                                    result)
                                                                    [@closure
                                                                    :nat]) *
                                                                    ((
                                                                    (address,
                                                                    int) map
                                                                    ->
                                                                    ((address
                                                                    ->
                                                                    ((int ->
                                                                    (address,
                                                                    int) map)
                                                                    [@closure
                                                                    :((int ->
                                                                    ((int ->
                                                                    int)[@closure
                                                                    :int])) *
                                                                    address *
                                                                    (address,
                                                                    int) map)]))
                                                                    [@closure
                                                                    :((int ->
                                                                    ((int ->
                                                                    int)[@closure
                                                                    :int])) *
                                                                    (address,
                                                                    int) map)]))
                                                                    [@closure
                                                                    :int ->
                                                                    ((int ->
                                                                    int)
                                                                    [@closure
                                                                    :int])])
                                                                    *
                                                                    (int ->
                                                                    ((int ->
                                                                    bool)
                                                                    [@closure
                                                                    :int])) *
                                                                    (int ->
                                                                    ((int ->
                                                                    int)
                                                                    [@closure
                                                                    :int])))])
                                                                *
                                                                ((address ->
                                                                    ((
                                                                    address
                                                                    ->
                                                                    ((address
                                                                    ->
                                                                    ((int ->
                                                                    ((state
                                                                    -> result)
                                                                    [@closure
                                                                    :(int *
                                                                    nat *
                                                                    address *
                                                                    ((unit ->
                                                                    'j40
                                                                    result)
                                                                    [@closure
                                                                    :nat]) *
                                                                    address *
                                                                    (((address,
                                                                    int) map
                                                                    ->
                                                                    ((address
                                                                    ->
                                                                    ((int ->
                                                                    (address,
                                                                    int) map)
                                                                    [@closure
                                                                    :((int ->
                                                                    ((int ->
                                                                    int)[@closure
                                                                    :int])) *
                                                                    address *
                                                                    (address,
                                                                    int) map)]))
                                                                    [@closure
                                                                    :((int ->
                                                                    ((int ->
                                                                    int)[@closure
                                                                    :int])) *
                                                                    (address,
                                                                    int) map)]))
                                                                    [@closure
                                                                    :int ->
                                                                    ((int ->
                                                                    int)
                                                                    [@closure
                                                                    :int])])
                                                                    *
                                                                    (int ->
                                                                    ((int ->
                                                                    bool)
                                                                    [@closure
                                                                    :int])) *
                                                                    (bool ->
                                                                    ((bool ->
                                                                    bool)
                                                                    [@closure
                                                                    :bool]))
                                                                    *
                                                                    ('u36
                                                                    option ->
                                                                    (('f36 ->
                                                                    ('f36,
                                                                    'u36)
                                                                    result)
                                                                    [@closure
                                                                    :'u36
                                                                    option]))
                                                                    *
                                                                    (int ->
                                                                    ((int ->
                                                                    int)
                                                                    [@closure
                                                                    :int])) *
                                                                    address)]))
                                                                    [@closure
                                                                    :(nat *
                                                                    address *
                                                                    ((unit ->
                                                                    'p38
                                                                    result)
                                                                    [@closure
                                                                    :nat]) *
                                                                    address *
                                                                    (((address,
                                                                    int) map
                                                                    ->
                                                                    ((address
                                                                    ->
                                                                    ((int ->
                                                                    (address,
                                                                    int) map)
                                                                    [@closure
                                                                    :((int ->
                                                                    ((int ->
                                                                    int)[@closure
                                                                    :int])) *
                                                                    address *
                                                                    (address,
                                                                    int) map)]))
                                                                    [@closure
                                                                    :((int ->
                                                                    ((int ->
                                                                    int)[@closure
                                                                    :int])) *
                                                                    (address,
                                                                    int) map)]))
                                                                    [@closure
                                                                    :int ->
                                                                    ((int ->
                                                                    int)
                                                                    [@closure
                                                                    :int])])
                                                                    *
                                                                    (int ->
                                                                    ((int ->
                                                                    bool)
                                                                    [@closure
                                                                    :int])) *
                                                                    (bool ->
                                                                    ((bool ->
                                                                    bool)
                                                                    [@closure
                                                                    :bool]))
                                                                    *
                                                                    ('u39
                                                                    option ->
                                                                    (('e39 ->
                                                                    ('e39,
                                                                    'u39)
                                                                    result)
                                                                    [@closure
                                                                    :'u39
                                                                    option]))
                                                                    *
                                                                    (int ->
                                                                    ((int ->
                                                                    int)
                                                                    [@closure
                                                                    :int])) *
                                                                    address)]))
                                                                    [@closure
                                                                    :(nat *
                                                                    address *
                                                                    ((unit ->
                                                                    'd37
                                                                    result)
                                                                    [@closure
                                                                    :nat]) *
                                                                    address *
                                                                    (((address,
                                                                    int) map
                                                                    ->
                                                                    ((address
                                                                    ->
                                                                    ((int ->
                                                                    (address,
                                                                    int) map)
                                                                    [@closure
                                                                    :((int ->
                                                                    ((int ->
                                                                    int)[@closure
                                                                    :int])) *
                                                                    address *
                                                                    (address,
                                                                    int) map)]))
                                                                    [@closure
                                                                    :((int ->
                                                                    ((int ->
                                                                    int)[@closure
                                                                    :int])) *
                                                                    (address,
                                                                    int) map)]))
                                                                    [@closure
                                                                    :int ->
                                                                    ((int ->
                                                                    int)
                                                                    [@closure
                                                                    :int])])
                                                                    *
                                                                    (int ->
                                                                    ((int ->
                                                                    bool)
                                                                    [@closure
                                                                    :int])) *
                                                                    (bool ->
                                                                    ((bool ->
                                                                    bool)
                                                                    [@closure
                                                                    :bool]))
                                                                    *
                                                                    ('d38
                                                                    option ->
                                                                    (('r37 ->
                                                                    ('d38,
                                                                    'r37)
                                                                    result)
                                                                    [@closure
                                                                    :'d38
                                                                    option]))
                                                                    *
                                                                    (int ->
                                                                    ((int ->
                                                                    int)
                                                                    [@closure
                                                                    :int])))]))
                                                                    [@closure
                                                                    :(nat *
                                                                    address *
                                                                    ((unit ->
                                                                    's40
                                                                    result)
                                                                    [@closure
                                                                    :nat]) *
                                                                    (((address,
                                                                    int) map
                                                                    ->
                                                                    ((address
                                                                    ->
                                                                    ((int ->
                                                                    (address,
                                                                    int) map)
                                                                    [@closure
                                                                    :((int ->
                                                                    ((int ->
                                                                    int)[@closure
                                                                    :int])) *
                                                                    address *
                                                                    (address,
                                                                    int) map)]))
                                                                    [@closure
                                                                    :((int ->
                                                                    ((int ->
                                                                    int)[@closure
                                                                    :int])) *
                                                                    (address,
                                                                    int) map)]))
                                                                    [@closure
                                                                    :int ->
                                                                    ((int ->
                                                                    int)
                                                                    [@closure
                                                                    :int])])
                                                                    *
                                                                    (int ->
                                                                    ((int ->
                                                                    bool)
                                                                    [@closure
                                                                    :int])) *
                                                                    (bool ->
                                                                    ((bool ->
                                                                    bool)
                                                                    [@closure
                                                                    :bool]))
                                                                    *
                                                                    ('t36
                                                                    option ->
                                                                    (('j36 ->
                                                                    ('j36,
                                                                    't36)
                                                                    result)
                                                                    [@closure
                                                                    :'t36
                                                                    option]))
                                                                    *
                                                                    (int ->
                                                                    ((int ->
                                                                    int)
                                                                    [@closure
                                                                    :int])))]))
                                                                [@closure
                                                                  :(nat *
                                                                    ((
                                                                    unit ->
                                                                    'q36
                                                                    result)
                                                                    [@closure
                                                                    :nat]) *
                                                                    ((
                                                                    (address,
                                                                    int) map
                                                                    ->
                                                                    ((address
                                                                    ->
                                                                    ((int ->
                                                                    (address,
                                                                    int) map)
                                                                    [@closure
                                                                    :((int ->
                                                                    ((int ->
                                                                    int)[@closure
                                                                    :int])) *
                                                                    address *
                                                                    (address,
                                                                    int) map)]))
                                                                    [@closure
                                                                    :((int ->
                                                                    ((int ->
                                                                    int)[@closure
                                                                    :int])) *
                                                                    (address,
                                                                    int) map)]))
                                                                    [@closure
                                                                    :int ->
                                                                    ((int ->
                                                                    int)
                                                                    [@closure
                                                                    :int])])
                                                                    *
                                                                    (int ->
                                                                    ((int ->
                                                                    bool)
                                                                    [@closure
                                                                    :int])) *
                                                                    (bool ->
                                                                    ((bool ->
                                                                    bool)
                                                                    [@closure
                                                                    :bool]))
                                                                    *
                                                                    ('k37
                                                                    option ->
                                                                    (('a37 ->
                                                                    ('a37,
                                                                    'k37)
                                                                    result)
                                                                    [@closure
                                                                    :'k37
                                                                    option]))
                                                                    *
                                                                    (int ->
                                                                    ((int ->
                                                                    int)
                                                                    [@closure
                                                                    :int])))]))]))
                           [@closure
                             :((timestamp * (address * (dun * dun))) * nat *
                                (address ->
                                   ((address ->
                                       ((int ->
                                           ((state -> 'v36 result)[@closure
                                                                    :
                                                                    (int *
                                                                    address *
                                                                    address)]))
                                       [@closure :(address * address)]))
                                   [@closure :address]))
                                *
                                ((address ->
                                    ((address ->
                                        ((int ->
                                            ((state -> result)[@closure
                                                                :(int *
                                                                   ((
                                                                   unit ->
                                                                    'o36
                                                                    result)
                                                                   [@closure
                                                                    :nat])
                                                                   * address
                                                                   *
                                                                   ((
                                                                   (address,
                                                                    int) map
                                                                    ->
                                                                    ((
                                                                    address
                                                                    ->
                                                                    ((int ->
                                                                    (address,
                                                                    int) map)
                                                                    [@closure
                                                                    :((int ->
                                                                    ((int ->
                                                                    int)[@closure
                                                                    :int])) *
                                                                    address *
                                                                    (address,
                                                                    int) map)]))
                                                                    [@closure
                                                                    :((int ->
                                                                    ((int ->
                                                                    int)[@closure
                                                                    :int])) *
                                                                    (address,
                                                                    int) map)]))
                                                                   [@closure
                                                                    :int ->
                                                                    ((int ->
                                                                    int)
                                                                    [@closure
                                                                    :int])])
                                                                   *
                                                                   (int ->
                                                                    ((int ->
                                                                    bool)
                                                                    [@closure
                                                                    :int]))
                                                                   *
                                                                   (int ->
                                                                    ((int ->
                                                                    int)
                                                                    [@closure
                                                                    :int]))
                                                                   * address)]))
                                        [@closure
                                          :(((unit -> 'e36 result)[@closure
                                                                    :
                                                                    nat])
                                             * address *
                                             (((address, int) map ->
                                                 ((address ->
                                                     ((int ->
                                                         (address, int) map)
                                                     [@closure
                                                       :((int ->
                                                            ((int -> int)
                                                            [@closure :
                                                              int]))
                                                          * address *
                                                          (address, int) map)]))
                                                 [@closure
                                                   :((int ->
                                                        ((int -> int)
                                                        [@closure :int]))
                                                      * (address, int) map)]))
                                             [@closure
                                               :int ->
                                                  ((int -> int)[@closure
                                                                 :int])])
                                             *
                                             (int ->
                                                ((int -> bool)[@closure :int]))
                                             *
                                             (int ->
                                                ((int -> int)[@closure :int]))
                                             * address)]))[@closure
                                                            :(((unit ->
                                                                  'n40 result)
                                                               [@closure
                                                                 :nat])
                                                               * address *
                                                               (((address,
                                                                   int) map
                                                                   ->
                                                                   ((
                                                                   address ->
                                                                    ((
                                                                    int ->
                                                                    (address,
                                                                    int) map)
                                                                    [@closure
                                                                    :((int ->
                                                                    ((int ->
                                                                    int)[@closure
                                                                    :int])) *
                                                                    address *
                                                                    (address,
                                                                    int) map)]))
                                                                   [@closure
                                                                    :((int ->
                                                                    ((int ->
                                                                    int)[@closure
                                                                    :int])) *
                                                                    (address,
                                                                    int) map)]))
                                                               [@closure
                                                                 :int ->
                                                                    ((
                                                                    int ->
                                                                    int)
                                                                    [@closure
                                                                    :int])])
                                                               *
                                                               (int ->
                                                                  ((int ->
                                                                    bool)
                                                                  [@closure
                                                                    :
                                                                    int]))
                                                               *
                                                               (int ->
                                                                  ((int ->
                                                                    int)
                                                                  [@closure
                                                                    :
                                                                    int])))]))
                                [@closure
                                  :(((unit -> 'f37 result)[@closure :nat]) *
                                     (((address, int) map ->
                                         ((address ->
                                             ((int -> (address, int) map)
                                             [@closure
                                               :((int ->
                                                    ((int -> int)[@closure
                                                                   :int]))
                                                  * address * (address, 
                                                  int) map)]))[@closure
                                                                :((int ->
                                                                    ((
                                                                    int ->
                                                                    int)
                                                                    [@closure
                                                                    :int]))
                                                                   *
                                                                   (address,
                                                                   int) map)]))
                                     [@closure
                                       :int -> ((int -> int)[@closure :int])])
                                     *
                                     (int -> ((int -> bool)[@closure :int]))
                                     *
                                     (int -> ((int -> int)[@closure :int])))])
                                *
                                ((address ->
                                    ((address ->
                                        ((address ->
                                            ((int ->
                                                ((state -> result)[@closure
                                                                    :
                                                                    (int *
                                                                    nat *
                                                                    address *
                                                                    ((unit ->
                                                                    'i38
                                                                    result)
                                                                    [@closure
                                                                    :nat]) *
                                                                    address *
                                                                    (((address,
                                                                    int) map
                                                                    ->
                                                                    ((address
                                                                    ->
                                                                    ((int ->
                                                                    (address,
                                                                    int) map)
                                                                    [@closure
                                                                    :((int ->
                                                                    ((int ->
                                                                    int)[@closure
                                                                    :int])) *
                                                                    address *
                                                                    (address,
                                                                    int) map)]))
                                                                    [@closure
                                                                    :((int ->
                                                                    ((int ->
                                                                    int)[@closure
                                                                    :int])) *
                                                                    (address,
                                                                    int) map)]))
                                                                    [@closure
                                                                    :int ->
                                                                    ((int ->
                                                                    int)
                                                                    [@closure
                                                                    :int])])
                                                                    *
                                                                    (int ->
                                                                    ((int ->
                                                                    bool)
                                                                    [@closure
                                                                    :int])) *
                                                                    (bool ->
                                                                    ((bool ->
                                                                    bool)
                                                                    [@closure
                                                                    :bool]))
                                                                    *
                                                                    ('a39
                                                                    option ->
                                                                    (('q38 ->
                                                                    ('a39,
                                                                    'q38)
                                                                    result)
                                                                    [@closure
                                                                    :'a39
                                                                    option]))
                                                                    *
                                                                    (int ->
                                                                    ((int ->
                                                                    int)
                                                                    [@closure
                                                                    :int])) *
                                                                    address)]))
                                            [@closure
                                              :(nat * address *
                                                 ((unit -> 'e37 result)
                                                 [@closure :nat]) * address *
                                                 (((address, int) map ->
                                                     ((address ->
                                                         ((int ->
                                                             (address, 
                                                               int) map)
                                                         [@closure
                                                           :((int ->
                                                                ((int -> int)
                                                                [@closure
                                                                  :int]))
                                                              * address *
                                                              (address, 
                                                              int) map)]))
                                                     [@closure
                                                       :((int ->
                                                            ((int -> int)
                                                            [@closure :
                                                              int]))
                                                          * (address, 
                                                          int) map)]))
                                                 [@closure
                                                   :int ->
                                                      ((int -> int)[@closure
                                                                    :int])])
                                                 *
                                                 (int ->
                                                    ((int -> bool)[@closure
                                                                    :
                                                                    int]))
                                                 *
                                                 (bool ->
                                                    ((bool -> bool)[@closure
                                                                    :bool]))
                                                 *
                                                 ('a38 option ->
                                                    (('o37 ->
                                                        ('a38, 'o37) result)
                                                    [@closure :'a38 option]))
                                                 *
                                                 (int ->
                                                    ((int -> int)[@closure
                                                                   :int]))
                                                 * address)]))[@closure
                                                                :(nat *
                                                                   address *
                                                                   ((
                                                                   unit ->
                                                                    'e40
                                                                    result)
                                                                   [@closure
                                                                    :nat])
                                                                   * address
                                                                   *
                                                                   ((
                                                                   (address,
                                                                    int) map
                                                                    ->
                                                                    ((
                                                                    address
                                                                    ->
                                                                    ((int ->
                                                                    (address,
                                                                    int) map)
                                                                    [@closure
                                                                    :((int ->
                                                                    ((int ->
                                                                    int)[@closure
                                                                    :int])) *
                                                                    address *
                                                                    (address,
                                                                    int) map)]))
                                                                    [@closure
                                                                    :((int ->
                                                                    ((int ->
                                                                    int)[@closure
                                                                    :int])) *
                                                                    (address,
                                                                    int) map)]))
                                                                   [@closure
                                                                    :int ->
                                                                    ((int ->
                                                                    int)
                                                                    [@closure
                                                                    :int])])
                                                                   *
                                                                   (int ->
                                                                    ((int ->
                                                                    bool)
                                                                    [@closure
                                                                    :int]))
                                                                   *
                                                                   (bool ->
                                                                    ((bool ->
                                                                    bool)
                                                                    [@closure
                                                                    :bool]))
                                                                   *
                                                                   ('p36
                                                                    option ->
                                                                    (('t40 ->
                                                                    ('p36,
                                                                    't40)
                                                                    result)
                                                                    [@closure
                                                                    :'p36
                                                                    option]))
                                                                   *
                                                                   (int ->
                                                                    ((int ->
                                                                    int)
                                                                    [@closure
                                                                    :int])))]))
                                    [@closure
                                      :(nat * address *
                                         ((unit -> 'l38 result)[@closure
                                                                 :nat])
                                         *
                                         (((address, int) map ->
                                             ((address ->
                                                 ((int -> (address, int) map)
                                                 [@closure
                                                   :((int ->
                                                        ((int -> int)
                                                        [@closure :int]))
                                                      * address * (address,
                                                      int) map)]))[@closure
                                                                    :
                                                                    ((int ->
                                                                    ((int ->
                                                                    int)[@closure
                                                                    :int])) *
                                                                    (address,
                                                                    int) map)]))
                                         [@closure
                                           :int ->
                                              ((int -> int)[@closure :int])])
                                         *
                                         (int ->
                                            ((int -> bool)[@closure :int]))
                                         *
                                         (bool ->
                                            ((bool -> bool)[@closure :bool]))
                                         *
                                         ('p39 option ->
                                            (('z38 -> ('p39, 'z38) result)
                                            [@closure :'p39 option]))
                                         *
                                         (int ->
                                            ((int -> int)[@closure :int])))]))
                                [@closure
                                  :(nat *
                                     ((unit -> 'y36 result)[@closure :nat]) *
                                     (((address, int) map ->
                                         ((address ->
                                             ((int -> (address, int) map)
                                             [@closure
                                               :((int ->
                                                    ((int -> int)[@closure
                                                                   :int]))
                                                  * address * (address, 
                                                  int) map)]))[@closure
                                                                :((int ->
                                                                    ((
                                                                    int ->
                                                                    int)
                                                                    [@closure
                                                                    :int]))
                                                                   *
                                                                   (address,
                                                                   int) map)]))
                                     [@closure
                                       :int -> ((int -> int)[@closure :int])])
                                     *
                                     (int -> ((int -> bool)[@closure :int]))
                                     *
                                     (bool ->
                                        ((bool -> bool)[@closure :bool]))
                                     *
                                     ('z37 option ->
                                        (('n37 -> ('n37, 'z37) result)
                                        [@closure :'z37 option]))
                                     *
                                     (int -> ((int -> int)[@closure :int])))]))]))
                       [@closure
                         :(nat *
                            (address ->
                               ((address ->
                                   ((int ->
                                       ((state -> 'i37 result)[@closure
                                                                :(int *
                                                                   address *
                                                                   address)]))
                                   [@closure :(address * address)]))[@closure
                                                                    :address]))
                            *
                            ((address ->
                                ((address ->
                                    ((int ->
                                        ((state -> result)[@closure
                                                            :(int *
                                                               ((unit ->
                                                                   'k39
                                                                    result)
                                                               [@closure
                                                                 :nat])
                                                               * address *
                                                               (((address,
                                                                   int) map
                                                                   ->
                                                                   ((
                                                                   address ->
                                                                    ((
                                                                    int ->
                                                                    (address,
                                                                    int) map)
                                                                    [@closure
                                                                    :((int ->
                                                                    ((int ->
                                                                    int)[@closure
                                                                    :int])) *
                                                                    address *
                                                                    (address,
                                                                    int) map)]))
                                                                   [@closure
                                                                    :((int ->
                                                                    ((int ->
                                                                    int)[@closure
                                                                    :int])) *
                                                                    (address,
                                                                    int) map)]))
                                                               [@closure
                                                                 :int ->
                                                                    ((
                                                                    int ->
                                                                    int)
                                                                    [@closure
                                                                    :int])])
                                                               *
                                                               (int ->
                                                                  ((int ->
                                                                    bool)
                                                                  [@closure
                                                                    :
                                                                    int]))
                                                               *
                                                               (int ->
                                                                  ((int ->
                                                                    int)
                                                                  [@closure
                                                                    :
                                                                    int]))
                                                               * address)]))
                                    [@closure
                                      :(((unit -> 'u38 result)[@closure :nat])
                                         * address *
                                         (((address, int) map ->
                                             ((address ->
                                                 ((int -> (address, int) map)
                                                 [@closure
                                                   :((int ->
                                                        ((int -> int)
                                                        [@closure :int]))
                                                      * address * (address,
                                                      int) map)]))[@closure
                                                                    :
                                                                    ((int ->
                                                                    ((int ->
                                                                    int)[@closure
                                                                    :int])) *
                                                                    (address,
                                                                    int) map)]))
                                         [@closure
                                           :int ->
                                              ((int -> int)[@closure :int])])
                                         *
                                         (int ->
                                            ((int -> bool)[@closure :int]))
                                         *
                                         (int ->
                                            ((int -> int)[@closure :int]))
                                         * address)]))[@closure
                                                        :(((unit ->
                                                              'h38 result)
                                                           [@closure :
                                                             nat])
                                                           * address *
                                                           (((address, 
                                                               int) map ->
                                                               ((address ->
                                                                   ((
                                                                   int ->
                                                                    (address,
                                                                    int) map)
                                                                   [@closure
                                                                    :((int ->
                                                                    ((int ->
                                                                    int)[@closure
                                                                    :int])) *
                                                                    address *
                                                                    (address,
                                                                    int) map)]))
                                                               [@closure
                                                                 :((int ->
                                                                    ((int ->
                                                                    int)
                                                                    [@closure
                                                                    :int])) *
                                                                    (
                                                                    address,
                                                                    int) map)]))
                                                           [@closure
                                                             :int ->
                                                                ((int -> int)
                                                                [@closure
                                                                  :int])])
                                                           *
                                                           (int ->
                                                              ((int -> bool)
                                                              [@closure :
                                                                int]))
                                                           *
                                                           (int ->
                                                              ((int -> int)
                                                              [@closure :
                                                                int])))]))
                            [@closure
                              :(((unit -> 'v37 result)[@closure :nat]) *
                                 (((address, int) map ->
                                     ((address ->
                                         ((int -> (address, int) map)
                                         [@closure
                                           :((int ->
                                                ((int -> int)[@closure :int]))
                                              * address * (address, int) map)]))
                                     [@closure
                                       :((int ->
                                            ((int -> int)[@closure :int]))
                                          * (address, int) map)]))[@closure
                                                                    :
                                                                    int ->
                                                                    ((int ->
                                                                    int)
                                                                    [@closure
                                                                    :int])])
                                 * (int -> ((int -> bool)[@closure :int])) *
                                 (int -> ((int -> int)[@closure :int])))])
                            *
                            ((address ->
                                ((address ->
                                    ((address ->
                                        ((int ->
                                            ((state -> result)[@closure
                                                                :(int * nat *
                                                                   address *
                                                                   ((
                                                                   unit ->
                                                                    'k40
                                                                    result)
                                                                   [@closure
                                                                    :nat])
                                                                   * address
                                                                   *
                                                                   ((
                                                                   (address,
                                                                    int) map
                                                                    ->
                                                                    ((
                                                                    address
                                                                    ->
                                                                    ((int ->
                                                                    (address,
                                                                    int) map)
                                                                    [@closure
                                                                    :((int ->
                                                                    ((int ->
                                                                    int)[@closure
                                                                    :int])) *
                                                                    address *
                                                                    (address,
                                                                    int) map)]))
                                                                    [@closure
                                                                    :((int ->
                                                                    ((int ->
                                                                    int)[@closure
                                                                    :int])) *
                                                                    (address,
                                                                    int) map)]))
                                                                   [@closure
                                                                    :int ->
                                                                    ((int ->
                                                                    int)
                                                                    [@closure
                                                                    :int])])
                                                                   *
                                                                   (int ->
                                                                    ((int ->
                                                                    bool)
                                                                    [@closure
                                                                    :int]))
                                                                   *
                                                                   (bool ->
                                                                    ((bool ->
                                                                    bool)
                                                                    [@closure
                                                                    :bool]))
                                                                   *
                                                                   ('l36
                                                                    option ->
                                                                    (('u40 ->
                                                                    ('l36,
                                                                    'u40)
                                                                    result)
                                                                    [@closure
                                                                    :'l36
                                                                    option]))
                                                                   *
                                                                   (int ->
                                                                    ((int ->
                                                                    int)
                                                                    [@closure
                                                                    :int]))
                                                                   * address)]))
                                        [@closure
                                          :(nat * address *
                                             ((unit -> 'f39 result)[@closure
                                                                    :nat])
                                             * address *
                                             (((address, int) map ->
                                                 ((address ->
                                                     ((int ->
                                                         (address, int) map)
                                                     [@closure
                                                       :((int ->
                                                            ((int -> int)
                                                            [@closure :
                                                              int]))
                                                          * address *
                                                          (address, int) map)]))
                                                 [@closure
                                                   :((int ->
                                                        ((int -> int)
                                                        [@closure :int]))
                                                      * (address, int) map)]))
                                             [@closure
                                               :int ->
                                                  ((int -> int)[@closure
                                                                 :int])])
                                             *
                                             (int ->
                                                ((int -> bool)[@closure :int]))
                                             *
                                             (bool ->
                                                ((bool -> bool)[@closure
                                                                 :bool]))
                                             *
                                             ('a40 option ->
                                                (('q39 -> ('a40, 'q39) result)
                                                [@closure :'a40 option]))
                                             *
                                             (int ->
                                                ((int -> int)[@closure :int]))
                                             * address)]))[@closure
                                                            :(nat * address *
                                                               ((unit ->
                                                                   'e38
                                                                    result)
                                                               [@closure
                                                                 :nat])
                                                               * address *
                                                               (((address,
                                                                   int) map
                                                                   ->
                                                                   ((
                                                                   address ->
                                                                    ((
                                                                    int ->
                                                                    (address,
                                                                    int) map)
                                                                    [@closure
                                                                    :((int ->
                                                                    ((int ->
                                                                    int)[@closure
                                                                    :int])) *
                                                                    address *
                                                                    (address,
                                                                    int) map)]))
                                                                   [@closure
                                                                    :((int ->
                                                                    ((int ->
                                                                    int)[@closure
                                                                    :int])) *
                                                                    (address,
                                                                    int) map)]))
                                                               [@closure
                                                                 :int ->
                                                                    ((
                                                                    int ->
                                                                    int)
                                                                    [@closure
                                                                    :int])])
                                                               *
                                                               (int ->
                                                                  ((int ->
                                                                    bool)
                                                                  [@closure
                                                                    :
                                                                    int]))
                                                               *
                                                               (bool ->
                                                                  ((bool ->
                                                                    bool)
                                                                  [@closure
                                                                    :
                                                                    bool]))
                                                               *
                                                               ('v38 option
                                                                  ->
                                                                  (('m38 ->
                                                                    ('m38,
                                                                    'v38)
                                                                    result)
                                                                  [@closure
                                                                    :
                                                                    'v38
                                                                    option]))
                                                               *
                                                               (int ->
                                                                  ((int ->
                                                                    int)
                                                                  [@closure
                                                                    :
                                                                    int])))]))
                                [@closure
                                  :(nat * address *
                                     ((unit -> 'z36 result)[@closure :nat]) *
                                     (((address, int) map ->
                                         ((address ->
                                             ((int -> (address, int) map)
                                             [@closure
                                               :((int ->
                                                    ((int -> int)[@closure
                                                                   :int]))
                                                  * address * (address, 
                                                  int) map)]))[@closure
                                                                :((int ->
                                                                    ((
                                                                    int ->
                                                                    int)
                                                                    [@closure
                                                                    :int]))
                                                                   *
                                                                   (address,
                                                                   int) map)]))
                                     [@closure
                                       :int -> ((int -> int)[@closure :int])])
                                     *
                                     (int -> ((int -> bool)[@closure :int]))
                                     *
                                     (bool ->
                                        ((bool -> bool)[@closure :bool]))
                                     *
                                     ('w37 option ->
                                        (('j37 -> ('j37, 'w37) result)
                                        [@closure :'w37 option]))
                                     *
                                     (int -> ((int -> int)[@closure :int])))]))
                            [@closure
                              :(nat * ((unit -> 'z39 result)[@closure :nat])
                                 *
                                 (((address, int) map ->
                                     ((address ->
                                         ((int -> (address, int) map)
                                         [@closure
                                           :((int ->
                                                ((int -> int)[@closure :int]))
                                              * address * (address, int) map)]))
                                     [@closure
                                       :((int ->
                                            ((int -> int)[@closure :int]))
                                          * (address, int) map)]))[@closure
                                                                    :
                                                                    int ->
                                                                    ((int ->
                                                                    int)
                                                                    [@closure
                                                                    :int])])
                                 * (int -> ((int -> bool)[@closure :int])) *
                                 (bool -> ((bool -> bool)[@closure :bool])) *
                                 ('k36 option ->
                                    (('o40 -> ('k36, 'o40) result)[@closure
                                                                    :
                                                                    'k36
                                                                    option]))
                                 * (int -> ((int -> int)[@closure :int])))]))]))]). Type variables 'a37, 'a38, 'a39, 'a40, 'd37, 'd38, 'e36, 'e37, 'e38, 'e39, 'e40, 'f36, 'f37, 'f39, 'f40, 'g36, 'h38, 'i37, 'i38, 'j36, 'j37, 'j40, 'k36, 'k37, 'k39, 'k40, 'l36, 'l38, 'l39, 'm38, 'n37, 'n40, 'o36, 'o37, 'o40, 'p36, 'p38, 'p39, 'p40, 'q36, 'q38, 'q39, 'r37, 's37, 's40, 't36, 't40, 'u36, 'u38, 'u39, 'u40, 'v36, 'v37, 'v38, 'v39, 'w37, 'y36, 'z36, 'z37, 'z38, 'z39 were replaced by unit.
./tests/extracted-code/liquidity-extract/tests/liquidity_eip20token.liq:134.18-137.73: Warning: 
Unresolved type ((state -> (operation list * state))[@closure
                                      :(msg option *
                                         ((((timestamp * (address * (dun *
                                             dun))) * msg option) ->
                                             ((state -> 's45 result)[@closure
                                                                    :(((timestamp
                                                                    *
                                                                    (address
                                                                    * (dun *
                                                                    dun))) *
                                                                    msg
                                                                    option) *
                                                                    (((timestamp
                                                                    *
                                                                    (address
                                                                    * (dun *
                                                                    dun))) ->
                                                                    ((state
                                                                    ->
                                                                    ((msg
                                                                    option ->
                                                                    'e50
                                                                    result)
                                                                    [@closure
                                                                    :((timestamp
                                                                    *
                                                                    (address
                                                                    * (dun *
                                                                    dun))) *
                                                                    nat *
                                                                    state *
                                                                    (address
                                                                    ->
                                                                    ((address
                                                                    ->
                                                                    ((int ->
                                                                    ((state
                                                                    ->
                                                                    'o47
                                                                    result)
                                                                    [@closure
                                                                    :(int *
                                                                    address *
                                                                    address)]))
                                                                    [@closure
                                                                    :(address
                                                                    *
                                                                    address)]))
                                                                    [@closure
                                                                    :address]))
                                                                    *
                                                                    ((address
                                                                    ->
                                                                    ((address
                                                                    ->
                                                                    ((int ->
                                                                    ((state
                                                                    -> result)
                                                                    [@closure
                                                                    :(int *
                                                                    ((unit ->
                                                                    'p45
                                                                    result)
                                                                    [@closure
                                                                    :nat]) *
                                                                    address *
                                                                    (((address,
                                                                    int) map
                                                                    ->
                                                                    ((address
                                                                    ->
                                                                    ((int ->
                                                                    (address,
                                                                    int) map)
                                                                    [@closure
                                                                    :((int ->
                                                                    ((int ->
                                                                    int)[@closure
                                                                    :int])) *
                                                                    address *
                                                                    (address,
                                                                    int) map)]))
                                                                    [@closure
                                                                    :((int ->
                                                                    ((int ->
                                                                    int)[@closure
                                                                    :int])) *
                                                                    (address,
                                                                    int) map)]))
                                                                    [@closure
                                                                    :int ->
                                                                    ((int ->
                                                                    int)
                                                                    [@closure
                                                                    :int])])
                                                                    *
                                                                    (int ->
                                                                    ((int ->
                                                                    bool)
                                                                    [@closure
                                                                    :int])) *
                                                                    (int ->
                                                                    ((int ->
                                                                    int)
                                                                    [@closure
                                                                    :int])) *
                                                                    address)]))
                                                                    [@closure
                                                                    :(((
                                                                    unit ->
                                                                    'd49
                                                                    result)
                                                                    [@closure
                                                                    :nat]) *
                                                                    address *
                                                                    (((address,
                                                                    int) map
                                                                    ->
                                                                    ((address
                                                                    ->
                                                                    ((int ->
                                                                    (address,
                                                                    int) map)
                                                                    [@closure
                                                                    :((int ->
                                                                    ((int ->
                                                                    int)[@closure
                                                                    :int])) *
                                                                    address *
                                                                    (address,
                                                                    int) map)]))
                                                                    [@closure
                                                                    :((int ->
                                                                    ((int ->
                                                                    int)[@closure
                                                                    :int])) *
                                                                    (address,
                                                                    int) map)]))
                                                                    [@closure
                                                                    :int ->
                                                                    ((int ->
                                                                    int)
                                                                    [@closure
                                                                    :int])])
                                                                    *
                                                                    (int ->
                                                                    ((int ->
                                                                    bool)
                                                                    [@closure
                                                                    :int])) *
                                                                    (int ->
                                                                    ((int ->
                                                                    int)
                                                                    [@closure
                                                                    :int])) *
                                                                    address)]))
                                                                    [@closure
                                                                    :(((
                                                                    unit ->
                                                                    'k45
                                                                    result)
                                                                    [@closure
                                                                    :nat]) *
                                                                    address *
                                                                    (((address,
                                                                    int) map
                                                                    ->
                                                                    ((address
                                                                    ->
                                                                    ((int ->
                                                                    (address,
                                                                    int) map)
                                                                    [@closure
                                                                    :((int ->
                                                                    ((int ->
                                                                    int)[@closure
                                                                    :int])) *
                                                                    address *
                                                                    (address,
                                                                    int) map)]))
                                                                    [@closure
                                                                    :((int ->
                                                                    ((int ->
                                                                    int)[@closure
                                                                    :int])) *
                                                                    (address,
                                                                    int) map)]))
                                                                    [@closure
                                                                    :int ->
                                                                    ((int ->
                                                                    int)
                                                                    [@closure
                                                                    :int])])
                                                                    *
                                                                    (int ->
                                                                    ((int ->
                                                                    bool)
                                                                    [@closure
                                                                    :int])) *
                                                                    (int ->
                                                                    ((int ->
                                                                    int)
                                                                    [@closure
                                                                    :int])))]))
                                                                    [@closure
                                                                    :(((
                                                                    unit ->
                                                                    'x41
                                                                    result)
                                                                    [@closure
                                                                    :nat]) *
                                                                    (((address,
                                                                    int) map
                                                                    ->
                                                                    ((address
                                                                    ->
                                                                    ((int ->
                                                                    (address,
                                                                    int) map)
                                                                    [@closure
                                                                    :((int ->
                                                                    ((int ->
                                                                    int)[@closure
                                                                    :int])) *
                                                                    address *
                                                                    (address,
                                                                    int) map)]))
                                                                    [@closure
                                                                    :((int ->
                                                                    ((int ->
                                                                    int)[@closure
                                                                    :int])) *
                                                                    (address,
                                                                    int) map)]))
                                                                    [@closure
                                                                    :int ->
                                                                    ((int ->
                                                                    int)
                                                                    [@closure
                                                                    :int])])
                                                                    *
                                                                    (int ->
                                                                    ((int ->
                                                                    bool)
                                                                    [@closure
                                                                    :int])) *
                                                                    (int ->
                                                                    ((int ->
                                                                    int)
                                                                    [@closure
                                                                    :int])))])
                                                                    *
                                                                    ((address
                                                                    ->
                                                                    ((address
                                                                    ->
                                                                    ((address
                                                                    ->
                                                                    ((int ->
                                                                    ((state
                                                                    -> result)
                                                                    [@closure
                                                                    :(int *
                                                                    nat *
                                                                    address *
                                                                    ((unit ->
                                                                    'v46
                                                                    result)
                                                                    [@closure
                                                                    :nat]) *
                                                                    address *
                                                                    (((address,
                                                                    int) map
                                                                    ->
                                                                    ((address
                                                                    ->
                                                                    ((int ->
                                                                    (address,
                                                                    int) map)
                                                                    [@closure
                                                                    :((int ->
                                                                    ((int ->
                                                                    int)[@closure
                                                                    :int])) *
                                                                    address *
                                                                    (address,
                                                                    int) map)]))
                                                                    [@closure
                                                                    :((int ->
                                                                    ((int ->
                                                                    int)[@closure
                                                                    :int])) *
                                                                    (address,
                                                                    int) map)]))
                                                                    [@closure
                                                                    :int ->
                                                                    ((int ->
                                                                    int)
                                                                    [@closure
                                                                    :int])])
                                                                    *
                                                                    (int ->
                                                                    ((int ->
                                                                    bool)
                                                                    [@closure
                                                                    :int])) *
                                                                    (bool ->
                                                                    ((bool ->
                                                                    bool)
                                                                    [@closure
                                                                    :bool]))
                                                                    *
                                                                    ('k41
                                                                    option ->
                                                                    (('g45 ->
                                                                    ('g45,
                                                                    'k41)
                                                                    result)
                                                                    [@closure
                                                                    :'k41
                                                                    option]))
                                                                    *
                                                                    (int ->
                                                                    ((int ->
                                                                    int)
                                                                    [@closure
                                                                    :int])) *
                                                                    address)]))
                                                                    [@closure
                                                                    :(nat *
                                                                    address *
                                                                    ((unit ->
                                                                    'b49
                                                                    result)
                                                                    [@closure
                                                                    :nat]) *
                                                                    address *
                                                                    (((address,
                                                                    int) map
                                                                    ->
                                                                    ((address
                                                                    ->
                                                                    ((int ->
                                                                    (address,
                                                                    int) map)
                                                                    [@closure
                                                                    :((int ->
                                                                    ((int ->
                                                                    int)[@closure
                                                                    :int])) *
                                                                    address *
                                                                    (address,
                                                                    int) map)]))
                                                                    [@closure
                                                                    :((int ->
                                                                    ((int ->
                                                                    int)[@closure
                                                                    :int])) *
                                                                    (address,
                                                                    int) map)]))
                                                                    [@closure
                                                                    :int ->
                                                                    ((int ->
                                                                    int)
                                                                    [@closure
                                                                    :int])])
                                                                    *
                                                                    (int ->
                                                                    ((int ->
                                                                    bool)
                                                                    [@closure
                                                                    :int])) *
                                                                    (bool ->
                                                                    ((bool ->
                                                                    bool)
                                                                    [@closure
                                                                    :bool]))
                                                                    *
                                                                    ('n41
                                                                    option ->
                                                                    (('a45 ->
                                                                    ('a45,
                                                                    'n41)
                                                                    result)
                                                                    [@closure
                                                                    :'n41
                                                                    option]))
                                                                    *
                                                                    (int ->
                                                                    ((int ->
                                                                    int)
                                                                    [@closure
                                                                    :int])) *
                                                                    address)]))
                                                                    [@closure
                                                                    :(nat *
                                                                    address *
                                                                    ((unit ->
                                                                    'p44
                                                                    result)
                                                                    [@closure
                                                                    :nat]) *
                                                                    address *
                                                                    (((address,
                                                                    int) map
                                                                    ->
                                                                    ((address
                                                                    ->
                                                                    ((int ->
                                                                    (address,
                                                                    int) map)
                                                                    [@closure
                                                                    :((int ->
                                                                    ((int ->
                                                                    int)[@closure
                                                                    :int])) *
                                                                    address *
                                                                    (address,
                                                                    int) map)]))
                                                                    [@closure
                                                                    :((int ->
                                                                    ((int ->
                                                                    int)[@closure
                                                                    :int])) *
                                                                    (address,
                                                                    int) map)]))
                                                                    [@closure
                                                                    :int ->
                                                                    ((int ->
                                                                    int)
                                                                    [@closure
                                                                    :int])])
                                                                    *
                                                                    (int ->
                                                                    ((int ->
                                                                    bool)
                                                                    [@closure
                                                                    :int])) *
                                                                    (bool ->
                                                                    ((bool ->
                                                                    bool)
                                                                    [@closure
                                                                    :bool]))
                                                                    *
                                                                    ('q44
                                                                    option ->
                                                                    (('u49 ->
                                                                    ('q44,
                                                                    'u49)
                                                                    result)
                                                                    [@closure
                                                                    :'q44
                                                                    option]))
                                                                    *
                                                                    (int ->
                                                                    ((int ->
                                                                    int)
                                                                    [@closure
                                                                    :int])))]))
                                                                    [@closure
                                                                    :(nat *
                                                                    address *
                                                                    ((unit ->
                                                                    'h50
                                                                    result)
                                                                    [@closure
                                                                    :nat]) *
                                                                    (((address,
                                                                    int) map
                                                                    ->
                                                                    ((address
                                                                    ->
                                                                    ((int ->
                                                                    (address,
                                                                    int) map)
                                                                    [@closure
                                                                    :((int ->
                                                                    ((int ->
                                                                    int)[@closure
                                                                    :int])) *
                                                                    address *
                                                                    (address,
                                                                    int) map)]))
                                                                    [@closure
                                                                    :((int ->
                                                                    ((int ->
                                                                    int)[@closure
                                                                    :int])) *
                                                                    (address,
                                                                    int) map)]))
                                                                    [@closure
                                                                    :int ->
                                                                    ((int ->
                                                                    int)
                                                                    [@closure
                                                                    :int])])
                                                                    *
                                                                    (int ->
                                                                    ((int ->
                                                                    bool)
                                                                    [@closure
                                                                    :int])) *
                                                                    (bool ->
                                                                    ((bool ->
                                                                    bool)
                                                                    [@closure
                                                                    :bool]))
                                                                    *
                                                                    ('a41
                                                                    option ->
                                                                    (('r46 ->
                                                                    ('a41,
                                                                    'r46)
                                                                    result)
                                                                    [@closure
                                                                    :'a41
                                                                    option]))
                                                                    *
                                                                    (int ->
                                                                    ((int ->
                                                                    int)
                                                                    [@closure
                                                                    :int])))]))
                                                                    [@closure
                                                                    :(nat *
                                                                    ((unit ->
                                                                    'j49
                                                                    result)
                                                                    [@closure
                                                                    :nat]) *
                                                                    (((address,
                                                                    int) map
                                                                    ->
                                                                    ((address
                                                                    ->
                                                                    ((int ->
                                                                    (address,
                                                                    int) map)
                                                                    [@closure
                                                                    :((int ->
                                                                    ((int ->
                                                                    int)[@closure
                                                                    :int])) *
                                                                    address *
                                                                    (address,
                                                                    int) map)]))
                                                                    [@closure
                                                                    :((int ->
                                                                    ((int ->
                                                                    int)[@closure
                                                                    :int])) *
                                                                    (address,
                                                                    int) map)]))
                                                                    [@closure
                                                                    :int ->
                                                                    ((int ->
                                                                    int)
                                                                    [@closure
                                                                    :int])])
                                                                    *
                                                                    (int ->
                                                                    ((int ->
                                                                    bool)
                                                                    [@closure
                                                                    :int])) *
                                                                    (bool ->
                                                                    ((bool ->
                                                                    bool)
                                                                    [@closure
                                                                    :bool]))
                                                                    *
                                                                    ('c47
                                                                    option ->
                                                                    (('o43 ->
                                                                    ('c47,
                                                                    'o43)
                                                                    result)
                                                                    [@closure
                                                                    :'c47
                                                                    option]))
                                                                    *
                                                                    (int ->
                                                                    ((int ->
                                                                    int)
                                                                    [@closure
                                                                    :int])))]))]))
                                                                    [@closure
                                                                    :((timestamp
                                                                    *
                                                                    (address
                                                                    * (dun *
                                                                    dun))) *
                                                                    nat *
                                                                    (address
                                                                    ->
                                                                    ((address
                                                                    ->
                                                                    ((int ->
                                                                    ((state
                                                                    ->
                                                                    'u41
                                                                    result)
                                                                    [@closure
                                                                    :(int *
                                                                    address *
                                                                    address)]))
                                                                    [@closure
                                                                    :(address
                                                                    *
                                                                    address)]))
                                                                    [@closure
                                                                    :address]))
                                                                    *
                                                                    ((address
                                                                    ->
                                                                    ((address
                                                                    ->
                                                                    ((int ->
                                                                    ((state
                                                                    -> result)
                                                                    [@closure
                                                                    :(int *
                                                                    ((unit ->
                                                                    'p48
                                                                    result)
                                                                    [@closure
                                                                    :nat]) *
                                                                    address *
                                                                    (((address,
                                                                    int) map
                                                                    ->
                                                                    ((address
                                                                    ->
                                                                    ((int ->
                                                                    (address,
                                                                    int) map)
                                                                    [@closure
                                                                    :((int ->
                                                                    ((int ->
                                                                    int)[@closure
                                                                    :int])) *
                                                                    address *
                                                                    (address,
                                                                    int) map)]))
                                                                    [@closure
                                                                    :((int ->
                                                                    ((int ->
                                                                    int)[@closure
                                                                    :int])) *
                                                                    (address,
                                                                    int) map)]))
                                                                    [@closure
                                                                    :int ->
                                                                    ((int ->
                                                                    int)
                                                                    [@closure
                                                                    :int])])
                                                                    *
                                                                    (int ->
                                                                    ((int ->
                                                                    bool)
                                                                    [@closure
                                                                    :int])) *
                                                                    (int ->
                                                                    ((int ->
                                                                    int)
                                                                    [@closure
                                                                    :int])) *
                                                                    address)]))
                                                                    [@closure
                                                                    :(((
                                                                    unit ->
                                                                    'x44
                                                                    result)
                                                                    [@closure
                                                                    :nat]) *
                                                                    address *
                                                                    (((address,
                                                                    int) map
                                                                    ->
                                                                    ((address
                                                                    ->
                                                                    ((int ->
                                                                    (address,
                                                                    int) map)
                                                                    [@closure
                                                                    :((int ->
                                                                    ((int ->
                                                                    int)[@closure
                                                                    :int])) *
                                                                    address *
                                                                    (address,
                                                                    int) map)]))
                                                                    [@closure
                                                                    :((int ->
                                                                    ((int ->
                                                                    int)[@closure
                                                                    :int])) *
                                                                    (address,
                                                                    int) map)]))
                                                                    [@closure
                                                                    :int ->
                                                                    ((int ->
                                                                    int)
                                                                    [@closure
                                                                    :int])])
                                                                    *
                                                                    (int ->
                                                                    ((int ->
                                                                    bool)
                                                                    [@closure
                                                                    :int])) *
                                                                    (int ->
                                                                    ((int ->
                                                                    int)
                                                                    [@closure
                                                                    :int])) *
                                                                    address)]))
                                                                    [@closure
                                                                    :(((
                                                                    unit ->
                                                                    'j48
                                                                    result)
                                                                    [@closure
                                                                    :nat]) *
                                                                    address *
                                                                    (((address,
                                                                    int) map
                                                                    ->
                                                                    ((address
                                                                    ->
                                                                    ((int ->
                                                                    (address,
                                                                    int) map)
                                                                    [@closure
                                                                    :((int ->
                                                                    ((int ->
                                                                    int)[@closure
                                                                    :int])) *
                                                                    address *
                                                                    (address,
                                                                    int) map)]))
                                                                    [@closure
                                                                    :((int ->
                                                                    ((int ->
                                                                    int)[@closure
                                                                    :int])) *
                                                                    (address,
                                                                    int) map)]))
                                                                    [@closure
                                                                    :int ->
                                                                    ((int ->
                                                                    int)
                                                                    [@closure
                                                                    :int])])
                                                                    *
                                                                    (int ->
                                                                    ((int ->
                                                                    bool)
                                                                    [@closure
                                                                    :int])) *
                                                                    (int ->
                                                                    ((int ->
                                                                    int)
                                                                    [@closure
                                                                    :int])))]))
                                                                    [@closure
                                                                    :(((
                                                                    unit ->
                                                                    'h45
                                                                    result)
                                                                    [@closure
                                                                    :nat]) *
                                                                    (((address,
                                                                    int) map
                                                                    ->
                                                                    ((address
                                                                    ->
                                                                    ((int ->
                                                                    (address,
                                                                    int) map)
                                                                    [@closure
                                                                    :((int ->
                                                                    ((int ->
                                                                    int)[@closure
                                                                    :int])) *
                                                                    address *
                                                                    (address,
                                                                    int) map)]))
                                                                    [@closure
                                                                    :((int ->
                                                                    ((int ->
                                                                    int)[@closure
                                                                    :int])) *
                                                                    (address,
                                                                    int) map)]))
                                                                    [@closure
                                                                    :int ->
                                                                    ((int ->
                                                                    int)
                                                                    [@closure
                                                                    :int])])
                                                                    *
                                                                    (int ->
                                                                    ((int ->
                                                                    bool)
                                                                    [@closure
                                                                    :int])) *
                                                                    (int ->
                                                                    ((int ->
                                                                    int)
                                                                    [@closure
                                                                    :int])))])
                                                                    *
                                                                    ((address
                                                                    ->
                                                                    ((address
                                                                    ->
                                                                    ((address
                                                                    ->
                                                                    ((int ->
                                                                    ((state
                                                                    -> result)
                                                                    [@closure
                                                                    :(int *
                                                                    nat *
                                                                    address *
                                                                    ((unit ->
                                                                    'j46
                                                                    result)
                                                                    [@closure
                                                                    :nat]) *
                                                                    address *
                                                                    (((address,
                                                                    int) map
                                                                    ->
                                                                    ((address
                                                                    ->
                                                                    ((int ->
                                                                    (address,
                                                                    int) map)
                                                                    [@closure
                                                                    :((int ->
                                                                    ((int ->
                                                                    int)[@closure
                                                                    :int])) *
                                                                    address *
                                                                    (address,
                                                                    int) map)]))
                                                                    [@closure
                                                                    :((int ->
                                                                    ((int ->
                                                                    int)[@closure
                                                                    :int])) *
                                                                    (address,
                                                                    int) map)]))
                                                                    [@closure
                                                                    :int ->
                                                                    ((int ->
                                                                    int)
                                                                    [@closure
                                                                    :int])])
                                                                    *
                                                                    (int ->
                                                                    ((int ->
                                                                    bool)
                                                                    [@closure
                                                                    :int])) *
                                                                    (bool ->
                                                                    ((bool ->
                                                                    bool)
                                                                    [@closure
                                                                    :bool]))
                                                                    *
                                                                    ('q43
                                                                    option ->
                                                                    (('l49 ->
                                                                    ('l49,
                                                                    'q43)
                                                                    result)
                                                                    [@closure
                                                                    :'q43
                                                                    option]))
                                                                    *
                                                                    (int ->
                                                                    ((int ->
                                                                    int)
                                                                    [@closure
                                                                    :int])) *
                                                                    address)]))
                                                                    [@closure
                                                                    :(nat *
                                                                    address *
                                                                    ((unit ->
                                                                    'y44
                                                                    result)
                                                                    [@closure
                                                                    :nat]) *
                                                                    address *
                                                                    (((address,
                                                                    int) map
                                                                    ->
                                                                    ((address
                                                                    ->
                                                                    ((int ->
                                                                    (address,
                                                                    int) map)
                                                                    [@closure
                                                                    :((int ->
                                                                    ((int ->
                                                                    int)[@closure
                                                                    :int])) *
                                                                    address *
                                                                    (address,
                                                                    int) map)]))
                                                                    [@closure
                                                                    :((int ->
                                                                    ((int ->
                                                                    int)[@closure
                                                                    :int])) *
                                                                    (address,
                                                                    int) map)]))
                                                                    [@closure
                                                                    :int ->
                                                                    ((int ->
                                                                    int)
                                                                    [@closure
                                                                    :int])])
                                                                    *
                                                                    (int ->
                                                                    ((int ->
                                                                    bool)
                                                                    [@closure
                                                                    :int])) *
                                                                    (bool ->
                                                                    ((bool ->
                                                                    bool)
                                                                    [@closure
                                                                    :bool]))
                                                                    *
                                                                    ('p43
                                                                    option ->
                                                                    (('q48 ->
                                                                    ('p43,
                                                                    'q48)
                                                                    result)
                                                                    [@closure
                                                                    :'p43
                                                                    option]))
                                                                    *
                                                                    (int ->
                                                                    ((int ->
                                                                    int)
                                                                    [@closure
                                                                    :int])) *
                                                                    address)]))
                                                                    [@closure
                                                                    :(nat *
                                                                    address *
                                                                    ((unit ->
                                                                    'b45
                                                                    result)
                                                                    [@closure
                                                                    :nat]) *
                                                                    address *
                                                                    (((address,
                                                                    int) map
                                                                    ->
                                                                    ((address
                                                                    ->
                                                                    ((int ->
                                                                    (address,
                                                                    int) map)
                                                                    [@closure
                                                                    :((int ->
                                                                    ((int ->
                                                                    int)[@closure
                                                                    :int])) *
                                                                    address *
                                                                    (address,
                                                                    int) map)]))
                                                                    [@closure
                                                                    :((int ->
                                                                    ((int ->
                                                                    int)[@closure
                                                                    :int])) *
                                                                    (address,
                                                                    int) map)]))
                                                                    [@closure
                                                                    :int ->
                                                                    ((int ->
                                                                    int)
                                                                    [@closure
                                                                    :int])])
                                                                    *
                                                                    (int ->
                                                                    ((int ->
                                                                    bool)
                                                                    [@closure
                                                                    :int])) *
                                                                    (bool ->
                                                                    ((bool ->
                                                                    bool)
                                                                    [@closure
                                                                    :bool]))
                                                                    *
                                                                    ('z48
                                                                    option ->
                                                                    (('e41 ->
                                                                    ('e41,
                                                                    'z48)
                                                                    result)
                                                                    [@closure
                                                                    :'z48
                                                                    option]))
                                                                    *
                                                                    (int ->
                                                                    ((int ->
                                                                    int)
                                                                    [@closure
                                                                    :int])))]))
                                                                    [@closure
                                                                    :(nat *
                                                                    address *
                                                                    ((unit ->
                                                                    'n47
                                                                    result)
                                                                    [@closure
                                                                    :nat]) *
                                                                    (((address,
                                                                    int) map
                                                                    ->
                                                                    ((address
                                                                    ->
                                                                    ((int ->
                                                                    (address,
                                                                    int) map)
                                                                    [@closure
                                                                    :((int ->
                                                                    ((int ->
                                                                    int)[@closure
                                                                    :int])) *
                                                                    address *
                                                                    (address,
                                                                    int) map)]))
                                                                    [@closure
                                                                    :((int ->
                                                                    ((int ->
                                                                    int)[@closure
                                                                    :int])) *
                                                                    (address,
                                                                    int) map)]))
                                                                    [@closure
                                                                    :int ->
                                                                    ((int ->
                                                                    int)
                                                                    [@closure
                                                                    :int])])
                                                                    *
                                                                    (int ->
                                                                    ((int ->
                                                                    bool)
                                                                    [@closure
                                                                    :int])) *
                                                                    (bool ->
                                                                    ((bool ->
                                                                    bool)
                                                                    [@closure
                                                                    :bool]))
                                                                    *
                                                                    ('c49
                                                                    option ->
                                                                    (('g43 ->
                                                                    ('c49,
                                                                    'g43)
                                                                    result)
                                                                    [@closure
                                                                    :'c49
                                                                    option]))
                                                                    *
                                                                    (int ->
                                                                    ((int ->
                                                                    int)
                                                                    [@closure
                                                                    :int])))]))
                                                                    [@closure
                                                                    :(nat *
                                                                    ((unit ->
                                                                    'v42
                                                                    result)
                                                                    [@closure
                                                                    :nat]) *
                                                                    (((address,
                                                                    int) map
                                                                    ->
                                                                    ((address
                                                                    ->
                                                                    ((int ->
                                                                    (address,
                                                                    int) map)
                                                                    [@closure
                                                                    :((int ->
                                                                    ((int ->
                                                                    int)[@closure
                                                                    :int])) *
                                                                    address *
                                                                    (address,
                                                                    int) map)]))
                                                                    [@closure
                                                                    :((int ->
                                                                    ((int ->
                                                                    int)[@closure
                                                                    :int])) *
                                                                    (address,
                                                                    int) map)]))
                                                                    [@closure
                                                                    :int ->
                                                                    ((int ->
                                                                    int)
                                                                    [@closure
                                                                    :int])])
                                                                    *
                                                                    (int ->
                                                                    ((int ->
                                                                    bool)
                                                                    [@closure
                                                                    :int])) *
                                                                    (bool ->
                                                                    ((bool ->
                                                                    bool)
                                                                    [@closure
                                                                    :bool]))
                                                                    *
                                                                    ('f43
                                                                    option ->
                                                                    (('g48 ->
                                                                    ('f43,
                                                                    'g48)
                                                                    result)
                                                                    [@closure
                                                                    :'f43
                                                                    option]))
                                                                    *
                                                                    (int ->
                                                                    ((int ->
                                                                    int)
                                                                    [@closure
                                                                    :int])))]))]))
                                                                    [@closure
                                                                    :(nat *
                                                                    (address
                                                                    ->
                                                                    ((address
                                                                    ->
                                                                    ((int ->
                                                                    ((state
                                                                    ->
                                                                    'i46
                                                                    result)
                                                                    [@closure
                                                                    :(int *
                                                                    address *
                                                                    address)]))
                                                                    [@closure
                                                                    :(address
                                                                    *
                                                                    address)]))
                                                                    [@closure
                                                                    :address]))
                                                                    *
                                                                    ((address
                                                                    ->
                                                                    ((address
                                                                    ->
                                                                    ((int ->
                                                                    ((state
                                                                    -> result)
                                                                    [@closure
                                                                    :(int *
                                                                    ((unit ->
                                                                    'e47
                                                                    result)
                                                                    [@closure
                                                                    :nat]) *
                                                                    address *
                                                                    (((address,
                                                                    int) map
                                                                    ->
                                                                    ((address
                                                                    ->
                                                                    ((int ->
                                                                    (address,
                                                                    int) map)
                                                                    [@closure
                                                                    :((int ->
                                                                    ((int ->
                                                                    int)[@closure
                                                                    :int])) *
                                                                    address *
                                                                    (address,
                                                                    int) map)]))
                                                                    [@closure
                                                                    :((int ->
                                                                    ((int ->
                                                                    int)[@closure
                                                                    :int])) *
                                                                    (address,
                                                                    int) map)]))
                                                                    [@closure
                                                                    :int ->
                                                                    ((int ->
                                                                    int)
                                                                    [@closure
                                                                    :int])])
                                                                    *
                                                                    (int ->
                                                                    ((int ->
                                                                    bool)
                                                                    [@closure
                                                                    :int])) *
                                                                    (int ->
                                                                    ((int ->
                                                                    int)
                                                                    [@closure
                                                                    :int])) *
                                                                    address)]))
                                                                    [@closure
                                                                    :(((
                                                                    unit ->
                                                                    'm41
                                                                    result)
                                                                    [@closure
                                                                    :nat]) *
                                                                    address *
                                                                    (((address,
                                                                    int) map
                                                                    ->
                                                                    ((address
                                                                    ->
                                                                    ((int ->
                                                                    (address,
                                                                    int) map)
                                                                    [@closure
                                                                    :((int ->
                                                                    ((int ->
                                                                    int)[@closure
                                                                    :int])) *
                                                                    address *
                                                                    (address,
                                                                    int) map)]))
                                                                    [@closure
                                                                    :((int ->
                                                                    ((int ->
                                                                    int)[@closure
                                                                    :int])) *
                                                                    (address,
                                                                    int) map)]))
                                                                    [@closure
                                                                    :int ->
                                                                    ((int ->
                                                                    int)
                                                                    [@closure
                                                                    :int])])
                                                                    *
                                                                    (int ->
                                                                    ((int ->
                                                                    bool)
                                                                    [@closure
                                                                    :int])) *
                                                                    (int ->
                                                                    ((int ->
                                                                    int)
                                                                    [@closure
                                                                    :int])) *
                                                                    address)]))
                                                                    [@closure
                                                                    :(((
                                                                    unit ->
                                                                    'a46
                                                                    result)
                                                                    [@closure
                                                                    :nat]) *
                                                                    address *
                                                                    (((address,
                                                                    int) map
                                                                    ->
                                                                    ((address
                                                                    ->
                                                                    ((int ->
                                                                    (address,
                                                                    int) map)
                                                                    [@closure
                                                                    :((int ->
                                                                    ((int ->
                                                                    int)[@closure
                                                                    :int])) *
                                                                    address *
                                                                    (address,
                                                                    int) map)]))
                                                                    [@closure
                                                                    :((int ->
                                                                    ((int ->
                                                                    int)[@closure
                                                                    :int])) *
                                                                    (address,
                                                                    int) map)]))
                                                                    [@closure
                                                                    :int ->
                                                                    ((int ->
                                                                    int)
                                                                    [@closure
                                                                    :int])])
                                                                    *
                                                                    (int ->
                                                                    ((int ->
                                                                    bool)
                                                                    [@closure
                                                                    :int])) *
                                                                    (int ->
                                                                    ((int ->
                                                                    int)
                                                                    [@closure
                                                                    :int])))]))
                                                                    [@closure
                                                                    :(((
                                                                    unit ->
                                                                    'v41
                                                                    result)
                                                                    [@closure
                                                                    :nat]) *
                                                                    (((address,
                                                                    int) map
                                                                    ->
                                                                    ((address
                                                                    ->
                                                                    ((int ->
                                                                    (address,
                                                                    int) map)
                                                                    [@closure
                                                                    :((int ->
                                                                    ((int ->
                                                                    int)[@closure
                                                                    :int])) *
                                                                    address *
                                                                    (address,
                                                                    int) map)]))
                                                                    [@closure
                                                                    :((int ->
                                                                    ((int ->
                                                                    int)[@closure
                                                                    :int])) *
                                                                    (address,
                                                                    int) map)]))
                                                                    [@closure
                                                                    :int ->
                                                                    ((int ->
                                                                    int)
                                                                    [@closure
                                                                    :int])])
                                                                    *
                                                                    (int ->
                                                                    ((int ->
                                                                    bool)
                                                                    [@closure
                                                                    :int])) *
                                                                    (int ->
                                                                    ((int ->
                                                                    int)
                                                                    [@closure
                                                                    :int])))])
                                                                    *
                                                                    ((address
                                                                    ->
                                                                    ((address
                                                                    ->
                                                                    ((address
                                                                    ->
                                                                    ((int ->
                                                                    ((state
                                                                    -> result)
                                                                    [@closure
                                                                    :(int *
                                                                    nat *
                                                                    address *
                                                                    ((unit ->
                                                                    'f47
                                                                    result)
                                                                    [@closure
                                                                    :nat]) *
                                                                    address *
                                                                    (((address,
                                                                    int) map
                                                                    ->
                                                                    ((address
                                                                    ->
                                                                    ((int ->
                                                                    (address,
                                                                    int) map)
                                                                    [@closure
                                                                    :((int ->
                                                                    ((int ->
                                                                    int)[@closure
                                                                    :int])) *
                                                                    address *
                                                                    (address,
                                                                    int) map)]))
                                                                    [@closure
                                                                    :((int ->
                                                                    ((int ->
                                                                    int)[@closure
                                                                    :int])) *
                                                                    (address,
                                                                    int) map)]))
                                                                    [@closure
                                                                    :int ->
                                                                    ((int ->
                                                                    int)
                                                                    [@closure
                                                                    :int])])
                                                                    *
                                                                    (int ->
                                                                    ((int ->
                                                                    bool)
                                                                    [@closure
                                                                    :int])) *
                                                                    (bool ->
                                                                    ((bool ->
                                                                    bool)
                                                                    [@closure
                                                                    :bool]))
                                                                    *
                                                                    ('l47
                                                                    option ->
                                                                    (('o41 ->
                                                                    ('l47,
                                                                    'o41)
                                                                    result)
                                                                    [@closure
                                                                    :'l47
                                                                    option]))
                                                                    *
                                                                    (int ->
                                                                    ((int ->
                                                                    int)
                                                                    [@closure
                                                                    :int])) *
                                                                    address)]))
                                                                    [@closure
                                                                    :(nat *
                                                                    address *
                                                                    ((unit ->
                                                                    'j45
                                                                    result)
                                                                    [@closure
                                                                    :nat]) *
                                                                    address *
                                                                    (((address,
                                                                    int) map
                                                                    ->
                                                                    ((address
                                                                    ->
                                                                    ((int ->
                                                                    (address,
                                                                    int) map)
                                                                    [@closure
                                                                    :((int ->
                                                                    ((int ->
                                                                    int)[@closure
                                                                    :int])) *
                                                                    address *
                                                                    (address,
                                                                    int) map)]))
                                                                    [@closure
                                                                    :((int ->
                                                                    ((int ->
                                                                    int)[@closure
                                                                    :int])) *
                                                                    (address,
                                                                    int) map)]))
                                                                    [@closure
                                                                    :int ->
                                                                    ((int ->
                                                                    int)
                                                                    [@closure
                                                                    :int])])
                                                                    *
                                                                    (int ->
                                                                    ((int ->
                                                                    bool)
                                                                    [@closure
                                                                    :int])) *
                                                                    (bool ->
                                                                    ((bool ->
                                                                    bool)
                                                                    [@closure
                                                                    :bool]))
                                                                    *
                                                                    ('r43
                                                                    option ->
                                                                    (('m49 ->
                                                                    ('m49,
                                                                    'r43)
                                                                    result)
                                                                    [@closure
                                                                    :'r43
                                                                    option]))
                                                                    *
                                                                    (int ->
                                                                    ((int ->
                                                                    int)
                                                                    [@closure
                                                                    :int])) *
                                                                    address)]))
                                                                    [@closure
                                                                    :(nat *
                                                                    address *
                                                                    ((unit ->
                                                                    'z44
                                                                    result)
                                                                    [@closure
                                                                    :nat]) *
                                                                    address *
                                                                    (((address,
                                                                    int) map
                                                                    ->
                                                                    ((address
                                                                    ->
                                                                    ((int ->
                                                                    (address,
                                                                    int) map)
                                                                    [@closure
                                                                    :((int ->
                                                                    ((int ->
                                                                    int)[@closure
                                                                    :int])) *
                                                                    address *
                                                                    (address,
                                                                    int) map)]))
                                                                    [@closure
                                                                    :((int ->
                                                                    ((int ->
                                                                    int)[@closure
                                                                    :int])) *
                                                                    (address,
                                                                    int) map)]))
                                                                    [@closure
                                                                    :int ->
                                                                    ((int ->
                                                                    int)
                                                                    [@closure
                                                                    :int])])
                                                                    *
                                                                    (int ->
                                                                    ((int ->
                                                                    bool)
                                                                    [@closure
                                                                    :int])) *
                                                                    (bool ->
                                                                    ((bool ->
                                                                    bool)
                                                                    [@closure
                                                                    :bool]))
                                                                    *
                                                                    ('w41
                                                                    option ->
                                                                    (('x47 ->
                                                                    ('w41,
                                                                    'x47)
                                                                    result)
                                                                    [@closure
                                                                    :'w41
                                                                    option]))
                                                                    *
                                                                    (int ->
                                                                    ((int ->
                                                                    int)
                                                                    [@closure
                                                                    :int])))]))
                                                                    [@closure
                                                                    :(nat *
                                                                    address *
                                                                    ((unit ->
                                                                    'e43
                                                                    result)
                                                                    [@closure
                                                                    :nat]) *
                                                                    (((address,
                                                                    int) map
                                                                    ->
                                                                    ((address
                                                                    ->
                                                                    ((int ->
                                                                    (address,
                                                                    int) map)
                                                                    [@closure
                                                                    :((int ->
                                                                    ((int ->
                                                                    int)[@closure
                                                                    :int])) *
                                                                    address *
                                                                    (address,
                                                                    int) map)]))
                                                                    [@closure
                                                                    :((int ->
                                                                    ((int ->
                                                                    int)[@closure
                                                                    :int])) *
                                                                    (address,
                                                                    int) map)]))
                                                                    [@closure
                                                                    :int ->
                                                                    ((int ->
                                                                    int)
                                                                    [@closure
                                                                    :int])])
                                                                    *
                                                                    (int ->
                                                                    ((int ->
                                                                    bool)
                                                                    [@closure
                                                                    :int])) *
                                                                    (bool ->
                                                                    ((bool ->
                                                                    bool)
                                                                    [@closure
                                                                    :bool]))
                                                                    *
                                                                    ('e42
                                                                    option ->
                                                                    (('s46 ->
                                                                    ('e42,
                                                                    's46)
                                                                    result)
                                                                    [@closure
                                                                    :'e42
                                                                    option]))
                                                                    *
                                                                    (int ->
                                                                    ((int ->
                                                                    int)
                                                                    [@closure
                                                                    :int])))]))
                                                                    [@closure
                                                                    :(nat *
                                                                    ((unit ->
                                                                    'h43
                                                                    result)
                                                                    [@closure
                                                                    :nat]) *
                                                                    (((address,
                                                                    int) map
                                                                    ->
                                                                    ((address
                                                                    ->
                                                                    ((int ->
                                                                    (address,
                                                                    int) map)
                                                                    [@closure
                                                                    :((int ->
                                                                    ((int ->
                                                                    int)[@closure
                                                                    :int])) *
                                                                    address *
                                                                    (address,
                                                                    int) map)]))
                                                                    [@closure
                                                                    :((int ->
                                                                    ((int ->
                                                                    int)[@closure
                                                                    :int])) *
                                                                    (address,
                                                                    int) map)]))
                                                                    [@closure
                                                                    :int ->
                                                                    ((int ->
                                                                    int)
                                                                    [@closure
                                                                    :int])])
                                                                    *
                                                                    (int ->
                                                                    ((int ->
                                                                    bool)
                                                                    [@closure
                                                                    :int])) *
                                                                    (bool ->
                                                                    ((bool ->
                                                                    bool)
                                                                    [@closure
                                                                    :bool]))
                                                                    *
                                                                    ('b47
                                                                    option ->
                                                                    (('t48 ->
                                                                    ('b47,
                                                                    't48)
                                                                    result)
                                                                    [@closure
                                                                    :'b47
                                                                    option]))
                                                                    *
                                                                    (int ->
                                                                    ((int ->
                                                                    int)
                                                                    [@closure
                                                                    :int])))]))]))]))
                                         [@closure
                                           :(((timestamp * (address * (dun *
                                                dun))) ->
                                                ((state ->
                                                    ((msg option ->
                                                        'x49 result)[@closure
                                                                    :((timestamp
                                                                    *
                                                                    (address
                                                                    * (dun *
                                                                    dun))) *
                                                                    nat *
                                                                    state *
                                                                    (address
                                                                    ->
                                                                    ((address
                                                                    ->
                                                                    ((int ->
                                                                    ((state
                                                                    ->
                                                                    'l41
                                                                    result)
                                                                    [@closure
                                                                    :(int *
                                                                    address *
                                                                    address)]))
                                                                    [@closure
                                                                    :(address
                                                                    *
                                                                    address)]))
                                                                    [@closure
                                                                    :address]))
                                                                    *
                                                                    ((address
                                                                    ->
                                                                    ((address
                                                                    ->
                                                                    ((int ->
                                                                    ((state
                                                                    -> result)
                                                                    [@closure
                                                                    :(int *
                                                                    ((unit ->
                                                                    'r44
                                                                    result)
                                                                    [@closure
                                                                    :nat]) *
                                                                    address *
                                                                    (((address,
                                                                    int) map
                                                                    ->
                                                                    ((address
                                                                    ->
                                                                    ((int ->
                                                                    (address,
                                                                    int) map)
                                                                    [@closure
                                                                    :((int ->
                                                                    ((int ->
                                                                    int)[@closure
                                                                    :int])) *
                                                                    address *
                                                                    (address,
                                                                    int) map)]))
                                                                    [@closure
                                                                    :((int ->
                                                                    ((int ->
                                                                    int)[@closure
                                                                    :int])) *
                                                                    (address,
                                                                    int) map)]))
                                                                    [@closure
                                                                    :int ->
                                                                    ((int ->
                                                                    int)
                                                                    [@closure
                                                                    :int])])
                                                                    *
                                                                    (int ->
                                                                    ((int ->
                                                                    bool)
                                                                    [@closure
                                                                    :int])) *
                                                                    (int ->
                                                                    ((int ->
                                                                    int)
                                                                    [@closure
                                                                    :int])) *
                                                                    address)]))
                                                                    [@closure
                                                                    :(((
                                                                    unit ->
                                                                    'c41
                                                                    result)
                                                                    [@closure
                                                                    :nat]) *
                                                                    address *
                                                                    (((address,
                                                                    int) map
                                                                    ->
                                                                    ((address
                                                                    ->
                                                                    ((int ->
                                                                    (address,
                                                                    int) map)
                                                                    [@closure
                                                                    :((int ->
                                                                    ((int ->
                                                                    int)[@closure
                                                                    :int])) *
                                                                    address *
                                                                    (address,
                                                                    int) map)]))
                                                                    [@closure
                                                                    :((int ->
                                                                    ((int ->
                                                                    int)[@closure
                                                                    :int])) *
                                                                    (address,
                                                                    int) map)]))
                                                                    [@closure
                                                                    :int ->
                                                                    ((int ->
                                                                    int)
                                                                    [@closure
                                                                    :int])])
                                                                    *
                                                                    (int ->
                                                                    ((int ->
                                                                    bool)
                                                                    [@closure
                                                                    :int])) *
                                                                    (int ->
                                                                    ((int ->
                                                                    int)
                                                                    [@closure
                                                                    :int])) *
                                                                    address)]))
                                                                    [@closure
                                                                    :(((
                                                                    unit ->
                                                                    'd47
                                                                    result)
                                                                    [@closure
                                                                    :nat]) *
                                                                    address *
                                                                    (((address,
                                                                    int) map
                                                                    ->
                                                                    ((address
                                                                    ->
                                                                    ((int ->
                                                                    (address,
                                                                    int) map)
                                                                    [@closure
                                                                    :((int ->
                                                                    ((int ->
                                                                    int)[@closure
                                                                    :int])) *
                                                                    address *
                                                                    (address,
                                                                    int) map)]))
                                                                    [@closure
                                                                    :((int ->
                                                                    ((int ->
                                                                    int)[@closure
                                                                    :int])) *
                                                                    (address,
                                                                    int) map)]))
                                                                    [@closure
                                                                    :int ->
                                                                    ((int ->
                                                                    int)
                                                                    [@closure
                                                                    :int])])
                                                                    *
                                                                    (int ->
                                                                    ((int ->
                                                                    bool)
                                                                    [@closure
                                                                    :int])) *
                                                                    (int ->
                                                                    ((int ->
                                                                    int)
                                                                    [@closure
                                                                    :int])))]))
                                                                    [@closure
                                                                    :(((
                                                                    unit ->
                                                                    'h44
                                                                    result)
                                                                    [@closure
                                                                    :nat]) *
                                                                    (((address,
                                                                    int) map
                                                                    ->
                                                                    ((address
                                                                    ->
                                                                    ((int ->
                                                                    (address,
                                                                    int) map)
                                                                    [@closure
                                                                    :((int ->
                                                                    ((int ->
                                                                    int)[@closure
                                                                    :int])) *
                                                                    address *
                                                                    (address,
                                                                    int) map)]))
                                                                    [@closure
                                                                    :((int ->
                                                                    ((int ->
                                                                    int)[@closure
                                                                    :int])) *
                                                                    (address,
                                                                    int) map)]))
                                                                    [@closure
                                                                    :int ->
                                                                    ((int ->
                                                                    int)
                                                                    [@closure
                                                                    :int])])
                                                                    *
                                                                    (int ->
                                                                    ((int ->
                                                                    bool)
                                                                    [@closure
                                                                    :int])) *
                                                                    (int ->
                                                                    ((int ->
                                                                    int)
                                                                    [@closure
                                                                    :int])))])
                                                                    *
                                                                    ((address
                                                                    ->
                                                                    ((address
                                                                    ->
                                                                    ((address
                                                                    ->
                                                                    ((int ->
                                                                    ((state
                                                                    -> result)
                                                                    [@closure
                                                                    :(int *
                                                                    nat *
                                                                    address *
                                                                    ((unit ->
                                                                    'h48
                                                                    result)
                                                                    [@closure
                                                                    :nat]) *
                                                                    address *
                                                                    (((address,
                                                                    int) map
                                                                    ->
                                                                    ((address
                                                                    ->
                                                                    ((int ->
                                                                    (address,
                                                                    int) map)
                                                                    [@closure
                                                                    :((int ->
                                                                    ((int ->
                                                                    int)[@closure
                                                                    :int])) *
                                                                    address *
                                                                    (address,
                                                                    int) map)]))
                                                                    [@closure
                                                                    :((int ->
                                                                    ((int ->
                                                                    int)[@closure
                                                                    :int])) *
                                                                    (address,
                                                                    int) map)]))
                                                                    [@closure
                                                                    :int ->
                                                                    ((int ->
                                                                    int)
                                                                    [@closure
                                                                    :int])])
                                                                    *
                                                                    (int ->
                                                                    ((int ->
                                                                    bool)
                                                                    [@closure
                                                                    :int])) *
                                                                    (bool ->
                                                                    ((bool ->
                                                                    bool)
                                                                    [@closure
                                                                    :bool]))
                                                                    *
                                                                    ('g50
                                                                    option ->
                                                                    (('i44 ->
                                                                    ('g50,
                                                                    'i44)
                                                                    result)
                                                                    [@closure
                                                                    :'g50
                                                                    option]))
                                                                    *
                                                                    (int ->
                                                                    ((int ->
                                                                    int)
                                                                    [@closure
                                                                    :int])) *
                                                                    address)]))
                                                                    [@closure
                                                                    :(nat *
                                                                    address *
                                                                    ((unit ->
                                                                    'x43
                                                                    result)
                                                                    [@closure
                                                                    :nat]) *
                                                                    address *
                                                                    (((address,
                                                                    int) map
                                                                    ->
                                                                    ((address
                                                                    ->
                                                                    ((int ->
                                                                    (address,
                                                                    int) map)
                                                                    [@closure
                                                                    :((int ->
                                                                    ((int ->
                                                                    int)[@closure
                                                                    :int])) *
                                                                    address *
                                                                    (address,
                                                                    int) map)]))
                                                                    [@closure
                                                                    :((int ->
                                                                    ((int ->
                                                                    int)[@closure
                                                                    :int])) *
                                                                    (address,
                                                                    int) map)]))
                                                                    [@closure
                                                                    :int ->
                                                                    ((int ->
                                                                    int)
                                                                    [@closure
                                                                    :int])])
                                                                    *
                                                                    (int ->
                                                                    ((int ->
                                                                    bool)
                                                                    [@closure
                                                                    :int])) *
                                                                    (bool ->
                                                                    ((bool ->
                                                                    bool)
                                                                    [@closure
                                                                    :bool]))
                                                                    *
                                                                    ('y43
                                                                    option ->
                                                                    (('a49 ->
                                                                    ('a49,
                                                                    'y43)
                                                                    result)
                                                                    [@closure
                                                                    :'y43
                                                                    option]))
                                                                    *
                                                                    (int ->
                                                                    ((int ->
                                                                    int)
                                                                    [@closure
                                                                    :int])) *
                                                                    address)]))
                                                                    [@closure
                                                                    :(nat *
                                                                    address *
                                                                    ((unit ->
                                                                    'a44
                                                                    result)
                                                                    [@closure
                                                                    :nat]) *
                                                                    address *
                                                                    (((address,
                                                                    int) map
                                                                    ->
                                                                    ((address
                                                                    ->
                                                                    ((int ->
                                                                    (address,
                                                                    int) map)
                                                                    [@closure
                                                                    :((int ->
                                                                    ((int ->
                                                                    int)[@closure
                                                                    :int])) *
                                                                    address *
                                                                    (address,
                                                                    int) map)]))
                                                                    [@closure
                                                                    :((int ->
                                                                    ((int ->
                                                                    int)[@closure
                                                                    :int])) *
                                                                    (address,
                                                                    int) map)]))
                                                                    [@closure
                                                                    :int ->
                                                                    ((int ->
                                                                    int)
                                                                    [@closure
                                                                    :int])])
                                                                    *
                                                                    (int ->
                                                                    ((int ->
                                                                    bool)
                                                                    [@closure
                                                                    :int])) *
                                                                    (bool ->
                                                                    ((bool ->
                                                                    bool)
                                                                    [@closure
                                                                    :bool]))
                                                                    *
                                                                    ('v47
                                                                    option ->
                                                                    (('n49 ->
                                                                    ('n49,
                                                                    'v47)
                                                                    result)
                                                                    [@closure
                                                                    :'v47
                                                                    option]))
                                                                    *
                                                                    (int ->
                                                                    ((int ->
                                                                    int)
                                                                    [@closure
                                                                    :int])))]))
                                                                    [@closure
                                                                    :(nat *
                                                                    address *
                                                                    ((unit ->
                                                                    'f42
                                                                    result)
                                                                    [@closure
                                                                    :nat]) *
                                                                    (((address,
                                                                    int) map
                                                                    ->
                                                                    ((address
                                                                    ->
                                                                    ((int ->
                                                                    (address,
                                                                    int) map)
                                                                    [@closure
                                                                    :((int ->
                                                                    ((int ->
                                                                    int)[@closure
                                                                    :int])) *
                                                                    address *
                                                                    (address,
                                                                    int) map)]))
                                                                    [@closure
                                                                    :((int ->
                                                                    ((int ->
                                                                    int)[@closure
                                                                    :int])) *
                                                                    (address,
                                                                    int) map)]))
                                                                    [@closure
                                                                    :int ->
                                                                    ((int ->
                                                                    int)
                                                                    [@closure
                                                                    :int])])
                                                                    *
                                                                    (int ->
                                                                    ((int ->
                                                                    bool)
                                                                    [@closure
                                                                    :int])) *
                                                                    (bool ->
                                                                    ((bool ->
                                                                    bool)
                                                                    [@closure
                                                                    :bool]))
                                                                    *
                                                                    ('w49
                                                                    option ->
                                                                    (('b46 ->
                                                                    ('b46,
                                                                    'w49)
                                                                    result)
                                                                    [@closure
                                                                    :'w49
                                                                    option]))
                                                                    *
                                                                    (int ->
                                                                    ((int ->
                                                                    int)
                                                                    [@closure
                                                                    :int])))]))
                                                                    [@closure
                                                                    :(nat *
                                                                    ((unit ->
                                                                    's48
                                                                    result)
                                                                    [@closure
                                                                    :nat]) *
                                                                    (((address,
                                                                    int) map
                                                                    ->
                                                                    ((address
                                                                    ->
                                                                    ((int ->
                                                                    (address,
                                                                    int) map)
                                                                    [@closure
                                                                    :((int ->
                                                                    ((int ->
                                                                    int)[@closure
                                                                    :int])) *
                                                                    address *
                                                                    (address,
                                                                    int) map)]))
                                                                    [@closure
                                                                    :((int ->
                                                                    ((int ->
                                                                    int)[@closure
                                                                    :int])) *
                                                                    (address,
                                                                    int) map)]))
                                                                    [@closure
                                                                    :int ->
                                                                    ((int ->
                                                                    int)
                                                                    [@closure
                                                                    :int])])
                                                                    *
                                                                    (int ->
                                                                    ((int ->
                                                                    bool)
                                                                    [@closure
                                                                    :int])) *
                                                                    (bool ->
                                                                    ((bool ->
                                                                    bool)
                                                                    [@closure
                                                                    :bool]))
                                                                    *
                                                                    ('l46
                                                                    option ->
                                                                    (('y42 ->
                                                                    ('l46,
                                                                    'y42)
                                                                    result)
                                                                    [@closure
                                                                    :'l46
                                                                    option]))
                                                                    *
                                                                    (int ->
                                                                    ((int ->
                                                                    int)
                                                                    [@closure
                                                                    :int])))]))]))
                                                [@closure
                                                  :((timestamp * (address *
                                                     (dun * dun))) * nat *
                                                     (address ->
                                                        ((address ->
                                                            ((int ->
                                                                ((state ->
                                                                    'd41
                                                                    result)
                                                                [@closure
                                                                  :(int *
                                                                    address *
                                                                    address)]))
                                                            [@closure
                                                              :(address *
                                                                 address)]))
                                                        [@closure :address]))
                                                     *
                                                     ((address ->
                                                         ((address ->
                                                             ((int ->
                                                                 ((state ->
                                                                    result)
                                                                 [@closure
                                                                   :(int *
                                                                    ((unit ->
                                                                    'y47
                                                                    result)
                                                                    [@closure
                                                                    :nat]) *
                                                                    address *
                                                                    (((address,
                                                                    int) map
                                                                    ->
                                                                    ((address
                                                                    ->
                                                                    ((int ->
                                                                    (address,
                                                                    int) map)
                                                                    [@closure
                                                                    :((int ->
                                                                    ((int ->
                                                                    int)[@closure
                                                                    :int])) *
                                                                    address *
                                                                    (address,
                                                                    int) map)]))
                                                                    [@closure
                                                                    :((int ->
                                                                    ((int ->
                                                                    int)[@closure
                                                                    :int])) *
                                                                    (address,
                                                                    int) map)]))
                                                                    [@closure
                                                                    :int ->
                                                                    ((int ->
                                                                    int)
                                                                    [@closure
                                                                    :int])])
                                                                    *
                                                                    (int ->
                                                                    ((int ->
                                                                    bool)
                                                                    [@closure
                                                                    :int])) *
                                                                    (int ->
                                                                    ((int ->
                                                                    int)
                                                                    [@closure
                                                                    :int])) *
                                                                    address)]))
                                                             [@closure
                                                               :(((unit ->
                                                                    'z43
                                                                    result)
                                                                  [@closure
                                                                    :
                                                                    nat])
                                                                  * address *
                                                                  (((address,
                                                                    int) map
                                                                    ->
                                                                    ((address
                                                                    ->
                                                                    ((int ->
                                                                    (address,
                                                                    int) map)
                                                                    [@closure
                                                                    :((int ->
                                                                    ((int ->
                                                                    int)[@closure
                                                                    :int])) *
                                                                    address *
                                                                    (address,
                                                                    int) map)]))
                                                                    [@closure
                                                                    :((int ->
                                                                    ((int ->
                                                                    int)[@closure
                                                                    :int])) *
                                                                    (address,
                                                                    int) map)]))
                                                                  [@closure
                                                                    :
                                                                    int ->
                                                                    ((int ->
                                                                    int)
                                                                    [@closure
                                                                    :int])])
                                                                  *
                                                                  (int ->
                                                                    ((
                                                                    int ->
                                                                    bool)
                                                                    [@closure
                                                                    :int]))
                                                                  *
                                                                  (int ->
                                                                    ((
                                                                    int ->
                                                                    int)
                                                                    [@closure
                                                                    :int]))
                                                                  * address)]))
                                                         [@closure
                                                           :(((unit ->
                                                                 'v49 result)
                                                              [@closure :
                                                                nat])
                                                              * address *
                                                              (((address,
                                                                  int) map ->
                                                                  ((address
                                                                    ->
                                                                    ((int ->
                                                                    (address,
                                                                    int) map)
                                                                    [@closure
                                                                    :((int ->
                                                                    ((int ->
                                                                    int)[@closure
                                                                    :int])) *
                                                                    address *
                                                                    (address,
                                                                    int) map)]))
                                                                  [@closure
                                                                    :
                                                                    ((int ->
                                                                    ((int ->
                                                                    int)[@closure
                                                                    :int])) *
                                                                    (address,
                                                                    int) map)]))
                                                              [@closure
                                                                :int ->
                                                                   ((
                                                                   int -> 
                                                                    int)
                                                                   [@closure
                                                                    :int])])
                                                              *
                                                              (int ->
                                                                 ((int ->
                                                                    bool)
                                                                 [@closure
                                                                   :int]))
                                                              *
                                                              (int ->
                                                                 ((int -> int)
                                                                 [@closure
                                                                   :int])))]))
                                                     [@closure
                                                       :(((unit ->
                                                             's44 result)
                                                          [@closure :
                                                            nat])
                                                          *
                                                          (((address, 
                                                              int) map ->
                                                              ((address ->
                                                                  ((int ->
                                                                    (address,
                                                                    int) map)
                                                                  [@closure
                                                                    :
                                                                    ((int ->
                                                                    ((int ->
                                                                    int)[@closure
                                                                    :int])) *
                                                                    address *
                                                                    (address,
                                                                    int) map)]))
                                                              [@closure
                                                                :((int ->
                                                                    ((
                                                                    int ->
                                                                    int)
                                                                    [@closure
                                                                    :int]))
                                                                   *
                                                                   (address,
                                                                   int) map)]))
                                                          [@closure
                                                            :int ->
                                                               ((int -> int)
                                                               [@closure
                                                                 :int])])
                                                          *
                                                          (int ->
                                                             ((int -> bool)
                                                             [@closure :
                                                               int]))
                                                          *
                                                          (int ->
                                                             ((int -> int)
                                                             [@closure :
                                                               int])))])
                                                     *
                                                     ((address ->
                                                         ((address ->
                                                             ((address ->
                                                                 ((int ->
                                                                    ((
                                                                    state ->
                                                                    result)
                                                                    [@closure
                                                                    :(int *
                                                                    nat *
                                                                    address *
                                                                    ((unit ->
                                                                    'd50
                                                                    result)
                                                                    [@closure
                                                                    :nat]) *
                                                                    address *
                                                                    (((address,
                                                                    int) map
                                                                    ->
                                                                    ((address
                                                                    ->
                                                                    ((int ->
                                                                    (address,
                                                                    int) map)
                                                                    [@closure
                                                                    :((int ->
                                                                    ((int ->
                                                                    int)[@closure
                                                                    :int])) *
                                                                    address *
                                                                    (address,
                                                                    int) map)]))
                                                                    [@closure
                                                                    :((int ->
                                                                    ((int ->
                                                                    int)[@closure
                                                                    :int])) *
                                                                    (address,
                                                                    int) map)]))
                                                                    [@closure
                                                                    :int ->
                                                                    ((int ->
                                                                    int)
                                                                    [@closure
                                                                    :int])])
                                                                    *
                                                                    (int ->
                                                                    ((int ->
                                                                    bool)
                                                                    [@closure
                                                                    :int])) *
                                                                    (bool ->
                                                                    ((bool ->
                                                                    bool)
                                                                    [@closure
                                                                    :bool]))
                                                                    *
                                                                    ('w47
                                                                    option ->
                                                                    (('g44 ->
                                                                    ('g44,
                                                                    'w47)
                                                                    result)
                                                                    [@closure
                                                                    :'w47
                                                                    option]))
                                                                    *
                                                                    (int ->
                                                                    ((int ->
                                                                    int)
                                                                    [@closure
                                                                    :int])) *
                                                                    address)]))
                                                                 [@closure
                                                                   :(nat *
                                                                    address *
                                                                    ((unit ->
                                                                    'j44
                                                                    result)
                                                                    [@closure
                                                                    :nat]) *
                                                                    address *
                                                                    (((address,
                                                                    int) map
                                                                    ->
                                                                    ((address
                                                                    ->
                                                                    ((int ->
                                                                    (address,
                                                                    int) map)
                                                                    [@closure
                                                                    :((int ->
                                                                    ((int ->
                                                                    int)[@closure
                                                                    :int])) *
                                                                    address *
                                                                    (address,
                                                                    int) map)]))
                                                                    [@closure
                                                                    :((int ->
                                                                    ((int ->
                                                                    int)[@closure
                                                                    :int])) *
                                                                    (address,
                                                                    int) map)]))
                                                                    [@closure
                                                                    :int ->
                                                                    ((int ->
                                                                    int)
                                                                    [@closure
                                                                    :int])])
                                                                    *
                                                                    (int ->
                                                                    ((int ->
                                                                    bool)
                                                                    [@closure
                                                                    :int])) *
                                                                    (bool ->
                                                                    ((bool ->
                                                                    bool)
                                                                    [@closure
                                                                    :bool]))
                                                                    *
                                                                    ('h46
                                                                    option ->
                                                                    (('z47 ->
                                                                    ('h46,
                                                                    'z47)
                                                                    result)
                                                                    [@closure
                                                                    :'h46
                                                                    option]))
                                                                    *
                                                                    (int ->
                                                                    ((int ->
                                                                    int)
                                                                    [@closure
                                                                    :int])) *
                                                                    address)]))
                                                             [@closure
                                                               :(nat *
                                                                  address *
                                                                  ((unit ->
                                                                    't46
                                                                    result)
                                                                  [@closure
                                                                    :
                                                                    nat])
                                                                  * address *
                                                                  (((address,
                                                                    int) map
                                                                    ->
                                                                    ((address
                                                                    ->
                                                                    ((int ->
                                                                    (address,
                                                                    int) map)
                                                                    [@closure
                                                                    :((int ->
                                                                    ((int ->
                                                                    int)[@closure
                                                                    :int])) *
                                                                    address *
                                                                    (address,
                                                                    int) map)]))
                                                                    [@closure
                                                                    :((int ->
                                                                    ((int ->
                                                                    int)[@closure
                                                                    :int])) *
                                                                    (address,
                                                                    int) map)]))
                                                                  [@closure
                                                                    :
                                                                    int ->
                                                                    ((int ->
                                                                    int)
                                                                    [@closure
                                                                    :int])])
                                                                  *
                                                                  (int ->
                                                                    ((
                                                                    int ->
                                                                    bool)
                                                                    [@closure
                                                                    :int]))
                                                                  *
                                                                  (bool ->
                                                                    ((
                                                                    bool ->
                                                                    bool)
                                                                    [@closure
                                                                    :bool]))
                                                                  *
                                                                  ('i48
                                                                    option ->
                                                                    ((
                                                                    'o42 ->
                                                                    ('i48,
                                                                    'o42)
                                                                    result)
                                                                    [@closure
                                                                    :'i48
                                                                    option]))
                                                                  *
                                                                  (int ->
                                                                    ((
                                                                    int ->
                                                                    int)
                                                                    [@closure
                                                                    :int])))]))
                                                         [@closure
                                                           :(nat * address *
                                                              ((unit ->
                                                                  'd42 result)
                                                              [@closure :
                                                                nat])
                                                              *
                                                              (((address,
                                                                  int) map ->
                                                                  ((address
                                                                    ->
                                                                    ((int ->
                                                                    (address,
                                                                    int) map)
                                                                    [@closure
                                                                    :((int ->
                                                                    ((int ->
                                                                    int)[@closure
                                                                    :int])) *
                                                                    address *
                                                                    (address,
                                                                    int) map)]))
                                                                  [@closure
                                                                    :
                                                                    ((int ->
                                                                    ((int ->
                                                                    int)[@closure
                                                                    :int])) *
                                                                    (address,
                                                                    int) map)]))
                                                              [@closure
                                                                :int ->
                                                                   ((
                                                                   int -> 
                                                                    int)
                                                                   [@closure
                                                                    :int])])
                                                              *
                                                              (int ->
                                                                 ((int ->
                                                                    bool)
                                                                 [@closure
                                                                   :int]))
                                                              *
                                                              (bool ->
                                                                 ((bool ->
                                                                    bool)
                                                                 [@closure
                                                                   :bool]))
                                                              *
                                                              ('n42 option ->
                                                                 (('m47 ->
                                                                    ('m47,
                                                                    'n42)
                                                                    result)
                                                                 [@closure
                                                                   :'n42
                                                                    option]))
                                                              *
                                                              (int ->
                                                                 ((int -> int)
                                                                 [@closure
                                                                   :int])))]))
                                                     [@closure
                                                       :(nat *
                                                          ((unit ->
                                                              'g42 result)
                                                          [@closure :
                                                            nat])
                                                          *
                                                          (((address, 
                                                              int) map ->
                                                              ((address ->
                                                                  ((int ->
                                                                    (address,
                                                                    int) map)
                                                                  [@closure
                                                                    :
                                                                    ((int ->
                                                                    ((int ->
                                                                    int)[@closure
                                                                    :int])) *
                                                                    address *
                                                                    (address,
                                                                    int) map)]))
                                                              [@closure
                                                                :((int ->
                                                                    ((
                                                                    int ->
                                                                    int)
                                                                    [@closure
                                                                    :int]))
                                                                   *
                                                                   (address,
                                                                   int) map)]))
                                                          [@closure
                                                            :int ->
                                                               ((int -> int)
                                                               [@closure
                                                                 :int])])
                                                          *
                                                          (int ->
                                                             ((int -> bool)
                                                             [@closure :
                                                               int]))
                                                          *
                                                          (bool ->
                                                             ((bool -> bool)
                                                             [@closure :
                                                               bool]))
                                                          *
                                                          ('y45 option ->
                                                             (('p47 ->
                                                                 ('p47, 
                                                                   'y45)
                                                                   result)
                                                             [@closure
                                                               :'y45 option]))
                                                          *
                                                          (int ->
                                                             ((int -> int)
                                                             [@closure :
                                                               int])))]))]))
                                           [@closure
                                             :(nat *
                                                (address ->
                                                   ((address ->
                                                       ((int ->
                                                           ((state ->
                                                               't45 result)
                                                           [@closure
                                                             :(int * address
                                                                * address)]))
                                                       [@closure
                                                         :(address * address)]))
                                                   [@closure :address]))
                                                *
                                                ((address ->
                                                    ((address ->
                                                        ((int ->
                                                            ((state -> result)
                                                            [@closure
                                                              :(int *
                                                                 ((unit ->
                                                                    'b41
                                                                    result)
                                                                 [@closure
                                                                   :nat])
                                                                 * address *
                                                                 (((address,
                                                                    int) map
                                                                    ->
                                                                    ((
                                                                    address
                                                                    ->
                                                                    ((int ->
                                                                    (address,
                                                                    int) map)
                                                                    [@closure
                                                                    :((int ->
                                                                    ((int ->
                                                                    int)[@closure
                                                                    :int])) *
                                                                    address *
                                                                    (address,
                                                                    int) map)]))
                                                                    [@closure
                                                                    :((int ->
                                                                    ((int ->
                                                                    int)[@closure
                                                                    :int])) *
                                                                    (address,
                                                                    int) map)]))
                                                                 [@closure
                                                                   :int ->
                                                                    ((int ->
                                                                    int)
                                                                    [@closure
                                                                    :int])])
                                                                 *
                                                                 (int ->
                                                                    ((
                                                                    int ->
                                                                    bool)
                                                                    [@closure
                                                                    :int]))
                                                                 *
                                                                 (int ->
                                                                    ((
                                                                    int ->
                                                                    int)
                                                                    [@closure
                                                                    :int]))
                                                                 * address)]))
                                                        [@closure
                                                          :(((unit ->
                                                                'q45 result)
                                                             [@closure :
                                                               nat])
                                                             * address *
                                                             (((address, 
                                                                 int) map ->
                                                                 ((address ->
                                                                    ((
                                                                    int ->
                                                                    (address,
                                                                    int) map)
                                                                    [@closure
                                                                    :((int ->
                                                                    ((int ->
                                                                    int)[@closure
                                                                    :int])) *
                                                                    address *
                                                                    (address,
                                                                    int) map)]))
                                                                 [@closure
                                                                   :((int ->
                                                                    ((int ->
                                                                    int)[@closure
                                                                    :int])) *
                                                                    (address,
                                                                    int) map)]))
                                                             [@closure
                                                               :int ->
                                                                  ((int ->
                                                                    int)
                                                                  [@closure
                                                                    :
                                                                    int])])
                                                             *
                                                             (int ->
                                                                ((int -> bool)
                                                                [@closure
                                                                  :int]))
                                                             *
                                                             (int ->
                                                                ((int -> int)
                                                                [@closure
                                                                  :int]))
                                                             * address)]))
                                                    [@closure
                                                      :(((unit -> 't49 result)
                                                         [@closure :nat]) *
                                                         address *
                                                         (((address, 
                                                             int) map ->
                                                             ((address ->
                                                                 ((int ->
                                                                    (address,
                                                                    int) map)
                                                                 [@closure
                                                                   :((int ->
                                                                    ((int ->
                                                                    int)[@closure
                                                                    :int])) *
                                                                    address *
                                                                    (address,
                                                                    int) map)]))
                                                             [@closure
                                                               :((int ->
                                                                    ((
                                                                    int ->
                                                                    int)
                                                                    [@closure
                                                                    :int]))
                                                                  * (
                                                                  address,
                                                                  int) map)]))
                                                         [@closure
                                                           :int ->
                                                              ((int -> int)
                                                              [@closure :
                                                                int])])
                                                         *
                                                         (int ->
                                                            ((int -> bool)
                                                            [@closure :
                                                              int]))
                                                         *
                                                         (int ->
                                                            ((int -> int)
                                                            [@closure :
                                                              int])))]))
                                                [@closure
                                                  :(((unit -> 'f44 result)
                                                     [@closure :nat]) *
                                                     (((address, int) map ->
                                                         ((address ->
                                                             ((int ->
                                                                 (address,
                                                                   int) map)
                                                             [@closure
                                                               :((int ->
                                                                    ((
                                                                    int ->
                                                                    int)
                                                                    [@closure
                                                                    :int]))
                                                                  * address *
                                                                  (address,
                                                                  int) map)]))
                                                         [@closure
                                                           :((int ->
                                                                ((int -> int)
                                                                [@closure
                                                                  :int]))
                                                              * (address,
                                                              int) map)]))
                                                     [@closure
                                                       :int ->
                                                          ((int -> int)
                                                          [@closure :
                                                            int])])
                                                     *
                                                     (int ->
                                                        ((int -> bool)
                                                        [@closure :int]))
                                                     *
                                                     (int ->
                                                        ((int -> int)
                                                        [@closure :int])))])
                                                *
                                                ((address ->
                                                    ((address ->
                                                        ((address ->
                                                            ((int ->
                                                                ((state ->
                                                                    result)
                                                                [@closure
                                                                  :(int * nat
                                                                    * address
                                                                    *
                                                                    ((
                                                                    unit ->
                                                                    'r48
                                                                    result)
                                                                    [@closure
                                                                    :nat]) *
                                                                    address *
                                                                    ((
                                                                    (address,
                                                                    int) map
                                                                    ->
                                                                    ((address
                                                                    ->
                                                                    ((int ->
                                                                    (address,
                                                                    int) map)
                                                                    [@closure
                                                                    :((int ->
                                                                    ((int ->
                                                                    int)[@closure
                                                                    :int])) *
                                                                    address *
                                                                    (address,
                                                                    int) map)]))
                                                                    [@closure
                                                                    :((int ->
                                                                    ((int ->
                                                                    int)[@closure
                                                                    :int])) *
                                                                    (address,
                                                                    int) map)]))
                                                                    [@closure
                                                                    :int ->
                                                                    ((int ->
                                                                    int)
                                                                    [@closure
                                                                    :int])])
                                                                    *
                                                                    (int ->
                                                                    ((int ->
                                                                    bool)
                                                                    [@closure
                                                                    :int])) *
                                                                    (bool ->
                                                                    ((bool ->
                                                                    bool)
                                                                    [@closure
                                                                    :bool]))
                                                                    *
                                                                    ('u46
                                                                    option ->
                                                                    (('x42 ->
                                                                    ('u46,
                                                                    'x42)
                                                                    result)
                                                                    [@closure
                                                                    :'u46
                                                                    option]))
                                                                    *
                                                                    (int ->
                                                                    ((int ->
                                                                    int)
                                                                    [@closure
                                                                    :int])) *
                                                                    address)]))
                                                            [@closure
                                                              :(nat * address
                                                                 *
                                                                 ((unit ->
                                                                    'k49
                                                                    result)
                                                                 [@closure
                                                                   :nat])
                                                                 * address *
                                                                 (((address,
                                                                    int) map
                                                                    ->
                                                                    ((
                                                                    address
                                                                    ->
                                                                    ((int ->
                                                                    (address,
                                                                    int) map)
                                                                    [@closure
                                                                    :((int ->
                                                                    ((int ->
                                                                    int)[@closure
                                                                    :int])) *
                                                                    address *
                                                                    (address,
                                                                    int) map)]))
                                                                    [@closure
                                                                    :((int ->
                                                                    ((int ->
                                                                    int)[@closure
                                                                    :int])) *
                                                                    (address,
                                                                    int) map)]))
                                                                 [@closure
                                                                   :int ->
                                                                    ((int ->
                                                                    int)
                                                                    [@closure
                                                                    :int])])
                                                                 *
                                                                 (int ->
                                                                    ((
                                                                    int ->
                                                                    bool)
                                                                    [@closure
                                                                    :int]))
                                                                 *
                                                                 (bool ->
                                                                    ((
                                                                    bool ->
                                                                    bool)
                                                                    [@closure
                                                                    :bool]))
                                                                 *
                                                                 ('r45 option
                                                                    ->
                                                                    ((
                                                                    'w42 ->
                                                                    ('r45,
                                                                    'w42)
                                                                    result)
                                                                    [@closure
                                                                    :'r45
                                                                    option]))
                                                                 *
                                                                 (int ->
                                                                    ((
                                                                    int ->
                                                                    int)
                                                                    [@closure
                                                                    :int]))
                                                                 * address)]))
                                                        [@closure
                                                          :(nat * address *
                                                             ((unit ->
                                                                 'f48 result)
                                                             [@closure :
                                                               nat])
                                                             * address *
                                                             (((address, 
                                                                 int) map ->
                                                                 ((address ->
                                                                    ((
                                                                    int ->
                                                                    (address,
                                                                    int) map)
                                                                    [@closure
                                                                    :((int ->
                                                                    ((int ->
                                                                    int)[@closure
                                                                    :int])) *
                                                                    address *
                                                                    (address,
                                                                    int) map)]))
                                                                 [@closure
                                                                   :((int ->
                                                                    ((int ->
                                                                    int)[@closure
                                                                    :int])) *
                                                                    (address,
                                                                    int) map)]))
                                                             [@closure
                                                               :int ->
                                                                  ((int ->
                                                                    int)
                                                                  [@closure
                                                                    :
                                                                    int])])
                                                             *
                                                             (int ->
                                                                ((int -> bool)
                                                                [@closure
                                                                  :int]))
                                                             *
                                                             (bool ->
                                                                ((bool ->
                                                                    bool)
                                                                [@closure
                                                                  :bool]))
                                                             *
                                                             ('z45 option ->
                                                                (('m42 ->
                                                                    ('m42,
                                                                    'z45)
                                                                    result)
                                                                [@closure
                                                                  :'z45
                                                                    option]))
                                                             *
                                                             (int ->
                                                                ((int -> int)
                                                                [@closure
                                                                  :int])))]))
                                                    [@closure
                                                      :(nat * address *
                                                         ((unit ->
                                                             'p42 result)
                                                         [@closure :nat]) *
                                                         (((address, 
                                                             int) map ->
                                                             ((address ->
                                                                 ((int ->
                                                                    (address,
                                                                    int) map)
                                                                 [@closure
                                                                   :((int ->
                                                                    ((int ->
                                                                    int)[@closure
                                                                    :int])) *
                                                                    address *
                                                                    (address,
                                                                    int) map)]))
                                                             [@closure
                                                               :((int ->
                                                                    ((
                                                                    int ->
                                                                    int)
                                                                    [@closure
                                                                    :int]))
                                                                  * (
                                                                  address,
                                                                  int) map)]))
                                                         [@closure
                                                           :int ->
                                                              ((int -> int)
                                                              [@closure :
                                                                int])])
                                                         *
                                                         (int ->
                                                            ((int -> bool)
                                                            [@closure :
                                                              int]))
                                                         *
                                                         (bool ->
                                                            ((bool -> bool)
                                                            [@closure :
                                                              bool]))
                                                         *
                                                         ('o44 option ->
                                                            (('c46 ->
                                                                ('c46, 
                                                                  'o44)
                                                                  result)
                                                            [@closure
                                                              :'o44 option]))
                                                         *
                                                         (int ->
                                                            ((int -> int)
                                                            [@closure :
                                                              int])))]))
                                                [@closure
                                                  :(nat *
                                                     ((unit -> 'i45 result)
                                                     [@closure :nat]) *
                                                     (((address, int) map ->
                                                         ((address ->
                                                             ((int ->
                                                                 (address,
                                                                   int) map)
                                                             [@closure
                                                               :((int ->
                                                                    ((
                                                                    int ->
                                                                    int)
                                                                    [@closure
                                                                    :int]))
                                                                  * address *
                                                                  (address,
                                                                  int) map)]))
                                                         [@closure
                                                           :((int ->
                                                                ((int -> int)
                                                                [@closure
                                                                  :int]))
                                                              * (address,
                                                              int) map)]))
                                                     [@closure
                                                       :int ->
                                                          ((int -> int)
                                                          [@closure :
                                                            int])])
                                                     *
                                                     (int ->
                                                        ((int -> bool)
                                                        [@closure :int]))
                                                     *
                                                     (bool ->
                                                        ((bool -> bool)
                                                        [@closure :bool]))
                                                     *
                                                     ('k46 option ->
                                                        (('f50 ->
                                                            ('f50, 'k46)
                                                              result)
                                                        [@closure
                                                          :'k46 option]))
                                                     *
                                                     (int ->
                                                        ((int -> int)
                                                        [@closure :int])))]))])]))]). Type variables 'a41, 'a44, 'a45, 'a46, 'a49, 'b41, 'b45, 'b46, 'b47, 'b49, 'c41, 'c46, 'c47, 'c49, 'd41, 'd42, 'd47, 'd49, 'd50, 'e41, 'e42, 'e43, 'e47, 'e50, 'f42, 'f43, 'f44, 'f47, 'f48, 'f50, 'g42, 'g43, 'g44, 'g45, 'g48, 'g50, 'h43, 'h44, 'h45, 'h46, 'h48, 'h50, 'i44, 'i45, 'i46, 'i48, 'j44, 'j45, 'j46, 'j48, 'j49, 'k41, 'k45, 'k46, 'k49, 'l41, 'l46, 'l47, 'l49, 'm41, 'm42, 'm47, 'm49, 'n41, 'n42, 'n47, 'n49, 'o41, 'o42, 'o43, 'o44, 'o47, 'p42, 'p43, 'p44, 'p45, 'p47, 'p48, 'q43, 'q44, 'q45, 'q48, 'r43, 'r44, 'r45, 'r46, 'r48, 's44, 's45, 's46, 's48, 't45, 't46, 't48, 't49, 'u41, 'u46, 'u49, 'v41, 'v42, 'v46, 'v47, 'v49, 'w41, 'w42, 'w47, 'w49, 'x41, 'x42, 'x43, 'x44, 'x47, 'x49, 'y42, 'y43, 'y44, 'y45, 'y47, 'z43, 'z44, 'z45, 'z47, 'z48 were replaced by unit.
./tests/extracted-code/liquidity-extract/tests/liquidity_eip20token.liq:125.56-126.123: Warning: 
Unresolved type ((setup -> 'o50 result)[@closure :(timestamp * (address * (dun * dun)))]). Type variables 'o50 were replaced by unit.
./tests/extracted-code/liquidity-extract/tests/liquidity_eip20token.liq:125.74-126.123: Warning: 
Unresolved type 'o50 result. Type variables 'o50 were replaced by unit.
Storage initializer generated in "tests/extracted-code/liquidity-extract/tests/liquidity_eip20token.initializer.tz"
File "tests/extracted-code/liquidity-extract/tests/liquidity_eip20token.tz" generated
You may want to typecheck with:
  dune-client typecheck script tests/extracted-code/liquidity-extract/tests/liquidity_eip20token.tz
